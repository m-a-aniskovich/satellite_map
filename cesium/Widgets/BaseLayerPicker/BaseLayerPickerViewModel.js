import{defaultValue,defined,DeveloperError,EllipsoidTerrainProvider,ImageryLayer,Terrain}from"@cesium/engine";import knockout from"../ThirdParty/knockout.js";import createCommand from"../createCommand.js";function BaseLayerPickerViewModel(e){const r=(e=defaultValue(e,defaultValue.EMPTY_OBJECT)).globe,t=defaultValue(e.imageryProviderViewModels,[]),i=defaultValue(e.terrainProviderViewModels,[]);if(!defined(r))throw new DeveloperError("globe is required");this._globe=r,this.imageryProviderViewModels=t.slice(0),this.terrainProviderViewModels=i.slice(0),this.dropDownVisible=!1,knockout.track(this,["imageryProviderViewModels","terrainProviderViewModels","dropDownVisible"]);const o=knockout.getObservable(this,"imageryProviderViewModels"),n=knockout.pureComputed((function(){const e=o(),r={};let t;for(t=0;t<e.length;t++){const i=e[t],o=i.category;defined(r[o])?r[o].push(i):r[o]=[i]}const i=Object.keys(r),n=[];for(t=0;t<i.length;t++){const e=i[t];n.push({name:e,providers:r[e]})}return n}));this._imageryProviders=n;const s=knockout.getObservable(this,"terrainProviderViewModels"),d=knockout.pureComputed((function(){const e=s(),r={};let t;for(t=0;t<e.length;t++){const i=e[t],o=i.category;defined(r[o])?r[o].push(i):r[o]=[i]}const i=Object.keys(r),o=[];for(t=0;t<i.length;t++){const e=i[t];o.push({name:e,providers:r[e]})}return o}));this._terrainProviders=d,this.buttonTooltip=void 0,knockout.defineProperty(this,"buttonTooltip",(function(){const e=this.selectedImagery,r=this.selectedTerrain,t=defined(e)?e.name:void 0,i=defined(r)?r.name:void 0;return defined(t)&&defined(i)?`${t}\n${i}`:defined(t)?t:i})),this.buttonImageUrl=void 0,knockout.defineProperty(this,"buttonImageUrl",(function(){const e=this.selectedImagery;if(defined(e))return e.iconUrl})),this.selectedImagery=void 0;const a=knockout.observable();this._currentImageryLayers=[],knockout.defineProperty(this,"selectedImagery",{get:function(){return a()},set:function(e){if(a()===e)return void(this.dropDownVisible=!1);let r;const t=this._currentImageryLayers,i=t.length,o=this._globe.imageryLayers;let n=!1;for(r=0;r<i;r++){const e=o.length;for(let i=0;i<e;i++){const e=o.get(i);if(e===t[r]){o.remove(e),n=!0;break}}}if(defined(e)){const t=e.creationCommand();if(Array.isArray(t)){const e=t.length;for(this._currentImageryLayers=[],r=e-1;r>=0;r--){const e=ImageryLayer.fromProviderAsync(t[r]);o.add(e,0),this._currentImageryLayers.push(e)}}else{this._currentImageryLayers=[];const r=ImageryLayer.fromProviderAsync(t);if(r.name=e.name,n)o.add(r,0);else{const e=o.get(0);defined(e)&&o.remove(e),o.add(r,0)}this._currentImageryLayers.push(r)}}a(e),this.dropDownVisible=!1}}),this.selectedTerrain=void 0;const l=knockout.observable();knockout.defineProperty(this,"selectedTerrain",{get:function(){return l()},set:function(e){if(l()===e)return void(this.dropDownVisible=!1);let r;if(defined(e)&&(r=e.creationCommand()),defined(r)&&!defined(r.then))this._globe.depthTestAgainstTerrain=!(r instanceof EllipsoidTerrainProvider),this._globe.terrainProvider=r;else if(defined(r)){let e=!1;const t=this._globe.terrainProviderChanged.addEventListener((()=>{e=!0,t()})),i=new Terrain(r).readyEvent.addEventListener((r=>{e||(this._globe.depthTestAgainstTerrain=!(r instanceof EllipsoidTerrainProvider),this._globe.terrainProvider=r,i())}))}l(e),this.dropDownVisible=!1}});const c=this;this._toggleDropDown=createCommand((function(){c.dropDownVisible=!c.dropDownVisible})),this.selectedImagery=defaultValue(e.selectedImageryProviderViewModel,t[0]),this.selectedTerrain=defaultValue(e.selectedTerrainProviderViewModel,i[0])}Object.defineProperties(BaseLayerPickerViewModel.prototype,{toggleDropDown:{get:function(){return this._toggleDropDown}},globe:{get:function(){return this._globe}}});export default BaseLayerPickerViewModel;
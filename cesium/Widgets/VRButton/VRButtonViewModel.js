import{defaultValue,defined,destroyObject,DeveloperError,EventHelper,Fullscreen,getElement,OrthographicFrustum}from"@cesium/engine";import knockout from"../ThirdParty/knockout.js";import NoSleep from"nosleep.js";import createCommand from"../createCommand.js";function lockScreen(e){let n=!1;const t=window.screen;return defined(t)&&(defined(t.lockOrientation)?n=t.lockOrientation(e):defined(t.mozLockOrientation)?n=t.mozLockOrientation(e):defined(t.msLockOrientation)?n=t.msLockOrientation(e):defined(t.orientation&&t.orientation.lock)&&(n=t.orientation.lock(e))),n}function unlockScreen(){const e=window.screen;defined(e)&&(defined(e.unlockOrientation)?e.unlockOrientation():defined(e.mozUnlockOrientation)?e.mozUnlockOrientation():defined(e.msUnlockOrientation)?e.msUnlockOrientation():defined(e.orientation&&e.orientation.unlock)&&e.orientation.unlock())}function toggleVR(e,n,t,o){o()||(t()?(n.useWebVR=!1,e._locked&&(unlockScreen(),e._locked=!1),e._noSleep.disable(),Fullscreen.exitFullscreen(),t(!1)):(Fullscreen.fullscreen||Fullscreen.requestFullscreen(e._vrElement),e._noSleep.enable(),e._locked||(e._locked=lockScreen("landscape")),n.useWebVR=!0,t(!0)))}function VRButtonViewModel(e,n){if(!defined(e))throw new DeveloperError("scene is required.");const t=this,o=knockout.observable(Fullscreen.enabled),i=knockout.observable(!1);this.isVRMode=void 0,knockout.defineProperty(this,"isVRMode",{get:function(){return i()}}),this.isVREnabled=void 0,knockout.defineProperty(this,"isVREnabled",{get:function(){return o()},set:function(e){o(e&&Fullscreen.enabled)}}),this.tooltip=void 0,knockout.defineProperty(this,"tooltip",(function(){return o()?i()?"Exit VR mode":"Enter VR mode":"VR mode is unavailable"}));const r=knockout.observable(!1);this._isOrthographic=void 0,knockout.defineProperty(this,"_isOrthographic",{get:function(){return r()}}),this._eventHelper=new EventHelper,this._eventHelper.add(e.preRender,(function(){r(e.camera.frustum instanceof OrthographicFrustum)})),this._locked=!1,this._noSleep=new NoSleep,this._command=createCommand((function(){toggleVR(t,e,i,r)}),knockout.getObservable(this,"isVREnabled")),this._vrElement=defaultValue(getElement(n),document.body),this._callback=function(){!Fullscreen.fullscreen&&i()&&(e.useWebVR=!1,t._locked&&(unlockScreen(),t._locked=!1),t._noSleep.disable(),i(!1))},document.addEventListener(Fullscreen.changeEventName,this._callback)}Object.defineProperties(VRButtonViewModel.prototype,{vrElement:{get:function(){return this._vrElement},set:function(e){if(!(e instanceof Element))throw new DeveloperError("value must be a valid Element.");this._vrElement=e}},command:{get:function(){return this._command}}}),VRButtonViewModel.prototype.isDestroyed=function(){return!1},VRButtonViewModel.prototype.destroy=function(){this._eventHelper.removeAll(),document.removeEventListener(Fullscreen.changeEventName,this._callback),destroyObject(this)};export default VRButtonViewModel;
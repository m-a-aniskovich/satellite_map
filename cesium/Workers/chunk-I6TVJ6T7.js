/*! For license information please see chunk-I6TVJ6T7.js.LICENSE.txt */
import{Cartesian2_default,Cartesian4_default,Matrix2_default,Matrix4_default}from"./chunk-RSWBNJPT.js";import{ComponentDatatype_default}from"./chunk-Z6LPXA7S.js";import{Cartesian3_default,Matrix3_default}from"./chunk-PHQVHDVI.js";import{Math_default}from"./chunk-IZED7ODV.js";import{Check_default,DeveloperError_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";var AttributeType={SCALAR:"SCALAR",VEC2:"VEC2",VEC3:"VEC3",VEC4:"VEC4",MAT2:"MAT2",MAT3:"MAT3",MAT4:"MAT4",getMathType:function(e){switch(e){case AttributeType.SCALAR:return Number;case AttributeType.VEC2:return Cartesian2_default;case AttributeType.VEC3:return Cartesian3_default;case AttributeType.VEC4:return Cartesian4_default;case AttributeType.MAT2:return Matrix2_default;case AttributeType.MAT3:return Matrix3_default;case AttributeType.MAT4:return Matrix4_default;default:throw new DeveloperError_default("attributeType is not a valid value.")}},getNumberOfComponents:function(e){switch(e){case AttributeType.SCALAR:return 1;case AttributeType.VEC2:return 2;case AttributeType.VEC3:return 3;case AttributeType.VEC4:case AttributeType.MAT2:return 4;case AttributeType.MAT3:return 9;case AttributeType.MAT4:return 16;default:throw new DeveloperError_default("attributeType is not a valid value.")}},getAttributeLocationCount:function(e){switch(e){case AttributeType.SCALAR:case AttributeType.VEC2:case AttributeType.VEC3:case AttributeType.VEC4:return 1;case AttributeType.MAT2:return 2;case AttributeType.MAT3:return 3;case AttributeType.MAT4:return 4;default:throw new DeveloperError_default("attributeType is not a valid value.")}},getGlslType:function(e){switch(Check_default.typeOf.string("attributeType",e),e){case AttributeType.SCALAR:return"float";case AttributeType.VEC2:return"vec2";case AttributeType.VEC3:return"vec3";case AttributeType.VEC4:return"vec4";case AttributeType.MAT2:return"mat2";case AttributeType.MAT3:return"mat3";case AttributeType.MAT4:return"mat4";default:throw new DeveloperError_default("attributeType is not a valid value.")}}},AttributeType_default=Object.freeze(AttributeType),RIGHT_SHIFT=1/256,LEFT_SHIFT=256,AttributeCompression={octEncodeInRange:function(e,t,r){Check_default.defined("vector",e),Check_default.defined("result",r);const a=Cartesian3_default.magnitudeSquared(e);if(Math.abs(a-1)>Math_default.EPSILON6)throw new DeveloperError_default("vector must be normalized.");if(r.x=e.x/(Math.abs(e.x)+Math.abs(e.y)+Math.abs(e.z)),r.y=e.y/(Math.abs(e.x)+Math.abs(e.y)+Math.abs(e.z)),e.z<0){const e=r.x,t=r.y;r.x=(1-Math.abs(t))*Math_default.signNotZero(e),r.y=(1-Math.abs(e))*Math_default.signNotZero(t)}return r.x=Math_default.toSNorm(r.x,t),r.y=Math_default.toSNorm(r.y,t),r},octEncode:function(e,t){return AttributeCompression.octEncodeInRange(e,255,t)}},octEncodeScratch=new Cartesian2_default,uint8ForceArray=new Uint8Array(1);function forceUint8(e){return uint8ForceArray[0]=e,uint8ForceArray[0]}AttributeCompression.octEncodeToCartesian4=function(e,t){return AttributeCompression.octEncodeInRange(e,65535,octEncodeScratch),t.x=forceUint8(octEncodeScratch.x*RIGHT_SHIFT),t.y=forceUint8(octEncodeScratch.x),t.z=forceUint8(octEncodeScratch.y*RIGHT_SHIFT),t.w=forceUint8(octEncodeScratch.y),t},AttributeCompression.octDecodeInRange=function(e,t,r,a){if(Check_default.defined("result",a),e<0||e>r||t<0||t>r)throw new DeveloperError_default(`x and y must be unsigned normalized integers between 0 and ${r}`);if(a.x=Math_default.fromSNorm(e,r),a.y=Math_default.fromSNorm(t,r),a.z=1-(Math.abs(a.x)+Math.abs(a.y)),a.z<0){const e=a.x;a.x=(1-Math.abs(a.y))*Math_default.signNotZero(e),a.y=(1-Math.abs(e))*Math_default.signNotZero(a.y)}return Cartesian3_default.normalize(a,a)},AttributeCompression.octDecode=function(e,t,r){return AttributeCompression.octDecodeInRange(e,t,255,r)},AttributeCompression.octDecodeFromCartesian4=function(e,t){Check_default.typeOf.object("encoded",e),Check_default.typeOf.object("result",t);const r=e.x,a=e.y,n=e.z,o=e.w;if(r<0||r>255||a<0||a>255||n<0||n>255||o<0||o>255)throw new DeveloperError_default("x, y, z, and w must be unsigned normalized integers between 0 and 255");const u=r*LEFT_SHIFT+a,c=n*LEFT_SHIFT+o;return AttributeCompression.octDecodeInRange(u,c,65535,t)},AttributeCompression.octPackFloat=function(e){return Check_default.defined("encoded",e),256*e.x+e.y};var scratchEncodeCart2=new Cartesian2_default;function zigZagDecode(e){return e>>1^-(1&e)}AttributeCompression.octEncodeFloat=function(e){return AttributeCompression.octEncode(e,scratchEncodeCart2),AttributeCompression.octPackFloat(scratchEncodeCart2)},AttributeCompression.octDecodeFloat=function(e,t){Check_default.defined("value",e);const r=e/256,a=Math.floor(r),n=256*(r-a);return AttributeCompression.octDecode(a,n,t)},AttributeCompression.octPack=function(e,t,r,a){Check_default.defined("v1",e),Check_default.defined("v2",t),Check_default.defined("v3",r),Check_default.defined("result",a);const n=AttributeCompression.octEncodeFloat(e),o=AttributeCompression.octEncodeFloat(t),u=AttributeCompression.octEncode(r,scratchEncodeCart2);return a.x=65536*u.x+n,a.y=65536*u.y+o,a},AttributeCompression.octUnpack=function(e,t,r,a){Check_default.defined("packed",e),Check_default.defined("v1",t),Check_default.defined("v2",r),Check_default.defined("v3",a);let n=e.x/65536;const o=Math.floor(n),u=65536*(n-o);n=e.y/65536;const c=Math.floor(n),i=65536*(n-c);AttributeCompression.octDecodeFloat(u,t),AttributeCompression.octDecodeFloat(i,r),AttributeCompression.octDecode(o,c,a)},AttributeCompression.compressTextureCoordinates=function(e){return Check_default.defined("textureCoordinates",e),4096*(4095*e.x|0)+(4095*e.y|0)},AttributeCompression.decompressTextureCoordinates=function(e,t){Check_default.defined("compressed",e),Check_default.defined("result",t);const r=e/4096,a=Math.floor(r);return t.x=a/4095,t.y=(e-4096*a)/4095,t},AttributeCompression.zigZagDeltaDecode=function(e,t,r){Check_default.defined("uBuffer",e),Check_default.defined("vBuffer",t),Check_default.typeOf.number.equals("uBuffer.length","vBuffer.length",e.length,t.length),defined_default(r)&&Check_default.typeOf.number.equals("uBuffer.length","heightBuffer.length",e.length,r.length);const a=e.length;let n=0,o=0,u=0;for(let c=0;c<a;++c)n+=zigZagDecode(e[c]),o+=zigZagDecode(t[c]),e[c]=n,t[c]=o,defined_default(r)&&(u+=zigZagDecode(r[c]),r[c]=u)},AttributeCompression.dequantize=function(e,t,r,a){Check_default.defined("typedArray",e),Check_default.defined("componentDatatype",t),Check_default.defined("type",r),Check_default.defined("count",a);const n=AttributeType_default.getNumberOfComponents(r);let o;switch(t){case ComponentDatatype_default.BYTE:o=127;break;case ComponentDatatype_default.UNSIGNED_BYTE:o=255;break;case ComponentDatatype_default.SHORT:o=32767;break;case ComponentDatatype_default.UNSIGNED_SHORT:o=65535;break;case ComponentDatatype_default.INT:o=2147483647;break;case ComponentDatatype_default.UNSIGNED_INT:o=4294967295;break;default:throw new DeveloperError_default(`Cannot dequantize component datatype: ${t}`)}const u=new Float32Array(a*n);for(let t=0;t<a;t++)for(let r=0;r<n;r++){const a=t*n+r;u[a]=Math.max(e[a]/o,-1)}return u},AttributeCompression.decodeRGB565=function(e,t){Check_default.defined("typedArray",e);const r=3*e.length;defined_default(t)&&Check_default.typeOf.number.equals("result.length","typedArray.length * 3",t.length,r);const a=e.length;defined_default(t)||(t=new Float32Array(3*a));const n=1/31;for(let r=0;r<a;r++){const a=e[r],o=a>>11,u=a>>5&63,c=31&a,i=3*r;t[i]=o*n,t[i+1]=.015873015873015872*u,t[i+2]=c*n}return t};var AttributeCompression_default=AttributeCompression;export{AttributeCompression_default};
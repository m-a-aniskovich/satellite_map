/*! For license information please see chunk-VKTKOIYG.js.LICENSE.txt */
import{GeometryOffsetAttribute_default}from"./chunk-W7F5VTH6.js";import{VertexFormat_default}from"./chunk-ZTYE74E2.js";import{GeometryAttributes_default}from"./chunk-SJDXMQSP.js";import{GeometryAttribute_default,Geometry_default,PrimitiveType_default}from"./chunk-OTBRPBCC.js";import{BoundingSphere_default}from"./chunk-D4YHO4NZ.js";import{ComponentDatatype_default}from"./chunk-Z6LPXA7S.js";import{Cartesian3_default}from"./chunk-PHQVHDVI.js";import{defaultValue_default}from"./chunk-C53JYYKX.js";import{Check_default,DeveloperError_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";var diffScratch=new Cartesian3_default;function BoxGeometry(e){const t=(e=defaultValue_default(e,defaultValue_default.EMPTY_OBJECT)).minimum,a=e.maximum;if(Check_default.typeOf.object("min",t),Check_default.typeOf.object("max",a),defined_default(e.offsetAttribute)&&e.offsetAttribute===GeometryOffsetAttribute_default.TOP)throw new DeveloperError_default("GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.");const r=defaultValue_default(e.vertexFormat,VertexFormat_default.DEFAULT);this._minimum=Cartesian3_default.clone(t),this._maximum=Cartesian3_default.clone(a),this._vertexFormat=r,this._offsetAttribute=e.offsetAttribute,this._workerName="createBoxGeometry"}BoxGeometry.fromDimensions=function(e){const t=(e=defaultValue_default(e,defaultValue_default.EMPTY_OBJECT)).dimensions;Check_default.typeOf.object("dimensions",t),Check_default.typeOf.number.greaterThanOrEquals("dimensions.x",t.x,0),Check_default.typeOf.number.greaterThanOrEquals("dimensions.y",t.y,0),Check_default.typeOf.number.greaterThanOrEquals("dimensions.z",t.z,0);const a=Cartesian3_default.multiplyByScalar(t,.5,new Cartesian3_default);return new BoxGeometry({minimum:Cartesian3_default.negate(a,new Cartesian3_default),maximum:a,vertexFormat:e.vertexFormat,offsetAttribute:e.offsetAttribute})},BoxGeometry.fromAxisAlignedBoundingBox=function(e){return Check_default.typeOf.object("boundingBox",e),new BoxGeometry({minimum:e.minimum,maximum:e.maximum})},BoxGeometry.packedLength=2*Cartesian3_default.packedLength+VertexFormat_default.packedLength+1,BoxGeometry.pack=function(e,t,a){return Check_default.typeOf.object("value",e),Check_default.defined("array",t),a=defaultValue_default(a,0),Cartesian3_default.pack(e._minimum,t,a),Cartesian3_default.pack(e._maximum,t,a+Cartesian3_default.packedLength),VertexFormat_default.pack(e._vertexFormat,t,a+2*Cartesian3_default.packedLength),t[a+2*Cartesian3_default.packedLength+VertexFormat_default.packedLength]=defaultValue_default(e._offsetAttribute,-1),t};var unitBoxGeometry,scratchMin=new Cartesian3_default,scratchMax=new Cartesian3_default,scratchVertexFormat=new VertexFormat_default,scratchOptions={minimum:scratchMin,maximum:scratchMax,vertexFormat:scratchVertexFormat,offsetAttribute:void 0};BoxGeometry.unpack=function(e,t,a){Check_default.defined("array",e),t=defaultValue_default(t,0);const r=Cartesian3_default.unpack(e,t,scratchMin),n=Cartesian3_default.unpack(e,t+Cartesian3_default.packedLength,scratchMax),o=VertexFormat_default.unpack(e,t+2*Cartesian3_default.packedLength,scratchVertexFormat),u=e[t+2*Cartesian3_default.packedLength+VertexFormat_default.packedLength];return defined_default(a)?(a._minimum=Cartesian3_default.clone(r,a._minimum),a._maximum=Cartesian3_default.clone(n,a._maximum),a._vertexFormat=VertexFormat_default.clone(o,a._vertexFormat),a._offsetAttribute=-1===u?void 0:u,a):(scratchOptions.offsetAttribute=-1===u?void 0:u,new BoxGeometry(scratchOptions))},BoxGeometry.createGeometry=function(e){const t=e._minimum,a=e._maximum,r=e._vertexFormat;if(Cartesian3_default.equals(t,a))return;const n=new GeometryAttributes_default;let o,u;if(r.position&&(r.st||r.normal||r.tangent||r.bitangent)){if(r.position&&(u=new Float64Array(72),u[0]=t.x,u[1]=t.y,u[2]=a.z,u[3]=a.x,u[4]=t.y,u[5]=a.z,u[6]=a.x,u[7]=a.y,u[8]=a.z,u[9]=t.x,u[10]=a.y,u[11]=a.z,u[12]=t.x,u[13]=t.y,u[14]=t.z,u[15]=a.x,u[16]=t.y,u[17]=t.z,u[18]=a.x,u[19]=a.y,u[20]=t.z,u[21]=t.x,u[22]=a.y,u[23]=t.z,u[24]=a.x,u[25]=t.y,u[26]=t.z,u[27]=a.x,u[28]=a.y,u[29]=t.z,u[30]=a.x,u[31]=a.y,u[32]=a.z,u[33]=a.x,u[34]=t.y,u[35]=a.z,u[36]=t.x,u[37]=t.y,u[38]=t.z,u[39]=t.x,u[40]=a.y,u[41]=t.z,u[42]=t.x,u[43]=a.y,u[44]=a.z,u[45]=t.x,u[46]=t.y,u[47]=a.z,u[48]=t.x,u[49]=a.y,u[50]=t.z,u[51]=a.x,u[52]=a.y,u[53]=t.z,u[54]=a.x,u[55]=a.y,u[56]=a.z,u[57]=t.x,u[58]=a.y,u[59]=a.z,u[60]=t.x,u[61]=t.y,u[62]=t.z,u[63]=a.x,u[64]=t.y,u[65]=t.z,u[66]=a.x,u[67]=t.y,u[68]=a.z,u[69]=t.x,u[70]=t.y,u[71]=a.z,n.position=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.DOUBLE,componentsPerAttribute:3,values:u})),r.normal){const e=new Float32Array(72);e[0]=0,e[1]=0,e[2]=1,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=1,e[9]=0,e[10]=0,e[11]=1,e[12]=0,e[13]=0,e[14]=-1,e[15]=0,e[16]=0,e[17]=-1,e[18]=0,e[19]=0,e[20]=-1,e[21]=0,e[22]=0,e[23]=-1,e[24]=1,e[25]=0,e[26]=0,e[27]=1,e[28]=0,e[29]=0,e[30]=1,e[31]=0,e[32]=0,e[33]=1,e[34]=0,e[35]=0,e[36]=-1,e[37]=0,e[38]=0,e[39]=-1,e[40]=0,e[41]=0,e[42]=-1,e[43]=0,e[44]=0,e[45]=-1,e[46]=0,e[47]=0,e[48]=0,e[49]=1,e[50]=0,e[51]=0,e[52]=1,e[53]=0,e[54]=0,e[55]=1,e[56]=0,e[57]=0,e[58]=1,e[59]=0,e[60]=0,e[61]=-1,e[62]=0,e[63]=0,e[64]=-1,e[65]=0,e[66]=0,e[67]=-1,e[68]=0,e[69]=0,e[70]=-1,e[71]=0,n.normal=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.FLOAT,componentsPerAttribute:3,values:e})}if(r.st){const e=new Float32Array(48);e[0]=0,e[1]=0,e[2]=1,e[3]=0,e[4]=1,e[5]=1,e[6]=0,e[7]=1,e[8]=1,e[9]=0,e[10]=0,e[11]=0,e[12]=0,e[13]=1,e[14]=1,e[15]=1,e[16]=0,e[17]=0,e[18]=1,e[19]=0,e[20]=1,e[21]=1,e[22]=0,e[23]=1,e[24]=1,e[25]=0,e[26]=0,e[27]=0,e[28]=0,e[29]=1,e[30]=1,e[31]=1,e[32]=1,e[33]=0,e[34]=0,e[35]=0,e[36]=0,e[37]=1,e[38]=1,e[39]=1,e[40]=0,e[41]=0,e[42]=1,e[43]=0,e[44]=1,e[45]=1,e[46]=0,e[47]=1,n.st=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.FLOAT,componentsPerAttribute:2,values:e})}if(r.tangent){const e=new Float32Array(72);e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e[6]=1,e[7]=0,e[8]=0,e[9]=1,e[10]=0,e[11]=0,e[12]=-1,e[13]=0,e[14]=0,e[15]=-1,e[16]=0,e[17]=0,e[18]=-1,e[19]=0,e[20]=0,e[21]=-1,e[22]=0,e[23]=0,e[24]=0,e[25]=1,e[26]=0,e[27]=0,e[28]=1,e[29]=0,e[30]=0,e[31]=1,e[32]=0,e[33]=0,e[34]=1,e[35]=0,e[36]=0,e[37]=-1,e[38]=0,e[39]=0,e[40]=-1,e[41]=0,e[42]=0,e[43]=-1,e[44]=0,e[45]=0,e[46]=-1,e[47]=0,e[48]=-1,e[49]=0,e[50]=0,e[51]=-1,e[52]=0,e[53]=0,e[54]=-1,e[55]=0,e[56]=0,e[57]=-1,e[58]=0,e[59]=0,e[60]=1,e[61]=0,e[62]=0,e[63]=1,e[64]=0,e[65]=0,e[66]=1,e[67]=0,e[68]=0,e[69]=1,e[70]=0,e[71]=0,n.tangent=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.FLOAT,componentsPerAttribute:3,values:e})}if(r.bitangent){const e=new Float32Array(72);e[0]=0,e[1]=1,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=1,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=1,e[14]=0,e[15]=0,e[16]=1,e[17]=0,e[18]=0,e[19]=1,e[20]=0,e[21]=0,e[22]=1,e[23]=0,e[24]=0,e[25]=0,e[26]=1,e[27]=0,e[28]=0,e[29]=1,e[30]=0,e[31]=0,e[32]=1,e[33]=0,e[34]=0,e[35]=1,e[36]=0,e[37]=0,e[38]=1,e[39]=0,e[40]=0,e[41]=1,e[42]=0,e[43]=0,e[44]=1,e[45]=0,e[46]=0,e[47]=1,e[48]=0,e[49]=0,e[50]=1,e[51]=0,e[52]=0,e[53]=1,e[54]=0,e[55]=0,e[56]=1,e[57]=0,e[58]=0,e[59]=1,e[60]=0,e[61]=0,e[62]=1,e[63]=0,e[64]=0,e[65]=1,e[66]=0,e[67]=0,e[68]=1,e[69]=0,e[70]=0,e[71]=1,n.bitangent=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.FLOAT,componentsPerAttribute:3,values:e})}o=new Uint16Array(36),o[0]=0,o[1]=1,o[2]=2,o[3]=0,o[4]=2,o[5]=3,o[6]=6,o[7]=5,o[8]=4,o[9]=7,o[10]=6,o[11]=4,o[12]=8,o[13]=9,o[14]=10,o[15]=8,o[16]=10,o[17]=11,o[18]=14,o[19]=13,o[20]=12,o[21]=15,o[22]=14,o[23]=12,o[24]=18,o[25]=17,o[26]=16,o[27]=19,o[28]=18,o[29]=16,o[30]=20,o[31]=21,o[32]=22,o[33]=20,o[34]=22,o[35]=23}else u=new Float64Array(24),u[0]=t.x,u[1]=t.y,u[2]=t.z,u[3]=a.x,u[4]=t.y,u[5]=t.z,u[6]=a.x,u[7]=a.y,u[8]=t.z,u[9]=t.x,u[10]=a.y,u[11]=t.z,u[12]=t.x,u[13]=t.y,u[14]=a.z,u[15]=a.x,u[16]=t.y,u[17]=a.z,u[18]=a.x,u[19]=a.y,u[20]=a.z,u[21]=t.x,u[22]=a.y,u[23]=a.z,n.position=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.DOUBLE,componentsPerAttribute:3,values:u}),o=new Uint16Array(36),o[0]=4,o[1]=5,o[2]=6,o[3]=4,o[4]=6,o[5]=7,o[6]=1,o[7]=0,o[8]=3,o[9]=1,o[10]=3,o[11]=2,o[12]=1,o[13]=6,o[14]=5,o[15]=1,o[16]=2,o[17]=6,o[18]=2,o[19]=3,o[20]=7,o[21]=2,o[22]=7,o[23]=6,o[24]=3,o[25]=0,o[26]=4,o[27]=3,o[28]=4,o[29]=7,o[30]=0,o[31]=1,o[32]=5,o[33]=0,o[34]=5,o[35]=4;const i=Cartesian3_default.subtract(a,t,diffScratch),f=.5*Cartesian3_default.magnitude(i);if(defined_default(e._offsetAttribute)){const t=u.length,a=e._offsetAttribute===GeometryOffsetAttribute_default.NONE?0:1,r=new Uint8Array(t/3).fill(a);n.applyOffset=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.UNSIGNED_BYTE,componentsPerAttribute:1,values:r})}return new Geometry_default({attributes:n,indices:o,primitiveType:PrimitiveType_default.TRIANGLES,boundingSphere:new BoundingSphere_default(Cartesian3_default.ZERO,f),offsetAttribute:e._offsetAttribute})},BoxGeometry.getUnitBox=function(){return defined_default(unitBoxGeometry)||(unitBoxGeometry=BoxGeometry.createGeometry(BoxGeometry.fromDimensions({dimensions:new Cartesian3_default(1,1,1),vertexFormat:VertexFormat_default.POSITION_ONLY}))),unitBoxGeometry};var BoxGeometry_default=BoxGeometry;export{BoxGeometry_default};
/*! For license information please see createPolylineVolumeOutlineGeometry.js.LICENSE.txt */
import{BoundingRectangle_default}from"./chunk-KUB2HQXR.js";import{CornerType_default,PolylineVolumeGeometryLibrary_default}from"./chunk-D325WRAY.js";import"./chunk-7ONRI7T4.js";import"./chunk-3FCUUN6M.js";import"./chunk-LSGUCCKJ.js";import"./chunk-MOLGJDJV.js";import"./chunk-FGUP2QEP.js";import{PolygonPipeline_default,WindingOrder_default}from"./chunk-ZVUAJKAL.js";import{arrayRemoveDuplicates_default}from"./chunk-DTNN3ODA.js";import"./chunk-6PWSSCRA.js";import"./chunk-HEROVJML.js";import"./chunk-4EYB62WJ.js";import{IndexDatatype_default}from"./chunk-J3U6Z5YQ.js";import{GeometryAttributes_default}from"./chunk-SJDXMQSP.js";import{GeometryAttribute_default,Geometry_default,PrimitiveType_default}from"./chunk-OTBRPBCC.js";import{BoundingSphere_default}from"./chunk-D4YHO4NZ.js";import"./chunk-HSW63JN4.js";import{Cartesian2_default}from"./chunk-RSWBNJPT.js";import{ComponentDatatype_default}from"./chunk-Z6LPXA7S.js";import{Cartesian3_default,Ellipsoid_default}from"./chunk-PHQVHDVI.js";import{Math_default}from"./chunk-IZED7ODV.js";import"./chunk-VNRUVNIK.js";import"./chunk-66CXKODF.js";import{defaultValue_default}from"./chunk-C53JYYKX.js";import{DeveloperError_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";function computeAttributes(e,t){const l=new GeometryAttributes_default;l.position=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.DOUBLE,componentsPerAttribute:3,values:e});const o=t.length,i=l.position.values.length/3,r=e.length/3/o,a=IndexDatatype_default.createTypedArray(i,2*o*(r+1));let n,u,d=0;n=0;let s=n*o;for(u=0;u<o-1;u++)a[d++]=u+s,a[d++]=u+s+1;for(a[d++]=o-1+s,a[d++]=s,n=r-1,s=n*o,u=0;u<o-1;u++)a[d++]=u+s,a[d++]=u+s+1;for(a[d++]=o-1+s,a[d++]=s,n=0;n<r-1;n++){const e=o*n,t=e+o;for(u=0;u<o;u++)a[d++]=u+e,a[d++]=u+t}return new Geometry_default({attributes:l,indices:IndexDatatype_default.createTypedArray(i,a),boundingSphere:BoundingSphere_default.fromVertices(e),primitiveType:PrimitiveType_default.LINES})}function PolylineVolumeOutlineGeometry(e){const t=(e=defaultValue_default(e,defaultValue_default.EMPTY_OBJECT)).polylinePositions,l=e.shapePositions;if(!defined_default(t))throw new DeveloperError_default("options.polylinePositions is required.");if(!defined_default(l))throw new DeveloperError_default("options.shapePositions is required.");this._positions=t,this._shape=l,this._ellipsoid=Ellipsoid_default.clone(defaultValue_default(e.ellipsoid,Ellipsoid_default.WGS84)),this._cornerType=defaultValue_default(e.cornerType,CornerType_default.ROUNDED),this._granularity=defaultValue_default(e.granularity,Math_default.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry";let o=1+t.length*Cartesian3_default.packedLength;o+=1+l.length*Cartesian2_default.packedLength,this.packedLength=o+Ellipsoid_default.packedLength+2}PolylineVolumeOutlineGeometry.pack=function(e,t,l){if(!defined_default(e))throw new DeveloperError_default("value is required");if(!defined_default(t))throw new DeveloperError_default("array is required");let o;l=defaultValue_default(l,0);const i=e._positions;let r=i.length;for(t[l++]=r,o=0;o<r;++o,l+=Cartesian3_default.packedLength)Cartesian3_default.pack(i[o],t,l);const a=e._shape;for(r=a.length,t[l++]=r,o=0;o<r;++o,l+=Cartesian2_default.packedLength)Cartesian2_default.pack(a[o],t,l);return Ellipsoid_default.pack(e._ellipsoid,t,l),l+=Ellipsoid_default.packedLength,t[l++]=e._cornerType,t[l]=e._granularity,t};var scratchEllipsoid=Ellipsoid_default.clone(Ellipsoid_default.UNIT_SPHERE),scratchOptions={polylinePositions:void 0,shapePositions:void 0,ellipsoid:scratchEllipsoid,height:void 0,cornerType:void 0,granularity:void 0};PolylineVolumeOutlineGeometry.unpack=function(e,t,l){if(!defined_default(e))throw new DeveloperError_default("array is required");let o;t=defaultValue_default(t,0);let i=e[t++];const r=new Array(i);for(o=0;o<i;++o,t+=Cartesian3_default.packedLength)r[o]=Cartesian3_default.unpack(e,t);i=e[t++];const a=new Array(i);for(o=0;o<i;++o,t+=Cartesian2_default.packedLength)a[o]=Cartesian2_default.unpack(e,t);const n=Ellipsoid_default.unpack(e,t,scratchEllipsoid);t+=Ellipsoid_default.packedLength;const u=e[t++],d=e[t];return defined_default(l)?(l._positions=r,l._shape=a,l._ellipsoid=Ellipsoid_default.clone(n,l._ellipsoid),l._cornerType=u,l._granularity=d,l):(scratchOptions.polylinePositions=r,scratchOptions.shapePositions=a,scratchOptions.cornerType=u,scratchOptions.granularity=d,new PolylineVolumeOutlineGeometry(scratchOptions))};var brScratch=new BoundingRectangle_default;PolylineVolumeOutlineGeometry.createGeometry=function(e){const t=e._positions,l=arrayRemoveDuplicates_default(t,Cartesian3_default.equalsEpsilon);let o=e._shape;if(o=PolylineVolumeGeometryLibrary_default.removeDuplicatesFromShape(o),l.length<2||o.length<3)return;PolygonPipeline_default.computeWindingOrder2D(o)===WindingOrder_default.CLOCKWISE&&o.reverse();const i=BoundingRectangle_default.fromPoints(o,brScratch);return computeAttributes(PolylineVolumeGeometryLibrary_default.computePositions(l,o,i,e,!1),o)};var PolylineVolumeOutlineGeometry_default=PolylineVolumeOutlineGeometry;function createPolylineVolumeOutlineGeometry(e,t){return defined_default(t)&&(e=PolylineVolumeOutlineGeometry_default.unpack(e,t)),e._ellipsoid=Ellipsoid_default.clone(e._ellipsoid),PolylineVolumeOutlineGeometry_default.createGeometry(e)}var createPolylineVolumeOutlineGeometry_default=createPolylineVolumeOutlineGeometry;export{createPolylineVolumeOutlineGeometry_default as default};
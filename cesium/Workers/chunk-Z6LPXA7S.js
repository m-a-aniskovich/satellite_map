/*! For license information please see chunk-Z6LPXA7S.js.LICENSE.txt */
import{WebGLConstants_default}from"./chunk-VNRUVNIK.js";import{defaultValue_default}from"./chunk-C53JYYKX.js";import{DeveloperError_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";var ComponentDatatype={BYTE:WebGLConstants_default.BYTE,UNSIGNED_BYTE:WebGLConstants_default.UNSIGNED_BYTE,SHORT:WebGLConstants_default.SHORT,UNSIGNED_SHORT:WebGLConstants_default.UNSIGNED_SHORT,INT:WebGLConstants_default.INT,UNSIGNED_INT:WebGLConstants_default.UNSIGNED_INT,FLOAT:WebGLConstants_default.FLOAT,DOUBLE:WebGLConstants_default.DOUBLE,getSizeInBytes:function(e){if(!defined_default(e))throw new DeveloperError_default("value is required.");switch(e){case ComponentDatatype.BYTE:return Int8Array.BYTES_PER_ELEMENT;case ComponentDatatype.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT;case ComponentDatatype.SHORT:return Int16Array.BYTES_PER_ELEMENT;case ComponentDatatype.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT;case ComponentDatatype.INT:return Int32Array.BYTES_PER_ELEMENT;case ComponentDatatype.UNSIGNED_INT:return Uint32Array.BYTES_PER_ELEMENT;case ComponentDatatype.FLOAT:return Float32Array.BYTES_PER_ELEMENT;case ComponentDatatype.DOUBLE:return Float64Array.BYTES_PER_ELEMENT;default:throw new DeveloperError_default("componentDatatype is not a valid value.")}},fromTypedArray:function(e){if(e instanceof Int8Array)return ComponentDatatype.BYTE;if(e instanceof Uint8Array)return ComponentDatatype.UNSIGNED_BYTE;if(e instanceof Int16Array)return ComponentDatatype.SHORT;if(e instanceof Uint16Array)return ComponentDatatype.UNSIGNED_SHORT;if(e instanceof Int32Array)return ComponentDatatype.INT;if(e instanceof Uint32Array)return ComponentDatatype.UNSIGNED_INT;if(e instanceof Float32Array)return ComponentDatatype.FLOAT;if(e instanceof Float64Array)return ComponentDatatype.DOUBLE;throw new DeveloperError_default("array must be an Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, or Float64Array.")},validate:function(e){return defined_default(e)&&(e===ComponentDatatype.BYTE||e===ComponentDatatype.UNSIGNED_BYTE||e===ComponentDatatype.SHORT||e===ComponentDatatype.UNSIGNED_SHORT||e===ComponentDatatype.INT||e===ComponentDatatype.UNSIGNED_INT||e===ComponentDatatype.FLOAT||e===ComponentDatatype.DOUBLE)},createTypedArray:function(e,t){if(!defined_default(e))throw new DeveloperError_default("componentDatatype is required.");if(!defined_default(t))throw new DeveloperError_default("valuesOrLength is required.");switch(e){case ComponentDatatype.BYTE:return new Int8Array(t);case ComponentDatatype.UNSIGNED_BYTE:return new Uint8Array(t);case ComponentDatatype.SHORT:return new Int16Array(t);case ComponentDatatype.UNSIGNED_SHORT:return new Uint16Array(t);case ComponentDatatype.INT:return new Int32Array(t);case ComponentDatatype.UNSIGNED_INT:return new Uint32Array(t);case ComponentDatatype.FLOAT:return new Float32Array(t);case ComponentDatatype.DOUBLE:return new Float64Array(t);default:throw new DeveloperError_default("componentDatatype is not a valid value.")}},createArrayBufferView:function(e,t,a,n){if(!defined_default(e))throw new DeveloperError_default("componentDatatype is required.");if(!defined_default(t))throw new DeveloperError_default("buffer is required.");switch(a=defaultValue_default(a,0),n=defaultValue_default(n,(t.byteLength-a)/ComponentDatatype.getSizeInBytes(e)),e){case ComponentDatatype.BYTE:return new Int8Array(t,a,n);case ComponentDatatype.UNSIGNED_BYTE:return new Uint8Array(t,a,n);case ComponentDatatype.SHORT:return new Int16Array(t,a,n);case ComponentDatatype.UNSIGNED_SHORT:return new Uint16Array(t,a,n);case ComponentDatatype.INT:return new Int32Array(t,a,n);case ComponentDatatype.UNSIGNED_INT:return new Uint32Array(t,a,n);case ComponentDatatype.FLOAT:return new Float32Array(t,a,n);case ComponentDatatype.DOUBLE:return new Float64Array(t,a,n);default:throw new DeveloperError_default("componentDatatype is not a valid value.")}},fromName:function(e){switch(e){case"BYTE":return ComponentDatatype.BYTE;case"UNSIGNED_BYTE":return ComponentDatatype.UNSIGNED_BYTE;case"SHORT":return ComponentDatatype.SHORT;case"UNSIGNED_SHORT":return ComponentDatatype.UNSIGNED_SHORT;case"INT":return ComponentDatatype.INT;case"UNSIGNED_INT":return ComponentDatatype.UNSIGNED_INT;case"FLOAT":return ComponentDatatype.FLOAT;case"DOUBLE":return ComponentDatatype.DOUBLE;default:throw new DeveloperError_default("name is not a valid value.")}}},ComponentDatatype_default=Object.freeze(ComponentDatatype);export{ComponentDatatype_default};
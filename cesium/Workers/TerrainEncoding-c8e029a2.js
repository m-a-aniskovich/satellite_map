define(["exports","./Transforms-e2d4a55a","./Matrix3-41c58dde","./Check-6ede7e26","./defaultValue-fe22d8c0","./Matrix2-e1298525","./AttributeCompression-f9f6c717","./ComponentDatatype-cf1fa08e","./Math-0a2ac845"],(function(t,e,i,o,a,n,r,s,c){"use strict";function d(t,e){o.Check.typeOf.object("ellipsoid",t),this._ellipsoid=t,this._cameraPosition=new i.Cartesian3,this._cameraPositionInScaledSpace=new i.Cartesian3,this._distanceToLimbInScaledSpaceSquared=0,a.defined(e)&&(this.cameraPosition=e)}Object.defineProperties(d.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},cameraPosition:{get:function(){return this._cameraPosition},set:function(t){const e=this._ellipsoid.transformPositionToScaledSpace(t,this._cameraPositionInScaledSpace),o=i.Cartesian3.magnitudeSquared(e)-1;i.Cartesian3.clone(t,this._cameraPosition),this._cameraPositionInScaledSpace=e,this._distanceToLimbInScaledSpaceSquared=o}}});const u=new i.Cartesian3;d.prototype.isPointVisible=function(t){return g(this._ellipsoid.transformPositionToScaledSpace(t,u),this._cameraPositionInScaledSpace,this._distanceToLimbInScaledSpaceSquared)},d.prototype.isScaledSpacePointVisible=function(t){return g(t,this._cameraPositionInScaledSpace,this._distanceToLimbInScaledSpaceSquared)};const l=new i.Cartesian3;d.prototype.isScaledSpacePointVisiblePossiblyUnderEllipsoid=function(t,e){const i=this._ellipsoid;let o,n;return a.defined(e)&&e<0&&i.minimumRadius>-e?(n=l,n.x=this._cameraPosition.x/(i.radii.x+e),n.y=this._cameraPosition.y/(i.radii.y+e),n.z=this._cameraPosition.z/(i.radii.z+e),o=n.x*n.x+n.y*n.y+n.z*n.z-1):(n=this._cameraPositionInScaledSpace,o=this._distanceToLimbInScaledSpaceSquared),g(t,n,o)},d.prototype.computeHorizonCullingPoint=function(t,e,i){return x(this._ellipsoid,t,e,i)};const m=i.Ellipsoid.clone(i.Ellipsoid.UNIT_SPHERE);d.prototype.computeHorizonCullingPointPossiblyUnderEllipsoid=function(t,e,i,o){return x(p(this._ellipsoid,i,m),t,e,o)},d.prototype.computeHorizonCullingPointFromVertices=function(t,e,i,o,a){return S(this._ellipsoid,t,e,i,o,a)},d.prototype.computeHorizonCullingPointFromVerticesPossiblyUnderEllipsoid=function(t,e,i,o,a,n){return S(p(this._ellipsoid,a,m),t,e,i,o,n)};const h=[];d.prototype.computeHorizonCullingPointFromRectangle=function(t,a,r){o.Check.typeOf.object("rectangle",t);const s=n.Rectangle.subsample(t,a,0,h),c=e.BoundingSphere.fromPoints(s);if(!(i.Cartesian3.magnitude(c.center)<.1*a.minimumRadius))return this.computeHorizonCullingPoint(c.center,s,r)};const f=new i.Cartesian3;function p(t,e,o){if(a.defined(e)&&e<0&&t.minimumRadius>-e){const a=i.Cartesian3.fromElements(t.radii.x+e,t.radii.y+e,t.radii.z+e,f);t=i.Ellipsoid.fromCartesian3(a,o)}return t}function x(t,e,n,r){o.Check.typeOf.object("directionToPoint",e),o.Check.defined("positions",n),a.defined(r)||(r=new i.Cartesian3);const s=P(t,e);let c=0;for(let e=0,i=n.length;e<i;++e){const i=M(t,n[e],s);if(i<0)return;c=Math.max(c,i)}return T(s,c,r)}const C=new i.Cartesian3;function S(t,e,n,r,s,c){o.Check.typeOf.object("directionToPoint",e),o.Check.defined("vertices",n),o.Check.typeOf.number("stride",r),a.defined(c)||(c=new i.Cartesian3),r=a.defaultValue(r,3),s=a.defaultValue(s,i.Cartesian3.ZERO);const d=P(t,e);let u=0;for(let e=0,i=n.length;e<i;e+=r){C.x=n[e]+s.x,C.y=n[e+1]+s.y,C.z=n[e+2]+s.z;const i=M(t,C,d);if(i<0)return;u=Math.max(u,i)}return T(d,u,c)}function g(t,e,o){const a=e,n=o,r=i.Cartesian3.subtract(t,a,u),s=-i.Cartesian3.dot(r,a);return!(n<0?s>0:s>n&&s*s/i.Cartesian3.magnitudeSquared(r)>n)}const y=new i.Cartesian3,N=new i.Cartesian3;function M(t,e,o){const a=t.transformPositionToScaledSpace(e,y);let n=i.Cartesian3.magnitudeSquared(a),r=Math.sqrt(n);const s=i.Cartesian3.divideByScalar(a,r,N);n=Math.max(1,n),r=Math.max(1,r);const c=1/r;return 1/(i.Cartesian3.dot(s,o)*c-i.Cartesian3.magnitude(i.Cartesian3.cross(s,o,s))*(Math.sqrt(n-1)*c))}function T(t,e,o){if(!(e<=0||e===1/0||e!=e))return i.Cartesian3.multiplyByScalar(t,e,o)}const b=new i.Cartesian3;function P(t,e){return i.Cartesian3.equals(e,i.Cartesian3.ZERO)?e:(t.transformPositionToScaledSpace(e,b),i.Cartesian3.normalize(b,b))}const z={getHeight:function(t,e,i){return(t-i)*e+i}},_=new i.Cartesian3;z.getPosition=function(t,e,o,a,n){const r=e.cartesianToCartographic(t,_),s=z.getHeight(r.height,o,a);return i.Cartesian3.fromRadians(r.longitude,r.latitude,s,e,n)};var E=z,H=Object.freeze({NONE:0,BITS12:1});const w=new i.Cartesian3,A=new i.Cartesian3,I=new n.Cartesian2,O=new n.Matrix4,V=new n.Matrix4,q=Math.pow(2,12);function G(t,e,o,r,s,c,d,u,l,m){let h,f,p=H.NONE;if(a.defined(e)&&a.defined(o)&&a.defined(r)&&a.defined(s)){const t=e.minimum,a=e.maximum,c=i.Cartesian3.subtract(a,t,A),d=r-o;p=Math.max(i.Cartesian3.maximumComponent(c),d)<q-1?H.BITS12:H.NONE,h=n.Matrix4.inverseTransformation(s,new n.Matrix4);const u=i.Cartesian3.negate(t,w);n.Matrix4.multiply(n.Matrix4.fromTranslation(u,O),h,h);const l=w;l.x=1/c.x,l.y=1/c.y,l.z=1/c.z,n.Matrix4.multiply(n.Matrix4.fromScale(l,O),h,h),f=n.Matrix4.clone(s),n.Matrix4.setTranslation(f,i.Cartesian3.ZERO,f),s=n.Matrix4.clone(s,new n.Matrix4);const m=n.Matrix4.fromTranslation(t,O),x=n.Matrix4.fromScale(c,V),C=n.Matrix4.multiply(m,x,O);n.Matrix4.multiply(s,C,s),n.Matrix4.multiply(f,C,f)}this.quantization=p,this.minimumHeight=o,this.maximumHeight=r,this.center=i.Cartesian3.clone(t),this.toScaledENU=h,this.fromScaledENU=s,this.matrix=f,this.hasVertexNormals=c,this.hasWebMercatorT=a.defaultValue(d,!1),this.hasGeodeticSurfaceNormals=a.defaultValue(u,!1),this.exaggeration=a.defaultValue(l,1),this.exaggerationRelativeHeight=a.defaultValue(m,0),this.stride=0,this._offsetGeodeticSurfaceNormal=0,this._offsetVertexNormal=0,this._calculateStrideAndOffsets()}G.prototype.encode=function(t,e,o,a,s,d,u,l){const m=a.x,h=a.y;if(this.quantization===H.BITS12){(o=n.Matrix4.multiplyByPoint(this.toScaledENU,o,w)).x=c.CesiumMath.clamp(o.x,0,1),o.y=c.CesiumMath.clamp(o.y,0,1),o.z=c.CesiumMath.clamp(o.z,0,1);const i=this.maximumHeight-this.minimumHeight,a=c.CesiumMath.clamp((s-this.minimumHeight)/i,0,1);n.Cartesian2.fromElements(o.x,o.y,I);const d=r.AttributeCompression.compressTextureCoordinates(I);n.Cartesian2.fromElements(o.z,a,I);const l=r.AttributeCompression.compressTextureCoordinates(I);n.Cartesian2.fromElements(m,h,I);const f=r.AttributeCompression.compressTextureCoordinates(I);if(t[e++]=d,t[e++]=l,t[e++]=f,this.hasWebMercatorT){n.Cartesian2.fromElements(u,0,I);const i=r.AttributeCompression.compressTextureCoordinates(I);t[e++]=i}}else i.Cartesian3.subtract(o,this.center,w),t[e++]=w.x,t[e++]=w.y,t[e++]=w.z,t[e++]=s,t[e++]=m,t[e++]=h,this.hasWebMercatorT&&(t[e++]=u);return this.hasVertexNormals&&(t[e++]=r.AttributeCompression.octPackFloat(d)),this.hasGeodeticSurfaceNormals&&(t[e++]=l.x,t[e++]=l.y,t[e++]=l.z),e};const B=new i.Cartesian3,R=new i.Cartesian3;G.prototype.addGeodeticSurfaceNormals=function(t,e,i){if(this.hasGeodeticSurfaceNormals)return;const o=this.stride,a=t.length/o;this.hasGeodeticSurfaceNormals=!0,this._calculateStrideAndOffsets();const n=this.stride;for(let r=0;r<a;r++){for(let i=0;i<o;i++){const a=r*o+i;e[r*n+i]=t[a]}const a=this.decodePosition(e,r,B),s=i.geodeticSurfaceNormal(a,R),c=r*n+this._offsetGeodeticSurfaceNormal;e[c]=s.x,e[c+1]=s.y,e[c+2]=s.z}},G.prototype.removeGeodeticSurfaceNormals=function(t,e){if(!this.hasGeodeticSurfaceNormals)return;const i=this.stride,o=t.length/i;this.hasGeodeticSurfaceNormals=!1,this._calculateStrideAndOffsets();const a=this.stride;for(let n=0;n<o;n++)for(let o=0;o<a;o++){const r=n*i+o;e[n*a+o]=t[r]}},G.prototype.decodePosition=function(t,e,o){if(a.defined(o)||(o=new i.Cartesian3),e*=this.stride,this.quantization===H.BITS12){const i=r.AttributeCompression.decompressTextureCoordinates(t[e],I);o.x=i.x,o.y=i.y;const a=r.AttributeCompression.decompressTextureCoordinates(t[e+1],I);return o.z=a.x,n.Matrix4.multiplyByPoint(this.fromScaledENU,o,o)}return o.x=t[e],o.y=t[e+1],o.z=t[e+2],i.Cartesian3.add(o,this.center,o)},G.prototype.getExaggeratedPosition=function(t,e,i){i=this.decodePosition(t,e,i);const o=this.exaggeration,a=this.exaggerationRelativeHeight;if(1!==o&&this.hasGeodeticSurfaceNormals){const n=this.decodeGeodeticSurfaceNormal(t,e,R),r=this.decodeHeight(t,e),s=E.getHeight(r,o,a)-r;i.x+=n.x*s,i.y+=n.y*s,i.z+=n.z*s}return i},G.prototype.decodeTextureCoordinates=function(t,e,i){return a.defined(i)||(i=new n.Cartesian2),e*=this.stride,this.quantization===H.BITS12?r.AttributeCompression.decompressTextureCoordinates(t[e+2],i):n.Cartesian2.fromElements(t[e+4],t[e+5],i)},G.prototype.decodeHeight=function(t,e){return e*=this.stride,this.quantization===H.BITS12?r.AttributeCompression.decompressTextureCoordinates(t[e+1],I).y*(this.maximumHeight-this.minimumHeight)+this.minimumHeight:t[e+3]},G.prototype.decodeWebMercatorT=function(t,e){return e*=this.stride,this.quantization===H.BITS12?r.AttributeCompression.decompressTextureCoordinates(t[e+3],I).x:t[e+6]},G.prototype.getOctEncodedNormal=function(t,e,i){const o=t[e=e*this.stride+this._offsetVertexNormal]/256,a=Math.floor(o),r=256*(o-a);return n.Cartesian2.fromElements(a,r,i)},G.prototype.decodeGeodeticSurfaceNormal=function(t,e,i){return e=e*this.stride+this._offsetGeodeticSurfaceNormal,i.x=t[e],i.y=t[e+1],i.z=t[e+2],i},G.prototype._calculateStrideAndOffsets=function(){let t=0;this.quantization===H.BITS12?t+=3:t+=6,this.hasWebMercatorT&&(t+=1),this.hasVertexNormals&&(this._offsetVertexNormal=t,t+=1),this.hasGeodeticSurfaceNormals&&(this._offsetGeodeticSurfaceNormal=t,t+=3),this.stride=t};const U={position3DAndHeight:0,textureCoordAndEncodedNormals:1,geodeticSurfaceNormal:2},v={compressed0:0,compressed1:1,geodeticSurfaceNormal:2};G.prototype.getAttributes=function(t){const e=s.ComponentDatatype.FLOAT,i=s.ComponentDatatype.getSizeInBytes(e),o=this.stride*i;let a=0;const n=[];function r(r,s){n.push({index:r,vertexBuffer:t,componentDatatype:e,componentsPerAttribute:s,offsetInBytes:a,strideInBytes:o}),a+=s*i}if(this.quantization===H.NONE){r(U.position3DAndHeight,4);let t=2;t+=this.hasWebMercatorT?1:0,t+=this.hasVertexNormals?1:0,r(U.textureCoordAndEncodedNormals,t),this.hasGeodeticSurfaceNormals&&r(U.geodeticSurfaceNormal,3)}else{const t=this.hasWebMercatorT||this.hasVertexNormals,e=this.hasWebMercatorT&&this.hasVertexNormals;r(v.compressed0,t?4:3),e&&r(v.compressed1,1),this.hasGeodeticSurfaceNormals&&r(v.geodeticSurfaceNormal,3)}return n},G.prototype.getAttributeLocations=function(){return this.quantization===H.NONE?U:v},G.clone=function(t,e){if(a.defined(t))return a.defined(e)||(e=new G),e.quantization=t.quantization,e.minimumHeight=t.minimumHeight,e.maximumHeight=t.maximumHeight,e.center=i.Cartesian3.clone(t.center),e.toScaledENU=n.Matrix4.clone(t.toScaledENU),e.fromScaledENU=n.Matrix4.clone(t.fromScaledENU),e.matrix=n.Matrix4.clone(t.matrix),e.hasVertexNormals=t.hasVertexNormals,e.hasWebMercatorT=t.hasWebMercatorT,e.hasGeodeticSurfaceNormals=t.hasGeodeticSurfaceNormals,e.exaggeration=t.exaggeration,e.exaggerationRelativeHeight=t.exaggerationRelativeHeight,e._calculateStrideAndOffsets(),e},t.EllipsoidalOccluder=d,t.TerrainEncoding=G}));
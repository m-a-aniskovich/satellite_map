/*! For license information please see chunk-PHQVHDVI.js.LICENSE.txt */
import{Math_default}from"./chunk-IZED7ODV.js";import{defaultValue_default}from"./chunk-C53JYYKX.js";import{Check_default,DeveloperError_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";function Cartesian3(e,t,a){this.x=defaultValue_default(e,0),this.y=defaultValue_default(t,0),this.z=defaultValue_default(a,0)}Cartesian3.fromSpherical=function(e,t){Check_default.typeOf.object("spherical",e),defined_default(t)||(t=new Cartesian3);const a=e.clock,r=e.cone,n=defaultValue_default(e.magnitude,1),i=n*Math.sin(r);return t.x=i*Math.cos(a),t.y=i*Math.sin(a),t.z=n*Math.cos(r),t},Cartesian3.fromElements=function(e,t,a,r){return defined_default(r)?(r.x=e,r.y=t,r.z=a,r):new Cartesian3(e,t,a)},Cartesian3.clone=function(e,t){if(defined_default(e))return defined_default(t)?(t.x=e.x,t.y=e.y,t.z=e.z,t):new Cartesian3(e.x,e.y,e.z)},Cartesian3.fromCartesian4=Cartesian3.clone,Cartesian3.packedLength=3,Cartesian3.pack=function(e,t,a){return Check_default.typeOf.object("value",e),Check_default.defined("array",t),a=defaultValue_default(a,0),t[a++]=e.x,t[a++]=e.y,t[a]=e.z,t},Cartesian3.unpack=function(e,t,a){return Check_default.defined("array",e),t=defaultValue_default(t,0),defined_default(a)||(a=new Cartesian3),a.x=e[t++],a.y=e[t++],a.z=e[t],a},Cartesian3.packArray=function(e,t){Check_default.defined("array",e);const a=e.length,r=3*a;if(defined_default(t)){if(!Array.isArray(t)&&t.length!==r)throw new DeveloperError_default("If result is a typed array, it must have exactly array.length * 3 elements");t.length!==r&&(t.length=r)}else t=new Array(r);for(let r=0;r<a;++r)Cartesian3.pack(e[r],t,3*r);return t},Cartesian3.unpackArray=function(e,t){if(Check_default.defined("array",e),Check_default.typeOf.number.greaterThanOrEquals("array.length",e.length,3),e.length%3!=0)throw new DeveloperError_default("array length must be a multiple of 3.");const a=e.length;defined_default(t)?t.length=a/3:t=new Array(a/3);for(let r=0;r<a;r+=3){const a=r/3;t[a]=Cartesian3.unpack(e,r,t[a])}return t},Cartesian3.fromArray=Cartesian3.unpack,Cartesian3.maximumComponent=function(e){return Check_default.typeOf.object("cartesian",e),Math.max(e.x,e.y,e.z)},Cartesian3.minimumComponent=function(e){return Check_default.typeOf.object("cartesian",e),Math.min(e.x,e.y,e.z)},Cartesian3.minimumByComponent=function(e,t,a){return Check_default.typeOf.object("first",e),Check_default.typeOf.object("second",t),Check_default.typeOf.object("result",a),a.x=Math.min(e.x,t.x),a.y=Math.min(e.y,t.y),a.z=Math.min(e.z,t.z),a},Cartesian3.maximumByComponent=function(e,t,a){return Check_default.typeOf.object("first",e),Check_default.typeOf.object("second",t),Check_default.typeOf.object("result",a),a.x=Math.max(e.x,t.x),a.y=Math.max(e.y,t.y),a.z=Math.max(e.z,t.z),a},Cartesian3.clamp=function(e,t,a,r){Check_default.typeOf.object("value",e),Check_default.typeOf.object("min",t),Check_default.typeOf.object("max",a),Check_default.typeOf.object("result",r);const n=Math_default.clamp(e.x,t.x,a.x),i=Math_default.clamp(e.y,t.y,a.y),u=Math_default.clamp(e.z,t.z,a.z);return r.x=n,r.y=i,r.z=u,r},Cartesian3.magnitudeSquared=function(e){return Check_default.typeOf.object("cartesian",e),e.x*e.x+e.y*e.y+e.z*e.z},Cartesian3.magnitude=function(e){return Math.sqrt(Cartesian3.magnitudeSquared(e))};var distanceScratch=new Cartesian3;Cartesian3.distance=function(e,t){return Check_default.typeOf.object("left",e),Check_default.typeOf.object("right",t),Cartesian3.subtract(e,t,distanceScratch),Cartesian3.magnitude(distanceScratch)},Cartesian3.distanceSquared=function(e,t){return Check_default.typeOf.object("left",e),Check_default.typeOf.object("right",t),Cartesian3.subtract(e,t,distanceScratch),Cartesian3.magnitudeSquared(distanceScratch)},Cartesian3.normalize=function(e,t){Check_default.typeOf.object("cartesian",e),Check_default.typeOf.object("result",t);const a=Cartesian3.magnitude(e);if(t.x=e.x/a,t.y=e.y/a,t.z=e.z/a,isNaN(t.x)||isNaN(t.y)||isNaN(t.z))throw new DeveloperError_default("normalized result is not a number");return t},Cartesian3.dot=function(e,t){return Check_default.typeOf.object("left",e),Check_default.typeOf.object("right",t),e.x*t.x+e.y*t.y+e.z*t.z},Cartesian3.multiplyComponents=function(e,t,a){return Check_default.typeOf.object("left",e),Check_default.typeOf.object("right",t),Check_default.typeOf.object("result",a),a.x=e.x*t.x,a.y=e.y*t.y,a.z=e.z*t.z,a},Cartesian3.divideComponents=function(e,t,a){return Check_default.typeOf.object("left",e),Check_default.typeOf.object("right",t),Check_default.typeOf.object("result",a),a.x=e.x/t.x,a.y=e.y/t.y,a.z=e.z/t.z,a},Cartesian3.add=function(e,t,a){return Check_default.typeOf.object("left",e),Check_default.typeOf.object("right",t),Check_default.typeOf.object("result",a),a.x=e.x+t.x,a.y=e.y+t.y,a.z=e.z+t.z,a},Cartesian3.subtract=function(e,t,a){return Check_default.typeOf.object("left",e),Check_default.typeOf.object("right",t),Check_default.typeOf.object("result",a),a.x=e.x-t.x,a.y=e.y-t.y,a.z=e.z-t.z,a},Cartesian3.multiplyByScalar=function(e,t,a){return Check_default.typeOf.object("cartesian",e),Check_default.typeOf.number("scalar",t),Check_default.typeOf.object("result",a),a.x=e.x*t,a.y=e.y*t,a.z=e.z*t,a},Cartesian3.divideByScalar=function(e,t,a){return Check_default.typeOf.object("cartesian",e),Check_default.typeOf.number("scalar",t),Check_default.typeOf.object("result",a),a.x=e.x/t,a.y=e.y/t,a.z=e.z/t,a},Cartesian3.negate=function(e,t){return Check_default.typeOf.object("cartesian",e),Check_default.typeOf.object("result",t),t.x=-e.x,t.y=-e.y,t.z=-e.z,t},Cartesian3.abs=function(e,t){return Check_default.typeOf.object("cartesian",e),Check_default.typeOf.object("result",t),t.x=Math.abs(e.x),t.y=Math.abs(e.y),t.z=Math.abs(e.z),t};var lerpScratch=new Cartesian3;Cartesian3.lerp=function(e,t,a,r){return Check_default.typeOf.object("start",e),Check_default.typeOf.object("end",t),Check_default.typeOf.number("t",a),Check_default.typeOf.object("result",r),Cartesian3.multiplyByScalar(t,a,lerpScratch),r=Cartesian3.multiplyByScalar(e,1-a,r),Cartesian3.add(lerpScratch,r,r)};var angleBetweenScratch=new Cartesian3,angleBetweenScratch2=new Cartesian3;Cartesian3.angleBetween=function(e,t){Check_default.typeOf.object("left",e),Check_default.typeOf.object("right",t),Cartesian3.normalize(e,angleBetweenScratch),Cartesian3.normalize(t,angleBetweenScratch2);const a=Cartesian3.dot(angleBetweenScratch,angleBetweenScratch2),r=Cartesian3.magnitude(Cartesian3.cross(angleBetweenScratch,angleBetweenScratch2,angleBetweenScratch));return Math.atan2(r,a)};var mostOrthogonalAxisScratch=new Cartesian3;Cartesian3.mostOrthogonalAxis=function(e,t){Check_default.typeOf.object("cartesian",e),Check_default.typeOf.object("result",t);const a=Cartesian3.normalize(e,mostOrthogonalAxisScratch);return Cartesian3.abs(a,a),a.x<=a.y?a.x<=a.z?Cartesian3.clone(Cartesian3.UNIT_X,t):Cartesian3.clone(Cartesian3.UNIT_Z,t):a.y<=a.z?Cartesian3.clone(Cartesian3.UNIT_Y,t):Cartesian3.clone(Cartesian3.UNIT_Z,t)},Cartesian3.projectVector=function(e,t,a){Check_default.defined("a",e),Check_default.defined("b",t),Check_default.defined("result",a);const r=Cartesian3.dot(e,t)/Cartesian3.dot(t,t);return Cartesian3.multiplyByScalar(t,r,a)},Cartesian3.equals=function(e,t){return e===t||defined_default(e)&&defined_default(t)&&e.x===t.x&&e.y===t.y&&e.z===t.z},Cartesian3.equalsArray=function(e,t,a){return e.x===t[a]&&e.y===t[a+1]&&e.z===t[a+2]},Cartesian3.equalsEpsilon=function(e,t,a,r){return e===t||defined_default(e)&&defined_default(t)&&Math_default.equalsEpsilon(e.x,t.x,a,r)&&Math_default.equalsEpsilon(e.y,t.y,a,r)&&Math_default.equalsEpsilon(e.z,t.z,a,r)},Cartesian3.cross=function(e,t,a){Check_default.typeOf.object("left",e),Check_default.typeOf.object("right",t),Check_default.typeOf.object("result",a);const r=e.x,n=e.y,i=e.z,u=t.x,l=t.y,f=t.z,c=n*f-i*l,o=i*u-r*f,d=r*l-n*u;return a.x=c,a.y=o,a.z=d,a},Cartesian3.midpoint=function(e,t,a){return Check_default.typeOf.object("left",e),Check_default.typeOf.object("right",t),Check_default.typeOf.object("result",a),a.x=.5*(e.x+t.x),a.y=.5*(e.y+t.y),a.z=.5*(e.z+t.z),a},Cartesian3.fromDegrees=function(e,t,a,r,n){return Check_default.typeOf.number("longitude",e),Check_default.typeOf.number("latitude",t),e=Math_default.toRadians(e),t=Math_default.toRadians(t),Cartesian3.fromRadians(e,t,a,r,n)};var scratchN=new Cartesian3,scratchK=new Cartesian3,wgs84RadiiSquared=new Cartesian3(40680631590769,40680631590769,40408299984661.445);Cartesian3.fromRadians=function(e,t,a,r,n){Check_default.typeOf.number("longitude",e),Check_default.typeOf.number("latitude",t),a=defaultValue_default(a,0);const i=defined_default(r)?r.radiiSquared:wgs84RadiiSquared,u=Math.cos(t);scratchN.x=u*Math.cos(e),scratchN.y=u*Math.sin(e),scratchN.z=Math.sin(t),scratchN=Cartesian3.normalize(scratchN,scratchN),Cartesian3.multiplyComponents(i,scratchN,scratchK);const l=Math.sqrt(Cartesian3.dot(scratchN,scratchK));return scratchK=Cartesian3.divideByScalar(scratchK,l,scratchK),scratchN=Cartesian3.multiplyByScalar(scratchN,a,scratchN),defined_default(n)||(n=new Cartesian3),Cartesian3.add(scratchK,scratchN,n)},Cartesian3.fromDegreesArray=function(e,t,a){if(Check_default.defined("coordinates",e),e.length<2||e.length%2!=0)throw new DeveloperError_default("the number of coordinates must be a multiple of 2 and at least 2");const r=e.length;defined_default(a)?a.length=r/2:a=new Array(r/2);for(let n=0;n<r;n+=2){const r=e[n],i=e[n+1],u=n/2;a[u]=Cartesian3.fromDegrees(r,i,0,t,a[u])}return a},Cartesian3.fromRadiansArray=function(e,t,a){if(Check_default.defined("coordinates",e),e.length<2||e.length%2!=0)throw new DeveloperError_default("the number of coordinates must be a multiple of 2 and at least 2");const r=e.length;defined_default(a)?a.length=r/2:a=new Array(r/2);for(let n=0;n<r;n+=2){const r=e[n],i=e[n+1],u=n/2;a[u]=Cartesian3.fromRadians(r,i,0,t,a[u])}return a},Cartesian3.fromDegreesArrayHeights=function(e,t,a){if(Check_default.defined("coordinates",e),e.length<3||e.length%3!=0)throw new DeveloperError_default("the number of coordinates must be a multiple of 3 and at least 3");const r=e.length;defined_default(a)?a.length=r/3:a=new Array(r/3);for(let n=0;n<r;n+=3){const r=e[n],i=e[n+1],u=e[n+2],l=n/3;a[l]=Cartesian3.fromDegrees(r,i,u,t,a[l])}return a},Cartesian3.fromRadiansArrayHeights=function(e,t,a){if(Check_default.defined("coordinates",e),e.length<3||e.length%3!=0)throw new DeveloperError_default("the number of coordinates must be a multiple of 3 and at least 3");const r=e.length;defined_default(a)?a.length=r/3:a=new Array(r/3);for(let n=0;n<r;n+=3){const r=e[n],i=e[n+1],u=e[n+2],l=n/3;a[l]=Cartesian3.fromRadians(r,i,u,t,a[l])}return a},Cartesian3.ZERO=Object.freeze(new Cartesian3(0,0,0)),Cartesian3.ONE=Object.freeze(new Cartesian3(1,1,1)),Cartesian3.UNIT_X=Object.freeze(new Cartesian3(1,0,0)),Cartesian3.UNIT_Y=Object.freeze(new Cartesian3(0,1,0)),Cartesian3.UNIT_Z=Object.freeze(new Cartesian3(0,0,1)),Cartesian3.prototype.clone=function(e){return Cartesian3.clone(this,e)},Cartesian3.prototype.equals=function(e){return Cartesian3.equals(this,e)},Cartesian3.prototype.equalsEpsilon=function(e,t,a){return Cartesian3.equalsEpsilon(this,e,t,a)},Cartesian3.prototype.toString=function(){return`(${this.x}, ${this.y}, ${this.z})`};var Cartesian3_default=Cartesian3,scaleToGeodeticSurfaceIntersection=new Cartesian3_default,scaleToGeodeticSurfaceGradient=new Cartesian3_default;function scaleToGeodeticSurface(e,t,a,r,n){if(!defined_default(e))throw new DeveloperError_default("cartesian is required.");if(!defined_default(t))throw new DeveloperError_default("oneOverRadii is required.");if(!defined_default(a))throw new DeveloperError_default("oneOverRadiiSquared is required.");if(!defined_default(r))throw new DeveloperError_default("centerToleranceSquared is required.");const i=e.x,u=e.y,l=e.z,f=t.x,c=t.y,o=t.z,d=i*i*f*f,s=u*u*c*c,h=l*l*o*o,_=d+s+h,C=Math.sqrt(1/_),p=Cartesian3_default.multiplyByScalar(e,C,scaleToGeodeticSurfaceIntersection);if(_<r)return isFinite(C)?Cartesian3_default.clone(p,n):void 0;const y=a.x,m=a.y,x=a.z,g=scaleToGeodeticSurfaceGradient;g.x=p.x*y*2,g.y=p.y*m*2,g.z=p.z*x*2;let O,M,b,k,w,j,S,z,E,q,v,T=(1-C)*Cartesian3_default.magnitude(e)/(.5*Cartesian3_default.magnitude(g)),R=0;do{T-=R,b=1/(1+T*y),k=1/(1+T*m),w=1/(1+T*x),j=b*b,S=k*k,z=w*w,E=j*b,q=S*k,v=z*w,O=d*j+s*S+h*z-1,M=d*E*y+s*q*m+h*v*x,R=O/(-2*M)}while(Math.abs(O)>Math_default.EPSILON12);return defined_default(n)?(n.x=i*b,n.y=u*k,n.z=l*w,n):new Cartesian3_default(i*b,u*k,l*w)}var scaleToGeodeticSurface_default=scaleToGeodeticSurface;function Cartographic(e,t,a){this.longitude=defaultValue_default(e,0),this.latitude=defaultValue_default(t,0),this.height=defaultValue_default(a,0)}Cartographic.fromRadians=function(e,t,a,r){return Check_default.typeOf.number("longitude",e),Check_default.typeOf.number("latitude",t),a=defaultValue_default(a,0),defined_default(r)?(r.longitude=e,r.latitude=t,r.height=a,r):new Cartographic(e,t,a)},Cartographic.fromDegrees=function(e,t,a,r){return Check_default.typeOf.number("longitude",e),Check_default.typeOf.number("latitude",t),e=Math_default.toRadians(e),t=Math_default.toRadians(t),Cartographic.fromRadians(e,t,a,r)};var cartesianToCartographicN=new Cartesian3_default,cartesianToCartographicP=new Cartesian3_default,cartesianToCartographicH=new Cartesian3_default,wgs84OneOverRadii=new Cartesian3_default(1/6378137,1/6378137,1/6356752.314245179),wgs84OneOverRadiiSquared=new Cartesian3_default(1/40680631590769,1/40680631590769,1/40408299984661.445),wgs84CenterToleranceSquared=Math_default.EPSILON1;Cartographic.fromCartesian=function(e,t,a){const r=defined_default(t)?t.oneOverRadii:wgs84OneOverRadii,n=defined_default(t)?t.oneOverRadiiSquared:wgs84OneOverRadiiSquared,i=defined_default(t)?t._centerToleranceSquared:wgs84CenterToleranceSquared,u=scaleToGeodeticSurface_default(e,r,n,i,cartesianToCartographicP);if(!defined_default(u))return;let l=Cartesian3_default.multiplyComponents(u,n,cartesianToCartographicN);l=Cartesian3_default.normalize(l,l);const f=Cartesian3_default.subtract(e,u,cartesianToCartographicH),c=Math.atan2(l.y,l.x),o=Math.asin(l.z),d=Math_default.sign(Cartesian3_default.dot(f,e))*Cartesian3_default.magnitude(f);return defined_default(a)?(a.longitude=c,a.latitude=o,a.height=d,a):new Cartographic(c,o,d)},Cartographic.toCartesian=function(e,t,a){return Check_default.defined("cartographic",e),Cartesian3_default.fromRadians(e.longitude,e.latitude,e.height,t,a)},Cartographic.clone=function(e,t){if(defined_default(e))return defined_default(t)?(t.longitude=e.longitude,t.latitude=e.latitude,t.height=e.height,t):new Cartographic(e.longitude,e.latitude,e.height)},Cartographic.equals=function(e,t){return e===t||defined_default(e)&&defined_default(t)&&e.longitude===t.longitude&&e.latitude===t.latitude&&e.height===t.height},Cartographic.equalsEpsilon=function(e,t,a){return a=defaultValue_default(a,0),e===t||defined_default(e)&&defined_default(t)&&Math.abs(e.longitude-t.longitude)<=a&&Math.abs(e.latitude-t.latitude)<=a&&Math.abs(e.height-t.height)<=a},Cartographic.ZERO=Object.freeze(new Cartographic(0,0,0)),Cartographic.prototype.clone=function(e){return Cartographic.clone(this,e)},Cartographic.prototype.equals=function(e){return Cartographic.equals(this,e)},Cartographic.prototype.equalsEpsilon=function(e,t){return Cartographic.equalsEpsilon(this,e,t)},Cartographic.prototype.toString=function(){return`(${this.longitude}, ${this.latitude}, ${this.height})`};var Cartographic_default=Cartographic;function initialize(e,t,a,r){t=defaultValue_default(t,0),a=defaultValue_default(a,0),r=defaultValue_default(r,0),Check_default.typeOf.number.greaterThanOrEquals("x",t,0),Check_default.typeOf.number.greaterThanOrEquals("y",a,0),Check_default.typeOf.number.greaterThanOrEquals("z",r,0),e._radii=new Cartesian3_default(t,a,r),e._radiiSquared=new Cartesian3_default(t*t,a*a,r*r),e._radiiToTheFourth=new Cartesian3_default(t*t*t*t,a*a*a*a,r*r*r*r),e._oneOverRadii=new Cartesian3_default(0===t?0:1/t,0===a?0:1/a,0===r?0:1/r),e._oneOverRadiiSquared=new Cartesian3_default(0===t?0:1/(t*t),0===a?0:1/(a*a),0===r?0:1/(r*r)),e._minimumRadius=Math.min(t,a,r),e._maximumRadius=Math.max(t,a,r),e._centerToleranceSquared=Math_default.EPSILON1,0!==e._radiiSquared.z&&(e._squaredXOverSquaredZ=e._radiiSquared.x/e._radiiSquared.z)}function Ellipsoid(e,t,a){this._radii=void 0,this._radiiSquared=void 0,this._radiiToTheFourth=void 0,this._oneOverRadii=void 0,this._oneOverRadiiSquared=void 0,this._minimumRadius=void 0,this._maximumRadius=void 0,this._centerToleranceSquared=void 0,this._squaredXOverSquaredZ=void 0,initialize(this,e,t,a)}Object.defineProperties(Ellipsoid.prototype,{radii:{get:function(){return this._radii}},radiiSquared:{get:function(){return this._radiiSquared}},radiiToTheFourth:{get:function(){return this._radiiToTheFourth}},oneOverRadii:{get:function(){return this._oneOverRadii}},oneOverRadiiSquared:{get:function(){return this._oneOverRadiiSquared}},minimumRadius:{get:function(){return this._minimumRadius}},maximumRadius:{get:function(){return this._maximumRadius}}}),Ellipsoid.clone=function(e,t){if(!defined_default(e))return;const a=e._radii;return defined_default(t)?(Cartesian3_default.clone(a,t._radii),Cartesian3_default.clone(e._radiiSquared,t._radiiSquared),Cartesian3_default.clone(e._radiiToTheFourth,t._radiiToTheFourth),Cartesian3_default.clone(e._oneOverRadii,t._oneOverRadii),Cartesian3_default.clone(e._oneOverRadiiSquared,t._oneOverRadiiSquared),t._minimumRadius=e._minimumRadius,t._maximumRadius=e._maximumRadius,t._centerToleranceSquared=e._centerToleranceSquared,t):new Ellipsoid(a.x,a.y,a.z)},Ellipsoid.fromCartesian3=function(e,t){return defined_default(t)||(t=new Ellipsoid),defined_default(e)?(initialize(t,e.x,e.y,e.z),t):t},Ellipsoid.WGS84=Object.freeze(new Ellipsoid(6378137,6378137,6356752.314245179)),Ellipsoid.UNIT_SPHERE=Object.freeze(new Ellipsoid(1,1,1)),Ellipsoid.MOON=Object.freeze(new Ellipsoid(Math_default.LUNAR_RADIUS,Math_default.LUNAR_RADIUS,Math_default.LUNAR_RADIUS)),Ellipsoid.prototype.clone=function(e){return Ellipsoid.clone(this,e)},Ellipsoid.packedLength=Cartesian3_default.packedLength,Ellipsoid.pack=function(e,t,a){return Check_default.typeOf.object("value",e),Check_default.defined("array",t),a=defaultValue_default(a,0),Cartesian3_default.pack(e._radii,t,a),t},Ellipsoid.unpack=function(e,t,a){Check_default.defined("array",e),t=defaultValue_default(t,0);const r=Cartesian3_default.unpack(e,t);return Ellipsoid.fromCartesian3(r,a)},Ellipsoid.prototype.geocentricSurfaceNormal=Cartesian3_default.normalize,Ellipsoid.prototype.geodeticSurfaceNormalCartographic=function(e,t){Check_default.typeOf.object("cartographic",e);const a=e.longitude,r=e.latitude,n=Math.cos(r),i=n*Math.cos(a),u=n*Math.sin(a),l=Math.sin(r);return defined_default(t)||(t=new Cartesian3_default),t.x=i,t.y=u,t.z=l,Cartesian3_default.normalize(t,t)},Ellipsoid.prototype.geodeticSurfaceNormal=function(e,t){if(!Cartesian3_default.equalsEpsilon(e,Cartesian3_default.ZERO,Math_default.EPSILON14))return defined_default(t)||(t=new Cartesian3_default),t=Cartesian3_default.multiplyComponents(e,this._oneOverRadiiSquared,t),Cartesian3_default.normalize(t,t)};var cartographicToCartesianNormal=new Cartesian3_default,cartographicToCartesianK=new Cartesian3_default;Ellipsoid.prototype.cartographicToCartesian=function(e,t){const a=cartographicToCartesianNormal,r=cartographicToCartesianK;this.geodeticSurfaceNormalCartographic(e,a),Cartesian3_default.multiplyComponents(this._radiiSquared,a,r);const n=Math.sqrt(Cartesian3_default.dot(a,r));return Cartesian3_default.divideByScalar(r,n,r),Cartesian3_default.multiplyByScalar(a,e.height,a),defined_default(t)||(t=new Cartesian3_default),Cartesian3_default.add(r,a,t)},Ellipsoid.prototype.cartographicArrayToCartesianArray=function(e,t){Check_default.defined("cartographics",e);const a=e.length;defined_default(t)?t.length=a:t=new Array(a);for(let r=0;r<a;r++)t[r]=this.cartographicToCartesian(e[r],t[r]);return t};var cartesianToCartographicN2=new Cartesian3_default,cartesianToCartographicP2=new Cartesian3_default,cartesianToCartographicH2=new Cartesian3_default;Ellipsoid.prototype.cartesianToCartographic=function(e,t){const a=this.scaleToGeodeticSurface(e,cartesianToCartographicP2);if(!defined_default(a))return;const r=this.geodeticSurfaceNormal(a,cartesianToCartographicN2),n=Cartesian3_default.subtract(e,a,cartesianToCartographicH2),i=Math.atan2(r.y,r.x),u=Math.asin(r.z),l=Math_default.sign(Cartesian3_default.dot(n,e))*Cartesian3_default.magnitude(n);return defined_default(t)?(t.longitude=i,t.latitude=u,t.height=l,t):new Cartographic_default(i,u,l)},Ellipsoid.prototype.cartesianArrayToCartographicArray=function(e,t){Check_default.defined("cartesians",e);const a=e.length;defined_default(t)?t.length=a:t=new Array(a);for(let r=0;r<a;++r)t[r]=this.cartesianToCartographic(e[r],t[r]);return t},Ellipsoid.prototype.scaleToGeodeticSurface=function(e,t){return scaleToGeodeticSurface_default(e,this._oneOverRadii,this._oneOverRadiiSquared,this._centerToleranceSquared,t)},Ellipsoid.prototype.scaleToGeocentricSurface=function(e,t){Check_default.typeOf.object("cartesian",e),defined_default(t)||(t=new Cartesian3_default);const a=e.x,r=e.y,n=e.z,i=this._oneOverRadiiSquared,u=1/Math.sqrt(a*a*i.x+r*r*i.y+n*n*i.z);return Cartesian3_default.multiplyByScalar(e,u,t)},Ellipsoid.prototype.transformPositionToScaledSpace=function(e,t){return defined_default(t)||(t=new Cartesian3_default),Cartesian3_default.multiplyComponents(e,this._oneOverRadii,t)},Ellipsoid.prototype.transformPositionFromScaledSpace=function(e,t){return defined_default(t)||(t=new Cartesian3_default),Cartesian3_default.multiplyComponents(e,this._radii,t)},Ellipsoid.prototype.equals=function(e){return this===e||defined_default(e)&&Cartesian3_default.equals(this._radii,e._radii)},Ellipsoid.prototype.toString=function(){return this._radii.toString()},Ellipsoid.prototype.getSurfaceNormalIntersectionWithZAxis=function(e,t,a){if(Check_default.typeOf.object("position",e),!Math_default.equalsEpsilon(this._radii.x,this._radii.y,Math_default.EPSILON15))throw new DeveloperError_default("Ellipsoid must be an ellipsoid of revolution (radii.x == radii.y)");Check_default.typeOf.number.greaterThan("Ellipsoid.radii.z",this._radii.z,0),t=defaultValue_default(t,0);const r=this._squaredXOverSquaredZ;if(defined_default(a)||(a=new Cartesian3_default),a.x=0,a.y=0,a.z=e.z*(1-r),!(Math.abs(a.z)>=this._radii.z-t))return a};var abscissas=[.14887433898163,.43339539412925,.67940956829902,.86506336668898,.97390652851717,0],weights=[.29552422471475,.26926671930999,.21908636251598,.14945134915058,.066671344308684,0];function gaussLegendreQuadrature(e,t,a){Check_default.typeOf.number("a",e),Check_default.typeOf.number("b",t),Check_default.typeOf.func("func",a);const r=.5*(t+e),n=.5*(t-e);let i=0;for(let e=0;e<5;e++){const t=n*abscissas[e];i+=weights[e]*(a(r+t)+a(r-t))}return i*=n,i}Ellipsoid.prototype.surfaceArea=function(e){Check_default.typeOf.object("rectangle",e);const t=e.west;let a=e.east;const r=e.south,n=e.north;for(;a<t;)a+=Math_default.TWO_PI;const i=this._radiiSquared,u=i.x,l=i.y,f=i.z,c=u*l;return gaussLegendreQuadrature(r,n,(function(e){const r=Math.cos(e),n=Math.sin(e);return Math.cos(e)*gaussLegendreQuadrature(t,a,(function(e){const t=Math.cos(e),a=Math.sin(e);return Math.sqrt(c*n*n+f*(l*t*t+u*a*a)*r*r)}))}))};var Ellipsoid_default=Ellipsoid;function Matrix3(e,t,a,r,n,i,u,l,f){this[0]=defaultValue_default(e,0),this[1]=defaultValue_default(r,0),this[2]=defaultValue_default(u,0),this[3]=defaultValue_default(t,0),this[4]=defaultValue_default(n,0),this[5]=defaultValue_default(l,0),this[6]=defaultValue_default(a,0),this[7]=defaultValue_default(i,0),this[8]=defaultValue_default(f,0)}Matrix3.packedLength=9,Matrix3.pack=function(e,t,a){return Check_default.typeOf.object("value",e),Check_default.defined("array",t),a=defaultValue_default(a,0),t[a++]=e[0],t[a++]=e[1],t[a++]=e[2],t[a++]=e[3],t[a++]=e[4],t[a++]=e[5],t[a++]=e[6],t[a++]=e[7],t[a++]=e[8],t},Matrix3.unpack=function(e,t,a){return Check_default.defined("array",e),t=defaultValue_default(t,0),defined_default(a)||(a=new Matrix3),a[0]=e[t++],a[1]=e[t++],a[2]=e[t++],a[3]=e[t++],a[4]=e[t++],a[5]=e[t++],a[6]=e[t++],a[7]=e[t++],a[8]=e[t++],a},Matrix3.packArray=function(e,t){Check_default.defined("array",e);const a=e.length,r=9*a;if(defined_default(t)){if(!Array.isArray(t)&&t.length!==r)throw new DeveloperError_default("If result is a typed array, it must have exactly array.length * 9 elements");t.length!==r&&(t.length=r)}else t=new Array(r);for(let r=0;r<a;++r)Matrix3.pack(e[r],t,9*r);return t},Matrix3.unpackArray=function(e,t){if(Check_default.defined("array",e),Check_default.typeOf.number.greaterThanOrEquals("array.length",e.length,9),e.length%9!=0)throw new DeveloperError_default("array length must be a multiple of 9.");const a=e.length;defined_default(t)?t.length=a/9:t=new Array(a/9);for(let r=0;r<a;r+=9){const a=r/9;t[a]=Matrix3.unpack(e,r,t[a])}return t},Matrix3.clone=function(e,t){if(defined_default(e))return defined_default(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t):new Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])},Matrix3.fromArray=Matrix3.unpack,Matrix3.fromColumnMajorArray=function(e,t){return Check_default.defined("values",e),Matrix3.clone(e,t)},Matrix3.fromRowMajorArray=function(e,t){return Check_default.defined("values",e),defined_default(t)?(t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],t):new Matrix3(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8])},Matrix3.fromQuaternion=function(e,t){Check_default.typeOf.object("quaternion",e);const a=e.x*e.x,r=e.x*e.y,n=e.x*e.z,i=e.x*e.w,u=e.y*e.y,l=e.y*e.z,f=e.y*e.w,c=e.z*e.z,o=e.z*e.w,d=e.w*e.w,s=a-u-c+d,h=2*(r-o),_=2*(n+f),C=2*(r+o),p=-a+u-c+d,y=2*(l-i),m=2*(n-f),x=2*(l+i),g=-a-u+c+d;return defined_default(t)?(t[0]=s,t[1]=C,t[2]=m,t[3]=h,t[4]=p,t[5]=x,t[6]=_,t[7]=y,t[8]=g,t):new Matrix3(s,h,_,C,p,y,m,x,g)},Matrix3.fromHeadingPitchRoll=function(e,t){Check_default.typeOf.object("headingPitchRoll",e);const a=Math.cos(-e.pitch),r=Math.cos(-e.heading),n=Math.cos(e.roll),i=Math.sin(-e.pitch),u=Math.sin(-e.heading),l=Math.sin(e.roll),f=a*r,c=-n*u+l*i*r,o=l*u+n*i*r,d=a*u,s=n*r+l*i*u,h=-l*r+n*i*u,_=-i,C=l*a,p=n*a;return defined_default(t)?(t[0]=f,t[1]=d,t[2]=_,t[3]=c,t[4]=s,t[5]=C,t[6]=o,t[7]=h,t[8]=p,t):new Matrix3(f,c,o,d,s,h,_,C,p)},Matrix3.fromScale=function(e,t){return Check_default.typeOf.object("scale",e),defined_default(t)?(t[0]=e.x,t[1]=0,t[2]=0,t[3]=0,t[4]=e.y,t[5]=0,t[6]=0,t[7]=0,t[8]=e.z,t):new Matrix3(e.x,0,0,0,e.y,0,0,0,e.z)},Matrix3.fromUniformScale=function(e,t){return Check_default.typeOf.number("scale",e),defined_default(t)?(t[0]=e,t[1]=0,t[2]=0,t[3]=0,t[4]=e,t[5]=0,t[6]=0,t[7]=0,t[8]=e,t):new Matrix3(e,0,0,0,e,0,0,0,e)},Matrix3.fromCrossProduct=function(e,t){return Check_default.typeOf.object("vector",e),defined_default(t)?(t[0]=0,t[1]=e.z,t[2]=-e.y,t[3]=-e.z,t[4]=0,t[5]=e.x,t[6]=e.y,t[7]=-e.x,t[8]=0,t):new Matrix3(0,-e.z,e.y,e.z,0,-e.x,-e.y,e.x,0)},Matrix3.fromRotationX=function(e,t){Check_default.typeOf.number("angle",e);const a=Math.cos(e),r=Math.sin(e);return defined_default(t)?(t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=a,t[5]=r,t[6]=0,t[7]=-r,t[8]=a,t):new Matrix3(1,0,0,0,a,-r,0,r,a)},Matrix3.fromRotationY=function(e,t){Check_default.typeOf.number("angle",e);const a=Math.cos(e),r=Math.sin(e);return defined_default(t)?(t[0]=a,t[1]=0,t[2]=-r,t[3]=0,t[4]=1,t[5]=0,t[6]=r,t[7]=0,t[8]=a,t):new Matrix3(a,0,r,0,1,0,-r,0,a)},Matrix3.fromRotationZ=function(e,t){Check_default.typeOf.number("angle",e);const a=Math.cos(e),r=Math.sin(e);return defined_default(t)?(t[0]=a,t[1]=r,t[2]=0,t[3]=-r,t[4]=a,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t):new Matrix3(a,-r,0,r,a,0,0,0,1)},Matrix3.toArray=function(e,t){return Check_default.typeOf.object("matrix",e),defined_default(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t):[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},Matrix3.getElementIndex=function(e,t){return Check_default.typeOf.number.greaterThanOrEquals("row",t,0),Check_default.typeOf.number.lessThanOrEquals("row",t,2),Check_default.typeOf.number.greaterThanOrEquals("column",e,0),Check_default.typeOf.number.lessThanOrEquals("column",e,2),3*e+t},Matrix3.getColumn=function(e,t,a){Check_default.typeOf.object("matrix",e),Check_default.typeOf.number.greaterThanOrEquals("index",t,0),Check_default.typeOf.number.lessThanOrEquals("index",t,2),Check_default.typeOf.object("result",a);const r=3*t,n=e[r],i=e[r+1],u=e[r+2];return a.x=n,a.y=i,a.z=u,a},Matrix3.setColumn=function(e,t,a,r){Check_default.typeOf.object("matrix",e),Check_default.typeOf.number.greaterThanOrEquals("index",t,0),Check_default.typeOf.number.lessThanOrEquals("index",t,2),Check_default.typeOf.object("cartesian",a),Check_default.typeOf.object("result",r);const n=3*t;return(r=Matrix3.clone(e,r))[n]=a.x,r[n+1]=a.y,r[n+2]=a.z,r},Matrix3.getRow=function(e,t,a){Check_default.typeOf.object("matrix",e),Check_default.typeOf.number.greaterThanOrEquals("index",t,0),Check_default.typeOf.number.lessThanOrEquals("index",t,2),Check_default.typeOf.object("result",a);const r=e[t],n=e[t+3],i=e[t+6];return a.x=r,a.y=n,a.z=i,a},Matrix3.setRow=function(e,t,a,r){return Check_default.typeOf.object("matrix",e),Check_default.typeOf.number.greaterThanOrEquals("index",t,0),Check_default.typeOf.number.lessThanOrEquals("index",t,2),Check_default.typeOf.object("cartesian",a),Check_default.typeOf.object("result",r),(r=Matrix3.clone(e,r))[t]=a.x,r[t+3]=a.y,r[t+6]=a.z,r};var scaleScratch1=new Cartesian3_default;Matrix3.setScale=function(e,t,a){Check_default.typeOf.object("matrix",e),Check_default.typeOf.object("scale",t),Check_default.typeOf.object("result",a);const r=Matrix3.getScale(e,scaleScratch1),n=t.x/r.x,i=t.y/r.y,u=t.z/r.z;return a[0]=e[0]*n,a[1]=e[1]*n,a[2]=e[2]*n,a[3]=e[3]*i,a[4]=e[4]*i,a[5]=e[5]*i,a[6]=e[6]*u,a[7]=e[7]*u,a[8]=e[8]*u,a};var scaleScratch2=new Cartesian3_default;Matrix3.setUniformScale=function(e,t,a){Check_default.typeOf.object("matrix",e),Check_default.typeOf.number("scale",t),Check_default.typeOf.object("result",a);const r=Matrix3.getScale(e,scaleScratch2),n=t/r.x,i=t/r.y,u=t/r.z;return a[0]=e[0]*n,a[1]=e[1]*n,a[2]=e[2]*n,a[3]=e[3]*i,a[4]=e[4]*i,a[5]=e[5]*i,a[6]=e[6]*u,a[7]=e[7]*u,a[8]=e[8]*u,a};var scratchColumn=new Cartesian3_default;Matrix3.getScale=function(e,t){return Check_default.typeOf.object("matrix",e),Check_default.typeOf.object("result",t),t.x=Cartesian3_default.magnitude(Cartesian3_default.fromElements(e[0],e[1],e[2],scratchColumn)),t.y=Cartesian3_default.magnitude(Cartesian3_default.fromElements(e[3],e[4],e[5],scratchColumn)),t.z=Cartesian3_default.magnitude(Cartesian3_default.fromElements(e[6],e[7],e[8],scratchColumn)),t};var scaleScratch3=new Cartesian3_default;Matrix3.getMaximumScale=function(e){return Matrix3.getScale(e,scaleScratch3),Cartesian3_default.maximumComponent(scaleScratch3)};var scaleScratch4=new Cartesian3_default;Matrix3.setRotation=function(e,t,a){Check_default.typeOf.object("matrix",e),Check_default.typeOf.object("result",a);const r=Matrix3.getScale(e,scaleScratch4);return a[0]=t[0]*r.x,a[1]=t[1]*r.x,a[2]=t[2]*r.x,a[3]=t[3]*r.y,a[4]=t[4]*r.y,a[5]=t[5]*r.y,a[6]=t[6]*r.z,a[7]=t[7]*r.z,a[8]=t[8]*r.z,a};var scaleScratch5=new Cartesian3_default;function computeFrobeniusNorm(e){let t=0;for(let a=0;a<9;++a){const r=e[a];t+=r*r}return Math.sqrt(t)}Matrix3.getRotation=function(e,t){Check_default.typeOf.object("matrix",e),Check_default.typeOf.object("result",t);const a=Matrix3.getScale(e,scaleScratch5);return t[0]=e[0]/a.x,t[1]=e[1]/a.x,t[2]=e[2]/a.x,t[3]=e[3]/a.y,t[4]=e[4]/a.y,t[5]=e[5]/a.y,t[6]=e[6]/a.z,t[7]=e[7]/a.z,t[8]=e[8]/a.z,t},Matrix3.multiply=function(e,t,a){Check_default.typeOf.object("left",e),Check_default.typeOf.object("right",t),Check_default.typeOf.object("result",a);const r=e[0]*t[0]+e[3]*t[1]+e[6]*t[2],n=e[1]*t[0]+e[4]*t[1]+e[7]*t[2],i=e[2]*t[0]+e[5]*t[1]+e[8]*t[2],u=e[0]*t[3]+e[3]*t[4]+e[6]*t[5],l=e[1]*t[3]+e[4]*t[4]+e[7]*t[5],f=e[2]*t[3]+e[5]*t[4]+e[8]*t[5],c=e[0]*t[6]+e[3]*t[7]+e[6]*t[8],o=e[1]*t[6]+e[4]*t[7]+e[7]*t[8],d=e[2]*t[6]+e[5]*t[7]+e[8]*t[8];return a[0]=r,a[1]=n,a[2]=i,a[3]=u,a[4]=l,a[5]=f,a[6]=c,a[7]=o,a[8]=d,a},Matrix3.add=function(e,t,a){return Check_default.typeOf.object("left",e),Check_default.typeOf.object("right",t),Check_default.typeOf.object("result",a),a[0]=e[0]+t[0],a[1]=e[1]+t[1],a[2]=e[2]+t[2],a[3]=e[3]+t[3],a[4]=e[4]+t[4],a[5]=e[5]+t[5],a[6]=e[6]+t[6],a[7]=e[7]+t[7],a[8]=e[8]+t[8],a},Matrix3.subtract=function(e,t,a){return Check_default.typeOf.object("left",e),Check_default.typeOf.object("right",t),Check_default.typeOf.object("result",a),a[0]=e[0]-t[0],a[1]=e[1]-t[1],a[2]=e[2]-t[2],a[3]=e[3]-t[3],a[4]=e[4]-t[4],a[5]=e[5]-t[5],a[6]=e[6]-t[6],a[7]=e[7]-t[7],a[8]=e[8]-t[8],a},Matrix3.multiplyByVector=function(e,t,a){Check_default.typeOf.object("matrix",e),Check_default.typeOf.object("cartesian",t),Check_default.typeOf.object("result",a);const r=t.x,n=t.y,i=t.z,u=e[0]*r+e[3]*n+e[6]*i,l=e[1]*r+e[4]*n+e[7]*i,f=e[2]*r+e[5]*n+e[8]*i;return a.x=u,a.y=l,a.z=f,a},Matrix3.multiplyByScalar=function(e,t,a){return Check_default.typeOf.object("matrix",e),Check_default.typeOf.number("scalar",t),Check_default.typeOf.object("result",a),a[0]=e[0]*t,a[1]=e[1]*t,a[2]=e[2]*t,a[3]=e[3]*t,a[4]=e[4]*t,a[5]=e[5]*t,a[6]=e[6]*t,a[7]=e[7]*t,a[8]=e[8]*t,a},Matrix3.multiplyByScale=function(e,t,a){return Check_default.typeOf.object("matrix",e),Check_default.typeOf.object("scale",t),Check_default.typeOf.object("result",a),a[0]=e[0]*t.x,a[1]=e[1]*t.x,a[2]=e[2]*t.x,a[3]=e[3]*t.y,a[4]=e[4]*t.y,a[5]=e[5]*t.y,a[6]=e[6]*t.z,a[7]=e[7]*t.z,a[8]=e[8]*t.z,a},Matrix3.multiplyByUniformScale=function(e,t,a){return Check_default.typeOf.object("matrix",e),Check_default.typeOf.number("scale",t),Check_default.typeOf.object("result",a),a[0]=e[0]*t,a[1]=e[1]*t,a[2]=e[2]*t,a[3]=e[3]*t,a[4]=e[4]*t,a[5]=e[5]*t,a[6]=e[6]*t,a[7]=e[7]*t,a[8]=e[8]*t,a},Matrix3.negate=function(e,t){return Check_default.typeOf.object("matrix",e),Check_default.typeOf.object("result",t),t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t[4]=-e[4],t[5]=-e[5],t[6]=-e[6],t[7]=-e[7],t[8]=-e[8],t},Matrix3.transpose=function(e,t){Check_default.typeOf.object("matrix",e),Check_default.typeOf.object("result",t);const a=e[0],r=e[3],n=e[6],i=e[1],u=e[4],l=e[7],f=e[2],c=e[5],o=e[8];return t[0]=a,t[1]=r,t[2]=n,t[3]=i,t[4]=u,t[5]=l,t[6]=f,t[7]=c,t[8]=o,t};var rowVal=[1,0,0],colVal=[2,2,1];function offDiagonalFrobeniusNorm(e){let t=0;for(let a=0;a<3;++a){const r=e[Matrix3.getElementIndex(colVal[a],rowVal[a])];t+=2*r*r}return Math.sqrt(t)}function shurDecomposition(e,t){const a=Math_default.EPSILON15;let r=0,n=1;for(let t=0;t<3;++t){const a=Math.abs(e[Matrix3.getElementIndex(colVal[t],rowVal[t])]);a>r&&(n=t,r=a)}let i=1,u=0;const l=rowVal[n],f=colVal[n];if(Math.abs(e[Matrix3.getElementIndex(f,l)])>a){const t=(e[Matrix3.getElementIndex(f,f)]-e[Matrix3.getElementIndex(l,l)])/2/e[Matrix3.getElementIndex(f,l)];let a;a=t<0?-1/(-t+Math.sqrt(1+t*t)):1/(t+Math.sqrt(1+t*t)),i=1/Math.sqrt(1+a*a),u=a*i}return(t=Matrix3.clone(Matrix3.IDENTITY,t))[Matrix3.getElementIndex(l,l)]=t[Matrix3.getElementIndex(f,f)]=i,t[Matrix3.getElementIndex(f,l)]=u,t[Matrix3.getElementIndex(l,f)]=-u,t}var jMatrix=new Matrix3,jMatrixTranspose=new Matrix3;Matrix3.computeEigenDecomposition=function(e,t){Check_default.typeOf.object("matrix",e);const a=Math_default.EPSILON20;let r=0,n=0;defined_default(t)||(t={});const i=t.unitary=Matrix3.clone(Matrix3.IDENTITY,t.unitary),u=t.diagonal=Matrix3.clone(e,t.diagonal),l=a*computeFrobeniusNorm(u);for(;n<10&&offDiagonalFrobeniusNorm(u)>l;)shurDecomposition(u,jMatrix),Matrix3.transpose(jMatrix,jMatrixTranspose),Matrix3.multiply(u,jMatrix,u),Matrix3.multiply(jMatrixTranspose,u,u),Matrix3.multiply(i,jMatrix,i),++r>2&&(++n,r=0);return t},Matrix3.abs=function(e,t){return Check_default.typeOf.object("matrix",e),Check_default.typeOf.object("result",t),t[0]=Math.abs(e[0]),t[1]=Math.abs(e[1]),t[2]=Math.abs(e[2]),t[3]=Math.abs(e[3]),t[4]=Math.abs(e[4]),t[5]=Math.abs(e[5]),t[6]=Math.abs(e[6]),t[7]=Math.abs(e[7]),t[8]=Math.abs(e[8]),t},Matrix3.determinant=function(e){Check_default.typeOf.object("matrix",e);const t=e[0],a=e[3],r=e[6],n=e[1],i=e[4],u=e[7],l=e[2],f=e[5],c=e[8];return t*(i*c-f*u)+n*(f*r-a*c)+l*(a*u-i*r)},Matrix3.inverse=function(e,t){Check_default.typeOf.object("matrix",e),Check_default.typeOf.object("result",t);const a=e[0],r=e[1],n=e[2],i=e[3],u=e[4],l=e[5],f=e[6],c=e[7],o=e[8],d=Matrix3.determinant(e);if(Math.abs(d)<=Math_default.EPSILON15)throw new DeveloperError_default("matrix is not invertible");t[0]=u*o-c*l,t[1]=c*n-r*o,t[2]=r*l-u*n,t[3]=f*l-i*o,t[4]=a*o-f*n,t[5]=i*n-a*l,t[6]=i*c-f*u,t[7]=f*r-a*c,t[8]=a*u-i*r;const s=1/d;return Matrix3.multiplyByScalar(t,s,t)};var scratchTransposeMatrix=new Matrix3;Matrix3.inverseTranspose=function(e,t){return Check_default.typeOf.object("matrix",e),Check_default.typeOf.object("result",t),Matrix3.inverse(Matrix3.transpose(e,scratchTransposeMatrix),t)},Matrix3.equals=function(e,t){return e===t||defined_default(e)&&defined_default(t)&&e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]},Matrix3.equalsEpsilon=function(e,t,a){return a=defaultValue_default(a,0),e===t||defined_default(e)&&defined_default(t)&&Math.abs(e[0]-t[0])<=a&&Math.abs(e[1]-t[1])<=a&&Math.abs(e[2]-t[2])<=a&&Math.abs(e[3]-t[3])<=a&&Math.abs(e[4]-t[4])<=a&&Math.abs(e[5]-t[5])<=a&&Math.abs(e[6]-t[6])<=a&&Math.abs(e[7]-t[7])<=a&&Math.abs(e[8]-t[8])<=a},Matrix3.IDENTITY=Object.freeze(new Matrix3(1,0,0,0,1,0,0,0,1)),Matrix3.ZERO=Object.freeze(new Matrix3(0,0,0,0,0,0,0,0,0)),Matrix3.COLUMN0ROW0=0,Matrix3.COLUMN0ROW1=1,Matrix3.COLUMN0ROW2=2,Matrix3.COLUMN1ROW0=3,Matrix3.COLUMN1ROW1=4,Matrix3.COLUMN1ROW2=5,Matrix3.COLUMN2ROW0=6,Matrix3.COLUMN2ROW1=7,Matrix3.COLUMN2ROW2=8,Object.defineProperties(Matrix3.prototype,{length:{get:function(){return Matrix3.packedLength}}}),Matrix3.prototype.clone=function(e){return Matrix3.clone(this,e)},Matrix3.prototype.equals=function(e){return Matrix3.equals(this,e)},Matrix3.equalsArray=function(e,t,a){return e[0]===t[a]&&e[1]===t[a+1]&&e[2]===t[a+2]&&e[3]===t[a+3]&&e[4]===t[a+4]&&e[5]===t[a+5]&&e[6]===t[a+6]&&e[7]===t[a+7]&&e[8]===t[a+8]},Matrix3.prototype.equalsEpsilon=function(e,t){return Matrix3.equalsEpsilon(this,e,t)},Matrix3.prototype.toString=function(){return`(${this[0]}, ${this[3]}, ${this[6]})\n(${this[1]}, ${this[4]}, ${this[7]})\n(${this[2]}, ${this[5]}, ${this[8]})`};var Matrix3_default=Matrix3;export{Cartesian3_default,Cartographic_default,Ellipsoid_default,Matrix3_default};
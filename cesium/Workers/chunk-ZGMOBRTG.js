/*! For license information please see chunk-ZGMOBRTG.js.LICENSE.txt */
import{CornerType_default,PolylineVolumeGeometryLibrary_default}from"./chunk-D325WRAY.js";import{PolylinePipeline_default}from"./chunk-3FCUUN6M.js";import{Quaternion_default}from"./chunk-D4YHO4NZ.js";import{Cartesian3_default,Matrix3_default}from"./chunk-PHQVHDVI.js";import{Math_default}from"./chunk-IZED7ODV.js";import{defined_default}from"./chunk-YS4KPNLC.js";var CorridorGeometryLibrary={},scratch1=new Cartesian3_default,scratch2=new Cartesian3_default,scratch3=new Cartesian3_default,scratch4=new Cartesian3_default,scaleArray2=[new Cartesian3_default,new Cartesian3_default],cartesian1=new Cartesian3_default,cartesian2=new Cartesian3_default,cartesian3=new Cartesian3_default,cartesian4=new Cartesian3_default,cartesian5=new Cartesian3_default,cartesian6=new Cartesian3_default,cartesian7=new Cartesian3_default,cartesian8=new Cartesian3_default,cartesian9=new Cartesian3_default,cartesian10=new Cartesian3_default,quaterion=new Quaternion_default,rotMatrix=new Matrix3_default;function computeRoundCorner(a,e,t,r,n){const i=Cartesian3_default.angleBetween(Cartesian3_default.subtract(e,a,scratch1),Cartesian3_default.subtract(t,a,scratch2)),l=r===CornerType_default.BEVELED?1:Math.ceil(i/Math_default.toRadians(5))+1,s=3*l,d=new Array(s);let u;d[s-3]=t.x,d[s-2]=t.y,d[s-1]=t.z,u=n?Matrix3_default.fromQuaternion(Quaternion_default.fromAxisAngle(Cartesian3_default.negate(a,scratch1),i/l,quaterion),rotMatrix):Matrix3_default.fromQuaternion(Quaternion_default.fromAxisAngle(a,i/l,quaterion),rotMatrix);let o=0;e=Cartesian3_default.clone(e,scratch1);for(let a=0;a<l;a++)e=Matrix3_default.multiplyByVector(u,e,e),d[o++]=e.x,d[o++]=e.y,d[o++]=e.z;return d}function addEndCaps(a){let e=cartesian1,t=cartesian2,r=cartesian3,n=a[1];t=Cartesian3_default.fromArray(a[1],n.length-3,t),r=Cartesian3_default.fromArray(a[0],0,r),e=Cartesian3_default.midpoint(t,r,e);const i=computeRoundCorner(e,t,r,CornerType_default.ROUNDED,!1),l=a.length-1,s=a[l-1];return n=a[l],t=Cartesian3_default.fromArray(s,s.length-3,t),r=Cartesian3_default.fromArray(n,0,r),e=Cartesian3_default.midpoint(t,r,e),[i,computeRoundCorner(e,t,r,CornerType_default.ROUNDED,!1)]}function computeMiteredCorner(a,e,t,r){let n=scratch1;return r||(e=Cartesian3_default.negate(e,e)),n=Cartesian3_default.add(a,e,n),[n.x,n.y,n.z,t.x,t.y,t.z]}function addShiftedPositions(a,e,t,r){const n=new Array(a.length),i=new Array(a.length),l=Cartesian3_default.multiplyByScalar(e,t,scratch1),s=Cartesian3_default.negate(l,scratch2);let d=0,u=a.length-1;for(let e=0;e<a.length;e+=3){const t=Cartesian3_default.fromArray(a,e,scratch3),r=Cartesian3_default.add(t,s,scratch4);n[d++]=r.x,n[d++]=r.y,n[d++]=r.z;const o=Cartesian3_default.add(t,l,scratch4);i[u--]=o.z,i[u--]=o.y,i[u--]=o.x}return r.push(n,i),r}CorridorGeometryLibrary.addAttribute=function(a,e,t,r){const n=e.x,i=e.y,l=e.z;defined_default(t)&&(a[t]=n,a[t+1]=i,a[t+2]=l),defined_default(r)&&(a[r]=l,a[r-1]=i,a[r-2]=n)};var scratchForwardProjection=new Cartesian3_default,scratchBackwardProjection=new Cartesian3_default;CorridorGeometryLibrary.computePositions=function(a){const e=a.granularity,t=a.positions,r=a.ellipsoid,n=a.width/2,i=a.cornerType,l=a.saveAttributes;let s=cartesian1,d=cartesian2,u=cartesian3,o=cartesian4,f=cartesian5,c=cartesian6,_=cartesian7,C=cartesian8,y=cartesian9,m=cartesian10,p=[];const h=l?[]:void 0,g=l?[]:void 0;let A,w=t[0],P=t[1];d=Cartesian3_default.normalize(Cartesian3_default.subtract(P,w,d),d),s=r.geodeticSurfaceNormal(w,s),o=Cartesian3_default.normalize(Cartesian3_default.cross(s,d,o),o),l&&(h.push(o.x,o.y,o.z),g.push(s.x,s.y,s.z)),_=Cartesian3_default.clone(w,_),w=P,u=Cartesian3_default.negate(d,u);const x=[];let z;const S=t.length;for(z=1;z<S-1;z++){s=r.geodeticSurfaceNormal(w,s),P=t[z+1],d=Cartesian3_default.normalize(Cartesian3_default.subtract(P,w,d),d),f=Cartesian3_default.normalize(Cartesian3_default.add(d,u,f),f);const a=Cartesian3_default.multiplyByScalar(s,Cartesian3_default.dot(d,s),scratchForwardProjection);Cartesian3_default.subtract(d,a,a),Cartesian3_default.normalize(a,a);const S=Cartesian3_default.multiplyByScalar(s,Cartesian3_default.dot(u,s),scratchBackwardProjection);if(Cartesian3_default.subtract(u,S,S),Cartesian3_default.normalize(S,S),!Math_default.equalsEpsilon(Math.abs(Cartesian3_default.dot(a,S)),1,Math_default.EPSILON7)){f=Cartesian3_default.cross(f,s,f),f=Cartesian3_default.cross(s,f,f),f=Cartesian3_default.normalize(f,f);const a=n/Math.max(.25,Cartesian3_default.magnitude(Cartesian3_default.cross(f,u,scratch1))),t=PolylineVolumeGeometryLibrary_default.angleIsGreaterThanPi(d,u,w,r);f=Cartesian3_default.multiplyByScalar(f,a,f),t?(C=Cartesian3_default.add(w,f,C),m=Cartesian3_default.add(C,Cartesian3_default.multiplyByScalar(o,n,m),m),y=Cartesian3_default.add(C,Cartesian3_default.multiplyByScalar(o,2*n,y),y),scaleArray2[0]=Cartesian3_default.clone(_,scaleArray2[0]),scaleArray2[1]=Cartesian3_default.clone(m,scaleArray2[1]),A=PolylinePipeline_default.generateArc({positions:scaleArray2,granularity:e,ellipsoid:r}),p=addShiftedPositions(A,o,n,p),l&&(h.push(o.x,o.y,o.z),g.push(s.x,s.y,s.z)),c=Cartesian3_default.clone(y,c),o=Cartesian3_default.normalize(Cartesian3_default.cross(s,d,o),o),y=Cartesian3_default.add(C,Cartesian3_default.multiplyByScalar(o,2*n,y),y),_=Cartesian3_default.add(C,Cartesian3_default.multiplyByScalar(o,n,_),_),i===CornerType_default.ROUNDED||i===CornerType_default.BEVELED?x.push({leftPositions:computeRoundCorner(C,c,y,i,t)}):x.push({leftPositions:computeMiteredCorner(w,Cartesian3_default.negate(f,f),y,t)})):(y=Cartesian3_default.add(w,f,y),m=Cartesian3_default.add(y,Cartesian3_default.negate(Cartesian3_default.multiplyByScalar(o,n,m),m),m),C=Cartesian3_default.add(y,Cartesian3_default.negate(Cartesian3_default.multiplyByScalar(o,2*n,C),C),C),scaleArray2[0]=Cartesian3_default.clone(_,scaleArray2[0]),scaleArray2[1]=Cartesian3_default.clone(m,scaleArray2[1]),A=PolylinePipeline_default.generateArc({positions:scaleArray2,granularity:e,ellipsoid:r}),p=addShiftedPositions(A,o,n,p),l&&(h.push(o.x,o.y,o.z),g.push(s.x,s.y,s.z)),c=Cartesian3_default.clone(C,c),o=Cartesian3_default.normalize(Cartesian3_default.cross(s,d,o),o),C=Cartesian3_default.add(y,Cartesian3_default.negate(Cartesian3_default.multiplyByScalar(o,2*n,C),C),C),_=Cartesian3_default.add(y,Cartesian3_default.negate(Cartesian3_default.multiplyByScalar(o,n,_),_),_),i===CornerType_default.ROUNDED||i===CornerType_default.BEVELED?x.push({rightPositions:computeRoundCorner(y,c,C,i,t)}):x.push({rightPositions:computeMiteredCorner(w,f,C,t)})),u=Cartesian3_default.negate(d,u)}w=P}let B;return s=r.geodeticSurfaceNormal(w,s),scaleArray2[0]=Cartesian3_default.clone(_,scaleArray2[0]),scaleArray2[1]=Cartesian3_default.clone(w,scaleArray2[1]),A=PolylinePipeline_default.generateArc({positions:scaleArray2,granularity:e,ellipsoid:r}),p=addShiftedPositions(A,o,n,p),l&&(h.push(o.x,o.y,o.z),g.push(s.x,s.y,s.z)),i===CornerType_default.ROUNDED&&(B=addEndCaps(p)),{positions:p,corners:x,lefts:h,normals:g,endPositions:B}};var CorridorGeometryLibrary_default=CorridorGeometryLibrary;export{CorridorGeometryLibrary_default};
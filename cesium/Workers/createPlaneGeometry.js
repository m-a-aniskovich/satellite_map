/*! For license information please see createPlaneGeometry.js.LICENSE.txt */
import{VertexFormat_default}from"./chunk-ZTYE74E2.js";import{GeometryAttributes_default}from"./chunk-SJDXMQSP.js";import{GeometryAttribute_default,Geometry_default,PrimitiveType_default}from"./chunk-OTBRPBCC.js";import{BoundingSphere_default}from"./chunk-D4YHO4NZ.js";import"./chunk-HSW63JN4.js";import"./chunk-RSWBNJPT.js";import{ComponentDatatype_default}from"./chunk-Z6LPXA7S.js";import{Cartesian3_default}from"./chunk-PHQVHDVI.js";import"./chunk-IZED7ODV.js";import"./chunk-VNRUVNIK.js";import"./chunk-66CXKODF.js";import{defaultValue_default}from"./chunk-C53JYYKX.js";import{Check_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";function PlaneGeometry(e){e=defaultValue_default(e,defaultValue_default.EMPTY_OBJECT);const t=defaultValue_default(e.vertexFormat,VertexFormat_default.DEFAULT);this._vertexFormat=t,this._workerName="createPlaneGeometry"}PlaneGeometry.packedLength=VertexFormat_default.packedLength,PlaneGeometry.pack=function(e,t,a){return Check_default.typeOf.object("value",e),Check_default.defined("array",t),a=defaultValue_default(a,0),VertexFormat_default.pack(e._vertexFormat,t,a),t};var scratchVertexFormat=new VertexFormat_default,scratchOptions={vertexFormat:scratchVertexFormat};PlaneGeometry.unpack=function(e,t,a){Check_default.defined("array",e),t=defaultValue_default(t,0);const r=VertexFormat_default.unpack(e,t,scratchVertexFormat);return defined_default(a)?(a._vertexFormat=VertexFormat_default.clone(r,a._vertexFormat),a):new PlaneGeometry(scratchOptions)};var min=new Cartesian3_default(-.5,-.5,0),max=new Cartesian3_default(.5,.5,0);PlaneGeometry.createGeometry=function(e){const t=e._vertexFormat,a=new GeometryAttributes_default;let r,n;if(t.position){if(n=new Float64Array(12),n[0]=min.x,n[1]=min.y,n[2]=0,n[3]=max.x,n[4]=min.y,n[5]=0,n[6]=max.x,n[7]=max.y,n[8]=0,n[9]=min.x,n[10]=max.y,n[11]=0,a.position=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.DOUBLE,componentsPerAttribute:3,values:n}),t.normal){const e=new Float32Array(12);e[0]=0,e[1]=0,e[2]=1,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=1,e[9]=0,e[10]=0,e[11]=1,a.normal=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.FLOAT,componentsPerAttribute:3,values:e})}if(t.st){const e=new Float32Array(8);e[0]=0,e[1]=0,e[2]=1,e[3]=0,e[4]=1,e[5]=1,e[6]=0,e[7]=1,a.st=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.FLOAT,componentsPerAttribute:2,values:e})}if(t.tangent){const e=new Float32Array(12);e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e[6]=1,e[7]=0,e[8]=0,e[9]=1,e[10]=0,e[11]=0,a.tangent=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.FLOAT,componentsPerAttribute:3,values:e})}if(t.bitangent){const e=new Float32Array(12);e[0]=0,e[1]=1,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=1,e[8]=0,e[9]=0,e[10]=1,e[11]=0,a.bitangent=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.FLOAT,componentsPerAttribute:3,values:e})}r=new Uint16Array(6),r[0]=0,r[1]=1,r[2]=2,r[3]=0,r[4]=2,r[5]=3}return new Geometry_default({attributes:a,indices:r,primitiveType:PrimitiveType_default.TRIANGLES,boundingSphere:new BoundingSphere_default(Cartesian3_default.ZERO,Math.sqrt(2))})};var PlaneGeometry_default=PlaneGeometry;function createPlaneGeometry(e,t){return defined_default(t)&&(e=PlaneGeometry_default.unpack(e,t)),PlaneGeometry_default.createGeometry(e)}var createPlaneGeometry_default=createPlaneGeometry;export{createPlaneGeometry_default as default};
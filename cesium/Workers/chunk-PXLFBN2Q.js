/*! For license information please see chunk-PXLFBN2Q.js.LICENSE.txt */
import{GeographicProjection_default}from"./chunk-D4YHO4NZ.js";import{Matrix2_default,Rectangle_default}from"./chunk-RSWBNJPT.js";import{Cartesian3_default,Cartographic_default}from"./chunk-PHQVHDVI.js";import{Math_default}from"./chunk-IZED7ODV.js";import{DeveloperError_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";var cos=Math.cos,sin=Math.sin,sqrt=Math.sqrt,RectangleGeometryLibrary={computePosition:function(t,a,n,e,r,o,s){const i=a.radiiSquared,c=t.nwCorner,l=t.boundingRectangle;let u=c.latitude-t.granYCos*e+r*t.granXSin;const h=cos(u),d=sin(u),g=i.z*d;let f=c.longitude+e*t.granYSin+r*t.granXCos;const C=h*cos(f),_=h*sin(f),w=i.x*C,p=i.y*_,S=sqrt(w*C+p*_+g*d);if(o.x=w/S,o.y=p/S,o.z=g/S,n){const a=t.stNwCorner;defined_default(a)?(u=a.latitude-t.stGranYCos*e+r*t.stGranXSin,f=a.longitude+e*t.stGranYSin+r*t.stGranXCos,s.x=(f-t.stWest)*t.lonScalar,s.y=(u-t.stSouth)*t.latScalar):(s.x=(f-l.west)*t.lonScalar,s.y=(u-l.south)*t.latScalar)}}},rotationMatrixScratch=new Matrix2_default,nwCartesian=new Cartesian3_default,centerScratch=new Cartographic_default,centerCartesian=new Cartesian3_default,proj=new GeographicProjection_default;function getRotationOptions(t,a,n,e,r,o,s){const i=Math.cos(a),c=e*i,l=n*i,u=Math.sin(a),h=e*u,d=n*u;nwCartesian=proj.project(t,nwCartesian),nwCartesian=Cartesian3_default.subtract(nwCartesian,centerCartesian,nwCartesian);const g=Matrix2_default.fromRotation(a,rotationMatrixScratch);nwCartesian=Matrix2_default.multiplyByVector(g,nwCartesian,nwCartesian),nwCartesian=Cartesian3_default.add(nwCartesian,centerCartesian,nwCartesian),o-=1,s-=1;const f=(t=proj.unproject(nwCartesian,t)).latitude,C=f+o*d,_=f-c*s,w=f-c*s+o*d,p=Math.max(f,C,_,w),S=Math.min(f,C,_,w),M=t.longitude,m=M+o*l,R=M+s*h,O=M+s*h+o*l;return{north:p,south:S,east:Math.max(M,m,R,O),west:Math.min(M,m,R,O),granYCos:c,granYSin:h,granXCos:l,granXSin:d,nwCorner:t}}RectangleGeometryLibrary.computeOptions=function(t,a,n,e,r,o,s){let i,c=t.east,l=t.west,u=t.north,h=t.south,d=!1,g=!1;u===Math_default.PI_OVER_TWO&&(d=!0),h===-Math_default.PI_OVER_TWO&&(g=!0);const f=u-h;i=l>c?Math_default.TWO_PI-l+c:c-l;const C=Math.ceil(i/a)+1,_=Math.ceil(f/a)+1,w=i/(C-1),p=f/(_-1),S=Rectangle_default.northwest(t,o),M=Rectangle_default.center(t,centerScratch);0===n&&0===e||(M.longitude<S.longitude&&(M.longitude+=Math_default.TWO_PI),centerCartesian=proj.project(M,centerCartesian));const m=p,R=w,O=Rectangle_default.clone(t,r),Y={granYCos:m,granYSin:0,granXCos:R,granXSin:0,nwCorner:S,boundingRectangle:O,width:C,height:_,northCap:d,southCap:g};if(0!==n){const t=getRotationOptions(S,n,w,p,M,C,_);if(u=t.north,h=t.south,c=t.east,l=t.west,u<-Math_default.PI_OVER_TWO||u>Math_default.PI_OVER_TWO||h<-Math_default.PI_OVER_TWO||h>Math_default.PI_OVER_TWO)throw new DeveloperError_default("Rotated rectangle is invalid.  It crosses over either the north or south pole.");Y.granYCos=t.granYCos,Y.granYSin=t.granYSin,Y.granXCos=t.granXCos,Y.granXSin=t.granXSin,O.north=u,O.south=h,O.east=c,O.west=l}if(0!==e){n-=e;const t=Rectangle_default.northwest(O,s),a=getRotationOptions(t,n,w,p,M,C,_);Y.stGranYCos=a.granYCos,Y.stGranXCos=a.granXCos,Y.stGranYSin=a.granYSin,Y.stGranXSin=a.granXSin,Y.stNwCorner=t,Y.stWest=a.west,Y.stSouth=a.south}return Y};var RectangleGeometryLibrary_default=RectangleGeometryLibrary;export{RectangleGeometryLibrary_default};
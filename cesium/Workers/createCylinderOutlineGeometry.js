/*! For license information please see createCylinderOutlineGeometry.js.LICENSE.txt */
import{CylinderGeometryLibrary_default}from"./chunk-PB7BIXHI.js";import{GeometryOffsetAttribute_default}from"./chunk-W7F5VTH6.js";import{IndexDatatype_default}from"./chunk-J3U6Z5YQ.js";import{GeometryAttributes_default}from"./chunk-SJDXMQSP.js";import{GeometryAttribute_default,Geometry_default,PrimitiveType_default}from"./chunk-OTBRPBCC.js";import{BoundingSphere_default}from"./chunk-D4YHO4NZ.js";import"./chunk-HSW63JN4.js";import{Cartesian2_default}from"./chunk-RSWBNJPT.js";import{ComponentDatatype_default}from"./chunk-Z6LPXA7S.js";import{Cartesian3_default}from"./chunk-PHQVHDVI.js";import"./chunk-IZED7ODV.js";import"./chunk-VNRUVNIK.js";import"./chunk-66CXKODF.js";import{defaultValue_default}from"./chunk-C53JYYKX.js";import{Check_default,DeveloperError_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";var radiusScratch=new Cartesian2_default;function CylinderOutlineGeometry(t){const e=(t=defaultValue_default(t,defaultValue_default.EMPTY_OBJECT)).length,r=t.topRadius,i=t.bottomRadius,u=defaultValue_default(t.slices,128),a=Math.max(defaultValue_default(t.numberOfVerticalLines,16),0);if(Check_default.typeOf.number("options.positions",e),Check_default.typeOf.number("options.topRadius",r),Check_default.typeOf.number("options.bottomRadius",i),Check_default.typeOf.number.greaterThanOrEquals("options.slices",u,3),defined_default(t.offsetAttribute)&&t.offsetAttribute===GeometryOffsetAttribute_default.TOP)throw new DeveloperError_default("GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.");this._length=e,this._topRadius=r,this._bottomRadius=i,this._slices=u,this._numberOfVerticalLines=a,this._offsetAttribute=t.offsetAttribute,this._workerName="createCylinderOutlineGeometry"}CylinderOutlineGeometry.packedLength=6,CylinderOutlineGeometry.pack=function(t,e,r){return Check_default.typeOf.object("value",t),Check_default.defined("array",e),r=defaultValue_default(r,0),e[r++]=t._length,e[r++]=t._topRadius,e[r++]=t._bottomRadius,e[r++]=t._slices,e[r++]=t._numberOfVerticalLines,e[r]=defaultValue_default(t._offsetAttribute,-1),e};var scratchOptions={length:void 0,topRadius:void 0,bottomRadius:void 0,slices:void 0,numberOfVerticalLines:void 0,offsetAttribute:void 0};CylinderOutlineGeometry.unpack=function(t,e,r){Check_default.defined("array",t),e=defaultValue_default(e,0);const i=t[e++],u=t[e++],a=t[e++],o=t[e++],n=t[e++],f=t[e];return defined_default(r)?(r._length=i,r._topRadius=u,r._bottomRadius=a,r._slices=o,r._numberOfVerticalLines=n,r._offsetAttribute=-1===f?void 0:f,r):(scratchOptions.length=i,scratchOptions.topRadius=u,scratchOptions.bottomRadius=a,scratchOptions.slices=o,scratchOptions.numberOfVerticalLines=n,scratchOptions.offsetAttribute=-1===f?void 0:f,new CylinderOutlineGeometry(scratchOptions))},CylinderOutlineGeometry.createGeometry=function(t){let e=t._length;const r=t._topRadius,i=t._bottomRadius,u=t._slices,a=t._numberOfVerticalLines;if(e<=0||r<0||i<0||0===r&&0===i)return;const o=2*u,n=CylinderGeometryLibrary_default.computePositions(e,r,i,u,!1);let f,l=2*u;if(a>0){const t=Math.min(a,u);f=Math.round(u/t),l+=t}const s=IndexDatatype_default.createTypedArray(o,2*l);let d,c=0;for(d=0;d<u-1;d++)s[c++]=d,s[c++]=d+1,s[c++]=d+u,s[c++]=d+1+u;if(s[c++]=u-1,s[c++]=0,s[c++]=u+u-1,s[c++]=u,a>0)for(d=0;d<u;d+=f)s[c++]=d,s[c++]=d+u;const m=new GeometryAttributes_default;m.position=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.DOUBLE,componentsPerAttribute:3,values:n}),radiusScratch.x=.5*e,radiusScratch.y=Math.max(i,r);const _=new BoundingSphere_default(Cartesian3_default.ZERO,Cartesian2_default.magnitude(radiusScratch));if(defined_default(t._offsetAttribute)){e=n.length;const r=t._offsetAttribute===GeometryOffsetAttribute_default.NONE?0:1,i=new Uint8Array(e/3).fill(r);m.applyOffset=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.UNSIGNED_BYTE,componentsPerAttribute:1,values:i})}return new Geometry_default({attributes:m,indices:s,primitiveType:PrimitiveType_default.LINES,boundingSphere:_,offsetAttribute:t._offsetAttribute})};var CylinderOutlineGeometry_default=CylinderOutlineGeometry;function createCylinderOutlineGeometry(t,e){return defined_default(e)&&(t=CylinderOutlineGeometry_default.unpack(t,e)),CylinderOutlineGeometry_default.createGeometry(t)}var createCylinderOutlineGeometry_default=createCylinderOutlineGeometry;export{createCylinderOutlineGeometry_default as default};
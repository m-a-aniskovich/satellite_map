/*! For license information please see chunk-R22RQAAM.js.LICENSE.txt */
import{WebMercatorProjection_default}from"./chunk-K6Q5IRBK.js";import{GeometryPipeline_default}from"./chunk-36ESDRIZ.js";import{IndexDatatype_default}from"./chunk-J3U6Z5YQ.js";import{GeometryAttributes_default}from"./chunk-SJDXMQSP.js";import{GeometryAttribute_default,Geometry_default}from"./chunk-OTBRPBCC.js";import{BoundingSphere_default,GeographicProjection_default}from"./chunk-D4YHO4NZ.js";import{Matrix4_default}from"./chunk-RSWBNJPT.js";import{ComponentDatatype_default}from"./chunk-Z6LPXA7S.js";import{Ellipsoid_default}from"./chunk-PHQVHDVI.js";import{defaultValue_default}from"./chunk-C53JYYKX.js";import{Check_default,DeveloperError_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";function OffsetGeometryInstanceAttribute(e,t,n){e=defaultValue_default(e,0),t=defaultValue_default(t,0),n=defaultValue_default(n,0),this.value=new Float32Array([e,t,n])}Object.defineProperties(OffsetGeometryInstanceAttribute.prototype,{componentDatatype:{get:function(){return ComponentDatatype_default.FLOAT}},componentsPerAttribute:{get:function(){return 3}},normalize:{get:function(){return!1}}}),OffsetGeometryInstanceAttribute.fromCartesian3=function(e){return Check_default.defined("offset",e),new OffsetGeometryInstanceAttribute(e.x,e.y,e.z)},OffsetGeometryInstanceAttribute.toValue=function(e,t){return Check_default.defined("offset",e),defined_default(t)||(t=new Float32Array([e.x,e.y,e.z])),t[0]=e.x,t[1]=e.y,t[2]=e.z,t};var OffsetGeometryInstanceAttribute_default=OffsetGeometryInstanceAttribute;function transformToWorldCoordinates(e,t,n){let r=!n;const o=e.length;let i;if(!r&&o>1){const t=e[0].modelMatrix;for(i=1;i<o;++i)if(!Matrix4_default.equals(t,e[i].modelMatrix)){r=!0;break}}if(r)for(i=0;i<o;++i)defined_default(e[i].geometry)&&GeometryPipeline_default.transformToWorldCoordinates(e[i]);else Matrix4_default.multiplyTransformation(t,e[0].modelMatrix,t)}function addGeometryBatchId(e,t){const n=e.attributes,r=n.position,o=r.values.length/r.componentsPerAttribute;n.batchId=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.FLOAT,componentsPerAttribute:1,values:new Float32Array(o)});const i=n.batchId.values;for(let e=0;e<o;++e)i[e]=t}function addBatchIds(e){const t=e.length;for(let n=0;n<t;++n){const t=e[n];defined_default(t.geometry)?addGeometryBatchId(t.geometry,n):defined_default(t.westHemisphereGeometry)&&defined_default(t.eastHemisphereGeometry)&&(addGeometryBatchId(t.westHemisphereGeometry,n),addGeometryBatchId(t.eastHemisphereGeometry,n))}}function geometryPipeline(e){const t=e.instances,n=e.projection,r=e.elementIndexUintSupported,o=e.scene3DOnly,i=e.vertexCacheOptimize,a=e.compressVertices,s=e.modelMatrix;let d,f,u,l=t.length;for(d=0;d<l;++d)if(defined_default(t[d].geometry)){u=t[d].geometry.primitiveType;break}for(d=1;d<l;++d)if(defined_default(t[d].geometry)&&t[d].geometry.primitiveType!==u)throw new DeveloperError_default("All instance geometries must have the same primitiveType.");if(transformToWorldCoordinates(t,s,o),!o)for(d=0;d<l;++d)defined_default(t[d].geometry)&&GeometryPipeline_default.splitLongitude(t[d]);if(addBatchIds(t),i)for(d=0;d<l;++d){const e=t[d];defined_default(e.geometry)?(GeometryPipeline_default.reorderForPostVertexCache(e.geometry),GeometryPipeline_default.reorderForPreVertexCache(e.geometry)):defined_default(e.westHemisphereGeometry)&&defined_default(e.eastHemisphereGeometry)&&(GeometryPipeline_default.reorderForPostVertexCache(e.westHemisphereGeometry),GeometryPipeline_default.reorderForPreVertexCache(e.westHemisphereGeometry),GeometryPipeline_default.reorderForPostVertexCache(e.eastHemisphereGeometry),GeometryPipeline_default.reorderForPreVertexCache(e.eastHemisphereGeometry))}let c=GeometryPipeline_default.combineInstances(t);for(l=c.length,d=0;d<l;++d){f=c[d];const e=f.attributes;if(o)for(const t in e)e.hasOwnProperty(t)&&e[t].componentDatatype===ComponentDatatype_default.DOUBLE&&GeometryPipeline_default.encodeAttribute(f,t,`${t}3DHigh`,`${t}3DLow`);else for(const t in e)if(e.hasOwnProperty(t)&&e[t].componentDatatype===ComponentDatatype_default.DOUBLE){const e=`${t}3D`,r=`${t}2D`;GeometryPipeline_default.projectTo2D(f,t,e,r,n),defined_default(f.boundingSphere)&&"position"===t&&(f.boundingSphereCV=BoundingSphere_default.fromVertices(f.attributes.position2D.values)),GeometryPipeline_default.encodeAttribute(f,e,`${e}High`,`${e}Low`),GeometryPipeline_default.encodeAttribute(f,r,`${r}High`,`${r}Low`)}a&&GeometryPipeline_default.compressVertices(f)}if(!r){let e=[];for(l=c.length,d=0;d<l;++d)f=c[d],e=e.concat(GeometryPipeline_default.fitToUnsignedShortIndices(f));c=e}return c}function createPickOffsets(e,t,n,r){let o,i,a;const s=r.length-1;if(s>=0){const e=r[s];o=e.offset+e.count,a=e.index,i=n[a].indices.length}else o=0,a=0,i=n[a].indices.length;const d=e.length;for(let s=0;s<d;++s){const d=e[s][t];if(!defined_default(d))continue;const f=d.indices.length;o+f>i&&(o=0,i=n[++a].indices.length),r.push({index:a,offset:o,count:f}),o+=f}}function createInstancePickOffsets(e,t){const n=[];return createPickOffsets(e,"geometry",t,n),createPickOffsets(e,"westHemisphereGeometry",t,n),createPickOffsets(e,"eastHemisphereGeometry",t,n),n}var PrimitivePipeline={};function transferGeometry(e,t){const n=e.attributes;for(const e in n)if(n.hasOwnProperty(e)){const r=n[e];defined_default(r)&&defined_default(r.values)&&t.push(r.values.buffer)}defined_default(e.indices)&&t.push(e.indices.buffer)}function transferGeometries(e,t){const n=e.length;for(let r=0;r<n;++r)transferGeometry(e[r],t)}function countCreateGeometryResults(e){let t=1;const n=e.length;for(let r=0;r<n;r++){const n=e[r];if(++t,!defined_default(n))continue;const o=n.attributes;t+=7+2*BoundingSphere_default.packedLength+(defined_default(n.indices)?n.indices.length:0);for(const e in o)o.hasOwnProperty(e)&&defined_default(o[e])&&(t+=5+o[e].values.length)}return t}function packInstancesForCombine(e,t){const n=e.length,r=new Float64Array(1+19*n);let o=0;r[o++]=n;for(let t=0;t<n;t++){const n=e[t];if(Matrix4_default.pack(n.modelMatrix,r,o),o+=Matrix4_default.packedLength,defined_default(n.attributes)&&defined_default(n.attributes.offset)){const e=n.attributes.offset.value;r[o]=e[0],r[o+1]=e[1],r[o+2]=e[2]}o+=3}return t.push(r.buffer),r}function unpackInstancesForCombine(e){const t=e,n=new Array(t[0]);let r=0,o=1;for(;o<t.length;){const e=Matrix4_default.unpack(t,o);let i;o+=Matrix4_default.packedLength,defined_default(t[o])&&(i={offset:new OffsetGeometryInstanceAttribute_default(t[o],t[o+1],t[o+2])}),o+=3,n[r++]={modelMatrix:e,attributes:i}}return n}function packBoundingSpheres(e){const t=e.length,n=1+(BoundingSphere_default.packedLength+1)*t,r=new Float32Array(n);let o=0;r[o++]=t;for(let n=0;n<t;++n){const t=e[n];defined_default(t)?(r[o++]=1,BoundingSphere_default.pack(e[n],r,o)):r[o++]=0,o+=BoundingSphere_default.packedLength}return r}function unpackBoundingSpheres(e){const t=new Array(e[0]);let n=0,r=1;for(;r<e.length;)1===e[r++]&&(t[n]=BoundingSphere_default.unpack(e,r)),++n,r+=BoundingSphere_default.packedLength;return t}PrimitivePipeline.combineGeometry=function(e){let t,n;const r=e.instances,o=r.length;let i,a,s=!1;o>0&&(t=geometryPipeline(e),t.length>0&&(n=GeometryPipeline_default.createAttributeLocations(t[0]),e.createPickOffsets&&(i=createInstancePickOffsets(r,t))),defined_default(r[0].attributes)&&defined_default(r[0].attributes.offset)&&(a=new Array(o),s=!0));const d=new Array(o),f=new Array(o);for(let e=0;e<o;++e){const t=r[e],n=t.geometry;defined_default(n)&&(d[e]=n.boundingSphere,f[e]=n.boundingSphereCV,s&&(a[e]=t.geometry.offsetAttribute));const o=t.eastHemisphereGeometry,i=t.westHemisphereGeometry;defined_default(o)&&defined_default(i)&&(defined_default(o.boundingSphere)&&defined_default(i.boundingSphere)&&(d[e]=BoundingSphere_default.union(o.boundingSphere,i.boundingSphere)),defined_default(o.boundingSphereCV)&&defined_default(i.boundingSphereCV)&&(f[e]=BoundingSphere_default.union(o.boundingSphereCV,i.boundingSphereCV)))}return{geometries:t,modelMatrix:e.modelMatrix,attributeLocations:n,pickOffsets:i,offsetInstanceExtend:a,boundingSpheres:d,boundingSpheresCV:f}},PrimitivePipeline.packCreateGeometryResults=function(e,t){const n=new Float64Array(countCreateGeometryResults(e)),r=[],o={},i=e.length;let a=0;n[a++]=i;for(let t=0;t<i;t++){const i=e[t],s=defined_default(i);if(n[a++]=s?1:0,!s)continue;n[a++]=i.primitiveType,n[a++]=i.geometryType,n[a++]=defaultValue_default(i.offsetAttribute,-1);const d=defined_default(i.boundingSphere)?1:0;n[a++]=d,d&&BoundingSphere_default.pack(i.boundingSphere,n,a),a+=BoundingSphere_default.packedLength;const f=defined_default(i.boundingSphereCV)?1:0;n[a++]=f,f&&BoundingSphere_default.pack(i.boundingSphereCV,n,a),a+=BoundingSphere_default.packedLength;const u=i.attributes,l=[];for(const e in u)u.hasOwnProperty(e)&&defined_default(u[e])&&(l.push(e),defined_default(o[e])||(o[e]=r.length,r.push(e)));n[a++]=l.length;for(let e=0;e<l.length;e++){const t=l[e],r=u[t];n[a++]=o[t],n[a++]=r.componentDatatype,n[a++]=r.componentsPerAttribute,n[a++]=r.normalize?1:0,n[a++]=r.values.length,n.set(r.values,a),a+=r.values.length}const c=defined_default(i.indices)?i.indices.length:0;n[a++]=c,c>0&&(n.set(i.indices,a),a+=c)}return t.push(n.buffer),{stringTable:r,packedData:n}},PrimitivePipeline.unpackCreateGeometryResults=function(e){const t=e.stringTable,n=e.packedData;let r;const o=new Array(n[0]);let i=0,a=1;for(;a<n.length;){if(1!==n[a++]){o[i++]=void 0;continue}const e=n[a++],s=n[a++];let d,f,u,l,c,p=n[a++];-1===p&&(p=void 0),1===n[a++]&&(d=BoundingSphere_default.unpack(n,a)),a+=BoundingSphere_default.packedLength,1===n[a++]&&(f=BoundingSphere_default.unpack(n,a)),a+=BoundingSphere_default.packedLength;const m=new GeometryAttributes_default,h=n[a++];for(r=0;r<h;r++){const e=t[n[a++]],r=n[a++];c=n[a++];const o=0!==n[a++];u=n[a++],l=ComponentDatatype_default.createTypedArray(r,u);for(let e=0;e<u;e++)l[e]=n[a++];m[e]=new GeometryAttribute_default({componentDatatype:r,componentsPerAttribute:c,normalize:o,values:l})}let g;if(u=n[a++],u>0){const e=l.length/c;for(g=IndexDatatype_default.createTypedArray(e,u),r=0;r<u;r++)g[r]=n[a++]}o[i++]=new Geometry_default({primitiveType:e,geometryType:s,boundingSphere:d,boundingSphereCV:f,indices:g,attributes:m,offsetAttribute:p})}return o},PrimitivePipeline.packCombineGeometryParameters=function(e,t){const n=e.createGeometryResults,r=n.length;for(let e=0;e<r;e++)t.push(n[e].packedData.buffer);return{createGeometryResults:e.createGeometryResults,packedInstances:packInstancesForCombine(e.instances,t),ellipsoid:e.ellipsoid,isGeographic:e.projection instanceof GeographicProjection_default,elementIndexUintSupported:e.elementIndexUintSupported,scene3DOnly:e.scene3DOnly,vertexCacheOptimize:e.vertexCacheOptimize,compressVertices:e.compressVertices,modelMatrix:e.modelMatrix,createPickOffsets:e.createPickOffsets}},PrimitivePipeline.unpackCombineGeometryParameters=function(e){const t=unpackInstancesForCombine(e.packedInstances),n=e.createGeometryResults,r=n.length;let o=0;for(let e=0;e<r;e++){const r=PrimitivePipeline.unpackCreateGeometryResults(n[e]),i=r.length;for(let e=0;e<i;e++){const n=r[e];t[o].geometry=n,++o}}const i=Ellipsoid_default.clone(e.ellipsoid);return{instances:t,ellipsoid:i,projection:e.isGeographic?new GeographicProjection_default(i):new WebMercatorProjection_default(i),elementIndexUintSupported:e.elementIndexUintSupported,scene3DOnly:e.scene3DOnly,vertexCacheOptimize:e.vertexCacheOptimize,compressVertices:e.compressVertices,modelMatrix:Matrix4_default.clone(e.modelMatrix),createPickOffsets:e.createPickOffsets}},PrimitivePipeline.packCombineGeometryResults=function(e,t){defined_default(e.geometries)&&transferGeometries(e.geometries,t);const n=packBoundingSpheres(e.boundingSpheres),r=packBoundingSpheres(e.boundingSpheresCV);return t.push(n.buffer,r.buffer),{geometries:e.geometries,attributeLocations:e.attributeLocations,modelMatrix:e.modelMatrix,pickOffsets:e.pickOffsets,offsetInstanceExtend:e.offsetInstanceExtend,boundingSpheres:n,boundingSpheresCV:r}},PrimitivePipeline.unpackCombineGeometryResults=function(e){return{geometries:e.geometries,attributeLocations:e.attributeLocations,modelMatrix:e.modelMatrix,pickOffsets:e.pickOffsets,offsetInstanceExtend:e.offsetInstanceExtend,boundingSpheres:unpackBoundingSpheres(e.boundingSpheres),boundingSpheresCV:unpackBoundingSpheres(e.boundingSpheresCV)}};var PrimitivePipeline_default=PrimitivePipeline;export{PrimitivePipeline_default};
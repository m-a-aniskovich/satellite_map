/*! For license information please see chunk-FGUP2QEP.js.LICENSE.txt */
import{Intersect_default}from"./chunk-D4YHO4NZ.js";import{Cartesian3_default}from"./chunk-PHQVHDVI.js";import{defaultValue_default}from"./chunk-C53JYYKX.js";import{Check_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";function AxisAlignedBoundingBox(e,n,t){this.minimum=Cartesian3_default.clone(defaultValue_default(e,Cartesian3_default.ZERO)),this.maximum=Cartesian3_default.clone(defaultValue_default(n,Cartesian3_default.ZERO)),t=defined_default(t)?Cartesian3_default.clone(t):Cartesian3_default.midpoint(this.minimum,this.maximum,new Cartesian3_default),this.center=t}AxisAlignedBoundingBox.fromCorners=function(e,n,t){return Check_default.defined("minimum",e),Check_default.defined("maximum",n),defined_default(t)||(t=new AxisAlignedBoundingBox),t.minimum=Cartesian3_default.clone(e,t.minimum),t.maximum=Cartesian3_default.clone(n,t.maximum),t.center=Cartesian3_default.midpoint(e,n,t.center),t},AxisAlignedBoundingBox.fromPoints=function(e,n){if(defined_default(n)||(n=new AxisAlignedBoundingBox),!defined_default(e)||0===e.length)return n.minimum=Cartesian3_default.clone(Cartesian3_default.ZERO,n.minimum),n.maximum=Cartesian3_default.clone(Cartesian3_default.ZERO,n.maximum),n.center=Cartesian3_default.clone(Cartesian3_default.ZERO,n.center),n;let t=e[0].x,i=e[0].y,a=e[0].z,u=e[0].x,d=e[0].y,m=e[0].z;const l=e.length;for(let n=1;n<l;n++){const l=e[n],r=l.x,o=l.y,s=l.z;t=Math.min(r,t),u=Math.max(r,u),i=Math.min(o,i),d=Math.max(o,d),a=Math.min(s,a),m=Math.max(s,m)}const r=n.minimum;r.x=t,r.y=i,r.z=a;const o=n.maximum;return o.x=u,o.y=d,o.z=m,n.center=Cartesian3_default.midpoint(r,o,n.center),n},AxisAlignedBoundingBox.clone=function(e,n){if(defined_default(e))return defined_default(n)?(n.minimum=Cartesian3_default.clone(e.minimum,n.minimum),n.maximum=Cartesian3_default.clone(e.maximum,n.maximum),n.center=Cartesian3_default.clone(e.center,n.center),n):new AxisAlignedBoundingBox(e.minimum,e.maximum,e.center)},AxisAlignedBoundingBox.equals=function(e,n){return e===n||defined_default(e)&&defined_default(n)&&Cartesian3_default.equals(e.center,n.center)&&Cartesian3_default.equals(e.minimum,n.minimum)&&Cartesian3_default.equals(e.maximum,n.maximum)};var intersectScratch=new Cartesian3_default;AxisAlignedBoundingBox.intersectPlane=function(e,n){Check_default.defined("box",e),Check_default.defined("plane",n),intersectScratch=Cartesian3_default.subtract(e.maximum,e.minimum,intersectScratch);const t=Cartesian3_default.multiplyByScalar(intersectScratch,.5,intersectScratch),i=n.normal,a=t.x*Math.abs(i.x)+t.y*Math.abs(i.y)+t.z*Math.abs(i.z),u=Cartesian3_default.dot(e.center,i)+n.distance;return u-a>0?Intersect_default.INSIDE:u+a<0?Intersect_default.OUTSIDE:Intersect_default.INTERSECTING},AxisAlignedBoundingBox.prototype.clone=function(e){return AxisAlignedBoundingBox.clone(this,e)},AxisAlignedBoundingBox.prototype.intersectPlane=function(e){return AxisAlignedBoundingBox.intersectPlane(this,e)},AxisAlignedBoundingBox.prototype.equals=function(e){return AxisAlignedBoundingBox.equals(this,e)};var AxisAlignedBoundingBox_default=AxisAlignedBoundingBox;export{AxisAlignedBoundingBox_default};
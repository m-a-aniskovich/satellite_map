/*! For license information please see createCircleGeometry.js.LICENSE.txt */
import{EllipseGeometry_default}from"./chunk-VLDDXYKI.js";import"./chunk-FRG2Z7DE.js";import"./chunk-GTEXWEAP.js";import"./chunk-36ESDRIZ.js";import"./chunk-I6TVJ6T7.js";import"./chunk-VOAZN4IP.js";import"./chunk-W7F5VTH6.js";import{VertexFormat_default}from"./chunk-ZTYE74E2.js";import"./chunk-HEROVJML.js";import"./chunk-4EYB62WJ.js";import"./chunk-J3U6Z5YQ.js";import"./chunk-SJDXMQSP.js";import"./chunk-OTBRPBCC.js";import"./chunk-D4YHO4NZ.js";import"./chunk-HSW63JN4.js";import"./chunk-RSWBNJPT.js";import"./chunk-Z6LPXA7S.js";import{Cartesian3_default,Ellipsoid_default}from"./chunk-PHQVHDVI.js";import"./chunk-IZED7ODV.js";import"./chunk-VNRUVNIK.js";import"./chunk-66CXKODF.js";import{defaultValue_default}from"./chunk-C53JYYKX.js";import{Check_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";function CircleGeometry(e){const t=(e=defaultValue_default(e,defaultValue_default.EMPTY_OBJECT)).radius;Check_default.typeOf.number("radius",t);const r={center:e.center,semiMajorAxis:t,semiMinorAxis:t,ellipsoid:e.ellipsoid,height:e.height,extrudedHeight:e.extrudedHeight,granularity:e.granularity,vertexFormat:e.vertexFormat,stRotation:e.stRotation,shadowVolume:e.shadowVolume};this._ellipseGeometry=new EllipseGeometry_default(r),this._workerName="createCircleGeometry"}CircleGeometry.packedLength=EllipseGeometry_default.packedLength,CircleGeometry.pack=function(e,t,r){return Check_default.typeOf.object("value",e),EllipseGeometry_default.pack(e._ellipseGeometry,t,r)};var scratchEllipseGeometry=new EllipseGeometry_default({center:new Cartesian3_default,semiMajorAxis:1,semiMinorAxis:1}),scratchOptions={center:new Cartesian3_default,radius:void 0,ellipsoid:Ellipsoid_default.clone(Ellipsoid_default.UNIT_SPHERE),height:void 0,extrudedHeight:void 0,granularity:void 0,vertexFormat:new VertexFormat_default,stRotation:void 0,semiMajorAxis:void 0,semiMinorAxis:void 0,shadowVolume:void 0};CircleGeometry.unpack=function(e,t,r){const i=EllipseGeometry_default.unpack(e,t,scratchEllipseGeometry);return scratchOptions.center=Cartesian3_default.clone(i._center,scratchOptions.center),scratchOptions.ellipsoid=Ellipsoid_default.clone(i._ellipsoid,scratchOptions.ellipsoid),scratchOptions.height=i._height,scratchOptions.extrudedHeight=i._extrudedHeight,scratchOptions.granularity=i._granularity,scratchOptions.vertexFormat=VertexFormat_default.clone(i._vertexFormat,scratchOptions.vertexFormat),scratchOptions.stRotation=i._stRotation,scratchOptions.shadowVolume=i._shadowVolume,defined_default(r)?(scratchOptions.semiMajorAxis=i._semiMajorAxis,scratchOptions.semiMinorAxis=i._semiMinorAxis,r._ellipseGeometry=new EllipseGeometry_default(scratchOptions),r):(scratchOptions.radius=i._semiMajorAxis,new CircleGeometry(scratchOptions))},CircleGeometry.createGeometry=function(e){return EllipseGeometry_default.createGeometry(e._ellipseGeometry)},CircleGeometry.createShadowVolume=function(e,t,r){const i=e._ellipseGeometry._granularity,o=e._ellipseGeometry._ellipsoid,l=t(i,o),s=r(i,o);return new CircleGeometry({center:e._ellipseGeometry._center,radius:e._ellipseGeometry._semiMajorAxis,ellipsoid:o,stRotation:e._ellipseGeometry._stRotation,granularity:i,extrudedHeight:l,height:s,vertexFormat:VertexFormat_default.POSITION_ONLY,shadowVolume:!0})},Object.defineProperties(CircleGeometry.prototype,{rectangle:{get:function(){return this._ellipseGeometry.rectangle}},textureCoordinateRotationPoints:{get:function(){return this._ellipseGeometry.textureCoordinateRotationPoints}}});var CircleGeometry_default=CircleGeometry;function createCircleGeometry(e,t){return defined_default(t)&&(e=CircleGeometry_default.unpack(e,t)),e._ellipseGeometry._center=Cartesian3_default.clone(e._ellipseGeometry._center),e._ellipseGeometry._ellipsoid=Ellipsoid_default.clone(e._ellipseGeometry._ellipsoid),CircleGeometry_default.createGeometry(e)}var createCircleGeometry_default=createCircleGeometry;export{createCircleGeometry_default as default};
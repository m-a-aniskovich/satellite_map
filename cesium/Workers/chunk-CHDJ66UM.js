/*! For license information please see chunk-CHDJ66UM.js.LICENSE.txt */
import{PolylinePipeline_default}from"./chunk-3FCUUN6M.js";import{arrayRemoveDuplicates_default}from"./chunk-DTNN3ODA.js";import{Cartesian3_default,Cartographic_default}from"./chunk-PHQVHDVI.js";import{Math_default}from"./chunk-IZED7ODV.js";import{defined_default}from"./chunk-YS4KPNLC.js";var WallGeometryLibrary={};function latLonEquals(t,e){return Math_default.equalsEpsilon(t.latitude,e.latitude,Math_default.EPSILON10)&&Math_default.equalsEpsilon(t.longitude,e.longitude,Math_default.EPSILON10)}var scratchCartographic1=new Cartographic_default,scratchCartographic2=new Cartographic_default;function removeDuplicates(t,e,a,r){const i=(e=arrayRemoveDuplicates_default(e,Cartesian3_default.equalsEpsilon)).length;if(i<2)return;const o=defined_default(r),n=defined_default(a),l=new Array(i),h=new Array(i),s=new Array(i),c=e[0];l[0]=c;const u=t.cartesianToCartographic(c,scratchCartographic1);n&&(u.height=a[0]),h[0]=u.height,s[0]=o?r[0]:0;let d=h[0]===s[0],f=1;for(let c=1;c<i;++c){const i=e[c],g=t.cartesianToCartographic(i,scratchCartographic2);n&&(g.height=a[c]),d=d&&0===g.height,latLonEquals(u,g)?u.height<g.height&&(h[f-1]=g.height):(l[f]=i,h[f]=g.height,s[f]=o?r[c]:0,d=d&&h[f]===s[f],Cartographic_default.clone(g,u),++f)}return d||f<2?void 0:(l.length=f,h.length=f,s.length=f,{positions:l,topHeights:h,bottomHeights:s})}var positionsArrayScratch=new Array(2),heightsArrayScratch=new Array(2),generateArcOptionsScratch={positions:void 0,height:void 0,granularity:void 0,ellipsoid:void 0};WallGeometryLibrary.computePositions=function(t,e,a,r,i,o){const n=removeDuplicates(t,e,a,r);if(!defined_default(n))return;e=n.positions,a=n.topHeights,r=n.bottomHeights;const l=e.length,h=l-2;let s,c;const u=Math_default.chordLength(i,t.maximumRadius),d=generateArcOptionsScratch;if(d.minDistance=u,d.ellipsoid=t,o){let t,i=0;for(t=0;t<l-1;t++)i+=PolylinePipeline_default.numberOfPoints(e[t],e[t+1],u)+1;s=new Float64Array(3*i),c=new Float64Array(3*i);const o=positionsArrayScratch,n=heightsArrayScratch;d.positions=o,d.height=n;let h=0;for(t=0;t<l-1;t++){o[0]=e[t],o[1]=e[t+1],n[0]=a[t],n[1]=a[t+1];const i=PolylinePipeline_default.generateArc(d);s.set(i,h),n[0]=r[t],n[1]=r[t+1],c.set(PolylinePipeline_default.generateArc(d),h),h+=i.length}}else d.positions=e,d.height=a,s=new Float64Array(PolylinePipeline_default.generateArc(d)),d.height=r,c=new Float64Array(PolylinePipeline_default.generateArc(d));return{bottomPositions:c,topPositions:s,numCorners:h}};var WallGeometryLibrary_default=WallGeometryLibrary;export{WallGeometryLibrary_default};
/*! For license information please see chunk-K6Q5IRBK.js.LICENSE.txt */
import{Cartesian3_default,Cartographic_default,Ellipsoid_default}from"./chunk-PHQVHDVI.js";import{Math_default}from"./chunk-IZED7ODV.js";import{defaultValue_default}from"./chunk-C53JYYKX.js";import{DeveloperError_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";function WebMercatorProjection(e){this._ellipsoid=defaultValue_default(e,Ellipsoid_default.WGS84),this._semimajorAxis=this._ellipsoid.maximumRadius,this._oneOverSemimajorAxis=1/this._semimajorAxis}Object.defineProperties(WebMercatorProjection.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}}),WebMercatorProjection.mercatorAngleToGeodeticLatitude=function(e){return Math_default.PI_OVER_TWO-2*Math.atan(Math.exp(-e))},WebMercatorProjection.geodeticLatitudeToMercatorAngle=function(e){e>WebMercatorProjection.MaximumLatitude?e=WebMercatorProjection.MaximumLatitude:e<-WebMercatorProjection.MaximumLatitude&&(e=-WebMercatorProjection.MaximumLatitude);const t=Math.sin(e);return.5*Math.log((1+t)/(1-t))},WebMercatorProjection.MaximumLatitude=WebMercatorProjection.mercatorAngleToGeodeticLatitude(Math.PI),WebMercatorProjection.prototype.project=function(e,t){const o=this._semimajorAxis,r=e.longitude*o,i=WebMercatorProjection.geodeticLatitudeToMercatorAngle(e.latitude)*o,a=e.height;return defined_default(t)?(t.x=r,t.y=i,t.z=a,t):new Cartesian3_default(r,i,a)},WebMercatorProjection.prototype.unproject=function(e,t){if(!defined_default(e))throw new DeveloperError_default("cartesian is required");const o=this._oneOverSemimajorAxis,r=e.x*o,i=WebMercatorProjection.mercatorAngleToGeodeticLatitude(e.y*o),a=e.z;return defined_default(t)?(t.longitude=r,t.latitude=i,t.height=a,t):new Cartographic_default(r,i,a)};var WebMercatorProjection_default=WebMercatorProjection;export{WebMercatorProjection_default};
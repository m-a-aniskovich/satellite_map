/*! For license information please see chunk-N7TYCDTR.js.LICENSE.txt */
import{VertexFormat_default}from"./chunk-ZTYE74E2.js";import{Plane_default}from"./chunk-4EYB62WJ.js";import{GeometryAttributes_default}from"./chunk-SJDXMQSP.js";import{GeometryAttribute_default,Geometry_default,PrimitiveType_default}from"./chunk-OTBRPBCC.js";import{BoundingSphere_default,Intersect_default,Quaternion_default}from"./chunk-D4YHO4NZ.js";import{Cartesian4_default,Matrix4_default}from"./chunk-RSWBNJPT.js";import{ComponentDatatype_default}from"./chunk-Z6LPXA7S.js";import{Cartesian3_default,Matrix3_default}from"./chunk-PHQVHDVI.js";import{Math_default}from"./chunk-IZED7ODV.js";import{defaultValue_default}from"./chunk-C53JYYKX.js";import{Check_default,DeveloperError_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";function CullingVolume(e){this.planes=defaultValue_default(e,[])}var faces=[new Cartesian3_default,new Cartesian3_default,new Cartesian3_default];Cartesian3_default.clone(Cartesian3_default.UNIT_X,faces[0]),Cartesian3_default.clone(Cartesian3_default.UNIT_Y,faces[1]),Cartesian3_default.clone(Cartesian3_default.UNIT_Z,faces[2]);var scratchPlaneCenter=new Cartesian3_default,scratchPlaneNormal=new Cartesian3_default,scratchPlane=new Plane_default(new Cartesian3_default(1,0,0),0);CullingVolume.fromBoundingSphere=function(e,t){if(!defined_default(e))throw new DeveloperError_default("boundingSphere is required.");defined_default(t)||(t=new CullingVolume);const a=faces.length,r=t.planes;r.length=2*a;const i=e.center,n=e.radius;let u=0;for(let e=0;e<a;++e){const t=faces[e];let a=r[u],f=r[u+1];defined_default(a)||(a=r[u]=new Cartesian4_default),defined_default(f)||(f=r[u+1]=new Cartesian4_default),Cartesian3_default.multiplyByScalar(t,-n,scratchPlaneCenter),Cartesian3_default.add(i,scratchPlaneCenter,scratchPlaneCenter),a.x=t.x,a.y=t.y,a.z=t.z,a.w=-Cartesian3_default.dot(t,scratchPlaneCenter),Cartesian3_default.multiplyByScalar(t,n,scratchPlaneCenter),Cartesian3_default.add(i,scratchPlaneCenter,scratchPlaneCenter),f.x=-t.x,f.y=-t.y,f.z=-t.z,f.w=-Cartesian3_default.dot(Cartesian3_default.negate(t,scratchPlaneNormal),scratchPlaneCenter),u+=2}return t},CullingVolume.prototype.computeVisibility=function(e){if(!defined_default(e))throw new DeveloperError_default("boundingVolume is required.");const t=this.planes;let a=!1;for(let r=0,i=t.length;r<i;++r){const i=e.intersectPlane(Plane_default.fromCartesian4(t[r],scratchPlane));if(i===Intersect_default.OUTSIDE)return Intersect_default.OUTSIDE;i===Intersect_default.INTERSECTING&&(a=!0)}return a?Intersect_default.INTERSECTING:Intersect_default.INSIDE},CullingVolume.prototype.computeVisibilityWithPlaneMask=function(e,t){if(!defined_default(e))throw new DeveloperError_default("boundingVolume is required.");if(!defined_default(t))throw new DeveloperError_default("parentPlaneMask is required.");if(t===CullingVolume.MASK_OUTSIDE||t===CullingVolume.MASK_INSIDE)return t;let a=CullingVolume.MASK_INSIDE;const r=this.planes;for(let i=0,n=r.length;i<n;++i){const n=i<31?1<<i:0;if(i<31&&0==(t&n))continue;const u=e.intersectPlane(Plane_default.fromCartesian4(r[i],scratchPlane));if(u===Intersect_default.OUTSIDE)return CullingVolume.MASK_OUTSIDE;u===Intersect_default.INTERSECTING&&(a|=n)}return a},CullingVolume.MASK_OUTSIDE=4294967295,CullingVolume.MASK_INSIDE=0,CullingVolume.MASK_INDETERMINATE=2147483647;var CullingVolume_default=CullingVolume;function OrthographicOffCenterFrustum(e){e=defaultValue_default(e,defaultValue_default.EMPTY_OBJECT),this.left=e.left,this._left=void 0,this.right=e.right,this._right=void 0,this.top=e.top,this._top=void 0,this.bottom=e.bottom,this._bottom=void 0,this.near=defaultValue_default(e.near,1),this._near=this.near,this.far=defaultValue_default(e.far,5e8),this._far=this.far,this._cullingVolume=new CullingVolume_default,this._orthographicMatrix=new Matrix4_default}function update(e){if(!(defined_default(e.right)&&defined_default(e.left)&&defined_default(e.top)&&defined_default(e.bottom)&&defined_default(e.near)&&defined_default(e.far)))throw new DeveloperError_default("right, left, top, bottom, near, or far parameters are not set.");if(e.top!==e._top||e.bottom!==e._bottom||e.left!==e._left||e.right!==e._right||e.near!==e._near||e.far!==e._far){if(e.left>e.right)throw new DeveloperError_default("right must be greater than left.");if(e.bottom>e.top)throw new DeveloperError_default("top must be greater than bottom.");if(e.near<=0||e.near>e.far)throw new DeveloperError_default("near must be greater than zero and less than far.");e._left=e.left,e._right=e.right,e._top=e.top,e._bottom=e.bottom,e._near=e.near,e._far=e.far,e._orthographicMatrix=Matrix4_default.computeOrthographicOffCenter(e.left,e.right,e.bottom,e.top,e.near,e.far,e._orthographicMatrix)}}Object.defineProperties(OrthographicOffCenterFrustum.prototype,{projectionMatrix:{get:function(){return update(this),this._orthographicMatrix}}});var getPlanesRight=new Cartesian3_default,getPlanesNearCenter=new Cartesian3_default,getPlanesPoint=new Cartesian3_default,negateScratch=new Cartesian3_default;OrthographicOffCenterFrustum.prototype.computeCullingVolume=function(e,t,a){if(!defined_default(e))throw new DeveloperError_default("position is required.");if(!defined_default(t))throw new DeveloperError_default("direction is required.");if(!defined_default(a))throw new DeveloperError_default("up is required.");const r=this._cullingVolume.planes,i=this.top,n=this.bottom,u=this.right,f=this.left,o=this.near,s=this.far,l=Cartesian3_default.cross(t,a,getPlanesRight);Cartesian3_default.normalize(l,l);const d=getPlanesNearCenter;Cartesian3_default.multiplyByScalar(t,o,d),Cartesian3_default.add(e,d,d);const _=getPlanesPoint;Cartesian3_default.multiplyByScalar(l,f,_),Cartesian3_default.add(d,_,_);let c=r[0];return defined_default(c)||(c=r[0]=new Cartesian4_default),c.x=l.x,c.y=l.y,c.z=l.z,c.w=-Cartesian3_default.dot(l,_),Cartesian3_default.multiplyByScalar(l,u,_),Cartesian3_default.add(d,_,_),c=r[1],defined_default(c)||(c=r[1]=new Cartesian4_default),c.x=-l.x,c.y=-l.y,c.z=-l.z,c.w=-Cartesian3_default.dot(Cartesian3_default.negate(l,negateScratch),_),Cartesian3_default.multiplyByScalar(a,n,_),Cartesian3_default.add(d,_,_),c=r[2],defined_default(c)||(c=r[2]=new Cartesian4_default),c.x=a.x,c.y=a.y,c.z=a.z,c.w=-Cartesian3_default.dot(a,_),Cartesian3_default.multiplyByScalar(a,i,_),Cartesian3_default.add(d,_,_),c=r[3],defined_default(c)||(c=r[3]=new Cartesian4_default),c.x=-a.x,c.y=-a.y,c.z=-a.z,c.w=-Cartesian3_default.dot(Cartesian3_default.negate(a,negateScratch),_),c=r[4],defined_default(c)||(c=r[4]=new Cartesian4_default),c.x=t.x,c.y=t.y,c.z=t.z,c.w=-Cartesian3_default.dot(t,d),Cartesian3_default.multiplyByScalar(t,s,_),Cartesian3_default.add(e,_,_),c=r[5],defined_default(c)||(c=r[5]=new Cartesian4_default),c.x=-t.x,c.y=-t.y,c.z=-t.z,c.w=-Cartesian3_default.dot(Cartesian3_default.negate(t,negateScratch),_),this._cullingVolume},OrthographicOffCenterFrustum.prototype.getPixelDimensions=function(e,t,a,r,i){if(update(this),!defined_default(e)||!defined_default(t))throw new DeveloperError_default("Both drawingBufferWidth and drawingBufferHeight are required.");if(e<=0)throw new DeveloperError_default("drawingBufferWidth must be greater than zero.");if(t<=0)throw new DeveloperError_default("drawingBufferHeight must be greater than zero.");if(!defined_default(a))throw new DeveloperError_default("distance is required.");if(!defined_default(r))throw new DeveloperError_default("pixelRatio is required.");if(r<=0)throw new DeveloperError_default("pixelRatio must be greater than zero.");if(!defined_default(i))throw new DeveloperError_default("A result object is required.");const n=r*(this.right-this.left)/e,u=r*(this.top-this.bottom)/t;return i.x=n,i.y=u,i},OrthographicOffCenterFrustum.prototype.clone=function(e){return defined_default(e)||(e=new OrthographicOffCenterFrustum),e.left=this.left,e.right=this.right,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e._left=void 0,e._right=void 0,e._top=void 0,e._bottom=void 0,e._near=void 0,e._far=void 0,e},OrthographicOffCenterFrustum.prototype.equals=function(e){return defined_default(e)&&e instanceof OrthographicOffCenterFrustum&&this.right===e.right&&this.left===e.left&&this.top===e.top&&this.bottom===e.bottom&&this.near===e.near&&this.far===e.far},OrthographicOffCenterFrustum.prototype.equalsEpsilon=function(e,t,a){return e===this||defined_default(e)&&e instanceof OrthographicOffCenterFrustum&&Math_default.equalsEpsilon(this.right,e.right,t,a)&&Math_default.equalsEpsilon(this.left,e.left,t,a)&&Math_default.equalsEpsilon(this.top,e.top,t,a)&&Math_default.equalsEpsilon(this.bottom,e.bottom,t,a)&&Math_default.equalsEpsilon(this.near,e.near,t,a)&&Math_default.equalsEpsilon(this.far,e.far,t,a)};var OrthographicOffCenterFrustum_default=OrthographicOffCenterFrustum;function OrthographicFrustum(e){e=defaultValue_default(e,defaultValue_default.EMPTY_OBJECT),this._offCenterFrustum=new OrthographicOffCenterFrustum_default,this.width=e.width,this._width=void 0,this.aspectRatio=e.aspectRatio,this._aspectRatio=void 0,this.near=defaultValue_default(e.near,1),this._near=this.near,this.far=defaultValue_default(e.far,5e8),this._far=this.far}function update2(e){if(!(defined_default(e.width)&&defined_default(e.aspectRatio)&&defined_default(e.near)&&defined_default(e.far)))throw new DeveloperError_default("width, aspectRatio, near, or far parameters are not set.");const t=e._offCenterFrustum;if(e.width!==e._width||e.aspectRatio!==e._aspectRatio||e.near!==e._near||e.far!==e._far){if(e.aspectRatio<0)throw new DeveloperError_default("aspectRatio must be positive.");if(e.near<0||e.near>e.far)throw new DeveloperError_default("near must be greater than zero and less than far.");e._aspectRatio=e.aspectRatio,e._width=e.width,e._near=e.near,e._far=e.far;const a=1/e.aspectRatio;t.right=.5*e.width,t.left=-t.right,t.top=a*t.right,t.bottom=-t.top,t.near=e.near,t.far=e.far}}OrthographicFrustum.packedLength=4,OrthographicFrustum.pack=function(e,t,a){return Check_default.typeOf.object("value",e),Check_default.defined("array",t),a=defaultValue_default(a,0),t[a++]=e.width,t[a++]=e.aspectRatio,t[a++]=e.near,t[a]=e.far,t},OrthographicFrustum.unpack=function(e,t,a){return Check_default.defined("array",e),t=defaultValue_default(t,0),defined_default(a)||(a=new OrthographicFrustum),a.width=e[t++],a.aspectRatio=e[t++],a.near=e[t++],a.far=e[t],a},Object.defineProperties(OrthographicFrustum.prototype,{projectionMatrix:{get:function(){return update2(this),this._offCenterFrustum.projectionMatrix}},offCenterFrustum:{get:function(){return update2(this),this._offCenterFrustum}}}),OrthographicFrustum.prototype.computeCullingVolume=function(e,t,a){return update2(this),this._offCenterFrustum.computeCullingVolume(e,t,a)},OrthographicFrustum.prototype.getPixelDimensions=function(e,t,a,r,i){return update2(this),this._offCenterFrustum.getPixelDimensions(e,t,a,r,i)},OrthographicFrustum.prototype.clone=function(e){return defined_default(e)||(e=new OrthographicFrustum),e.aspectRatio=this.aspectRatio,e.width=this.width,e.near=this.near,e.far=this.far,e._aspectRatio=void 0,e._width=void 0,e._near=void 0,e._far=void 0,this._offCenterFrustum.clone(e._offCenterFrustum),e},OrthographicFrustum.prototype.equals=function(e){return!!(defined_default(e)&&e instanceof OrthographicFrustum)&&(update2(this),update2(e),this.width===e.width&&this.aspectRatio===e.aspectRatio&&this._offCenterFrustum.equals(e._offCenterFrustum))},OrthographicFrustum.prototype.equalsEpsilon=function(e,t,a){return!!(defined_default(e)&&e instanceof OrthographicFrustum)&&(update2(this),update2(e),Math_default.equalsEpsilon(this.width,e.width,t,a)&&Math_default.equalsEpsilon(this.aspectRatio,e.aspectRatio,t,a)&&this._offCenterFrustum.equalsEpsilon(e._offCenterFrustum,t,a))};var OrthographicFrustum_default=OrthographicFrustum;function PerspectiveOffCenterFrustum(e){e=defaultValue_default(e,defaultValue_default.EMPTY_OBJECT),this.left=e.left,this._left=void 0,this.right=e.right,this._right=void 0,this.top=e.top,this._top=void 0,this.bottom=e.bottom,this._bottom=void 0,this.near=defaultValue_default(e.near,1),this._near=this.near,this.far=defaultValue_default(e.far,5e8),this._far=this.far,this._cullingVolume=new CullingVolume_default,this._perspectiveMatrix=new Matrix4_default,this._infinitePerspective=new Matrix4_default}function update3(e){if(!(defined_default(e.right)&&defined_default(e.left)&&defined_default(e.top)&&defined_default(e.bottom)&&defined_default(e.near)&&defined_default(e.far)))throw new DeveloperError_default("right, left, top, bottom, near, or far parameters are not set.");const t=e.top,a=e.bottom,r=e.right,i=e.left,n=e.near,u=e.far;if(t!==e._top||a!==e._bottom||i!==e._left||r!==e._right||n!==e._near||u!==e._far){if(e.near<=0||e.near>e.far)throw new DeveloperError_default("near must be greater than zero and less than far.");e._left=i,e._right=r,e._top=t,e._bottom=a,e._near=n,e._far=u,e._perspectiveMatrix=Matrix4_default.computePerspectiveOffCenter(i,r,a,t,n,u,e._perspectiveMatrix),e._infinitePerspective=Matrix4_default.computeInfinitePerspectiveOffCenter(i,r,a,t,n,e._infinitePerspective)}}Object.defineProperties(PerspectiveOffCenterFrustum.prototype,{projectionMatrix:{get:function(){return update3(this),this._perspectiveMatrix}},infiniteProjectionMatrix:{get:function(){return update3(this),this._infinitePerspective}}});var getPlanesRight2=new Cartesian3_default,getPlanesNearCenter2=new Cartesian3_default,getPlanesFarCenter=new Cartesian3_default,getPlanesNormal=new Cartesian3_default;PerspectiveOffCenterFrustum.prototype.computeCullingVolume=function(e,t,a){if(!defined_default(e))throw new DeveloperError_default("position is required.");if(!defined_default(t))throw new DeveloperError_default("direction is required.");if(!defined_default(a))throw new DeveloperError_default("up is required.");const r=this._cullingVolume.planes,i=this.top,n=this.bottom,u=this.right,f=this.left,o=this.near,s=this.far,l=Cartesian3_default.cross(t,a,getPlanesRight2),d=getPlanesNearCenter2;Cartesian3_default.multiplyByScalar(t,o,d),Cartesian3_default.add(e,d,d);const _=getPlanesFarCenter;Cartesian3_default.multiplyByScalar(t,s,_),Cartesian3_default.add(e,_,_);const c=getPlanesNormal;Cartesian3_default.multiplyByScalar(l,f,c),Cartesian3_default.add(d,c,c),Cartesian3_default.subtract(c,e,c),Cartesian3_default.normalize(c,c),Cartesian3_default.cross(c,a,c),Cartesian3_default.normalize(c,c);let h=r[0];return defined_default(h)||(h=r[0]=new Cartesian4_default),h.x=c.x,h.y=c.y,h.z=c.z,h.w=-Cartesian3_default.dot(c,e),Cartesian3_default.multiplyByScalar(l,u,c),Cartesian3_default.add(d,c,c),Cartesian3_default.subtract(c,e,c),Cartesian3_default.cross(a,c,c),Cartesian3_default.normalize(c,c),h=r[1],defined_default(h)||(h=r[1]=new Cartesian4_default),h.x=c.x,h.y=c.y,h.z=c.z,h.w=-Cartesian3_default.dot(c,e),Cartesian3_default.multiplyByScalar(a,n,c),Cartesian3_default.add(d,c,c),Cartesian3_default.subtract(c,e,c),Cartesian3_default.cross(l,c,c),Cartesian3_default.normalize(c,c),h=r[2],defined_default(h)||(h=r[2]=new Cartesian4_default),h.x=c.x,h.y=c.y,h.z=c.z,h.w=-Cartesian3_default.dot(c,e),Cartesian3_default.multiplyByScalar(a,i,c),Cartesian3_default.add(d,c,c),Cartesian3_default.subtract(c,e,c),Cartesian3_default.cross(c,l,c),Cartesian3_default.normalize(c,c),h=r[3],defined_default(h)||(h=r[3]=new Cartesian4_default),h.x=c.x,h.y=c.y,h.z=c.z,h.w=-Cartesian3_default.dot(c,e),h=r[4],defined_default(h)||(h=r[4]=new Cartesian4_default),h.x=t.x,h.y=t.y,h.z=t.z,h.w=-Cartesian3_default.dot(t,d),Cartesian3_default.negate(t,c),h=r[5],defined_default(h)||(h=r[5]=new Cartesian4_default),h.x=c.x,h.y=c.y,h.z=c.z,h.w=-Cartesian3_default.dot(c,_),this._cullingVolume},PerspectiveOffCenterFrustum.prototype.getPixelDimensions=function(e,t,a,r,i){if(update3(this),!defined_default(e)||!defined_default(t))throw new DeveloperError_default("Both drawingBufferWidth and drawingBufferHeight are required.");if(e<=0)throw new DeveloperError_default("drawingBufferWidth must be greater than zero.");if(t<=0)throw new DeveloperError_default("drawingBufferHeight must be greater than zero.");if(!defined_default(a))throw new DeveloperError_default("distance is required.");if(!defined_default(r))throw new DeveloperError_default("pixelRatio is required");if(r<=0)throw new DeveloperError_default("pixelRatio must be greater than zero.");if(!defined_default(i))throw new DeveloperError_default("A result object is required.");const n=1/this.near;let u=this.top*n;const f=2*r*a*u/t;u=this.right*n;const o=2*r*a*u/e;return i.x=o,i.y=f,i},PerspectiveOffCenterFrustum.prototype.clone=function(e){return defined_default(e)||(e=new PerspectiveOffCenterFrustum),e.right=this.right,e.left=this.left,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e._left=void 0,e._right=void 0,e._top=void 0,e._bottom=void 0,e._near=void 0,e._far=void 0,e},PerspectiveOffCenterFrustum.prototype.equals=function(e){return defined_default(e)&&e instanceof PerspectiveOffCenterFrustum&&this.right===e.right&&this.left===e.left&&this.top===e.top&&this.bottom===e.bottom&&this.near===e.near&&this.far===e.far},PerspectiveOffCenterFrustum.prototype.equalsEpsilon=function(e,t,a){return e===this||defined_default(e)&&e instanceof PerspectiveOffCenterFrustum&&Math_default.equalsEpsilon(this.right,e.right,t,a)&&Math_default.equalsEpsilon(this.left,e.left,t,a)&&Math_default.equalsEpsilon(this.top,e.top,t,a)&&Math_default.equalsEpsilon(this.bottom,e.bottom,t,a)&&Math_default.equalsEpsilon(this.near,e.near,t,a)&&Math_default.equalsEpsilon(this.far,e.far,t,a)};var PerspectiveOffCenterFrustum_default=PerspectiveOffCenterFrustum;function PerspectiveFrustum(e){e=defaultValue_default(e,defaultValue_default.EMPTY_OBJECT),this._offCenterFrustum=new PerspectiveOffCenterFrustum_default,this.fov=e.fov,this._fov=void 0,this._fovy=void 0,this._sseDenominator=void 0,this.aspectRatio=e.aspectRatio,this._aspectRatio=void 0,this.near=defaultValue_default(e.near,1),this._near=this.near,this.far=defaultValue_default(e.far,5e8),this._far=this.far,this.xOffset=defaultValue_default(e.xOffset,0),this._xOffset=this.xOffset,this.yOffset=defaultValue_default(e.yOffset,0),this._yOffset=this.yOffset}function update4(e){if(!(defined_default(e.fov)&&defined_default(e.aspectRatio)&&defined_default(e.near)&&defined_default(e.far)))throw new DeveloperError_default("fov, aspectRatio, near, or far parameters are not set.");const t=e._offCenterFrustum;if(e.fov!==e._fov||e.aspectRatio!==e._aspectRatio||e.near!==e._near||e.far!==e._far||e.xOffset!==e._xOffset||e.yOffset!==e._yOffset){if(e.fov<0||e.fov>=Math.PI)throw new DeveloperError_default("fov must be in the range [0, PI).");if(e.aspectRatio<0)throw new DeveloperError_default("aspectRatio must be positive.");if(e.near<0||e.near>e.far)throw new DeveloperError_default("near must be greater than zero and less than far.");e._aspectRatio=e.aspectRatio,e._fov=e.fov,e._fovy=e.aspectRatio<=1?e.fov:2*Math.atan(Math.tan(.5*e.fov)/e.aspectRatio),e._near=e.near,e._far=e.far,e._sseDenominator=2*Math.tan(.5*e._fovy),e._xOffset=e.xOffset,e._yOffset=e.yOffset,t.top=e.near*Math.tan(.5*e._fovy),t.bottom=-t.top,t.right=e.aspectRatio*t.top,t.left=-t.right,t.near=e.near,t.far=e.far,t.right+=e.xOffset,t.left+=e.xOffset,t.top+=e.yOffset,t.bottom+=e.yOffset}}PerspectiveFrustum.packedLength=6,PerspectiveFrustum.pack=function(e,t,a){return Check_default.typeOf.object("value",e),Check_default.defined("array",t),a=defaultValue_default(a,0),t[a++]=e.fov,t[a++]=e.aspectRatio,t[a++]=e.near,t[a++]=e.far,t[a++]=e.xOffset,t[a]=e.yOffset,t},PerspectiveFrustum.unpack=function(e,t,a){return Check_default.defined("array",e),t=defaultValue_default(t,0),defined_default(a)||(a=new PerspectiveFrustum),a.fov=e[t++],a.aspectRatio=e[t++],a.near=e[t++],a.far=e[t++],a.xOffset=e[t++],a.yOffset=e[t],a},Object.defineProperties(PerspectiveFrustum.prototype,{projectionMatrix:{get:function(){return update4(this),this._offCenterFrustum.projectionMatrix}},infiniteProjectionMatrix:{get:function(){return update4(this),this._offCenterFrustum.infiniteProjectionMatrix}},fovy:{get:function(){return update4(this),this._fovy}},sseDenominator:{get:function(){return update4(this),this._sseDenominator}},offCenterFrustum:{get:function(){return update4(this),this._offCenterFrustum}}}),PerspectiveFrustum.prototype.computeCullingVolume=function(e,t,a){return update4(this),this._offCenterFrustum.computeCullingVolume(e,t,a)},PerspectiveFrustum.prototype.getPixelDimensions=function(e,t,a,r,i){return update4(this),this._offCenterFrustum.getPixelDimensions(e,t,a,r,i)},PerspectiveFrustum.prototype.clone=function(e){return defined_default(e)||(e=new PerspectiveFrustum),e.aspectRatio=this.aspectRatio,e.fov=this.fov,e.near=this.near,e.far=this.far,e._aspectRatio=void 0,e._fov=void 0,e._near=void 0,e._far=void 0,this._offCenterFrustum.clone(e._offCenterFrustum),e},PerspectiveFrustum.prototype.equals=function(e){return!!(defined_default(e)&&e instanceof PerspectiveFrustum)&&(update4(this),update4(e),this.fov===e.fov&&this.aspectRatio===e.aspectRatio&&this._offCenterFrustum.equals(e._offCenterFrustum))},PerspectiveFrustum.prototype.equalsEpsilon=function(e,t,a){return!!(defined_default(e)&&e instanceof PerspectiveFrustum)&&(update4(this),update4(e),Math_default.equalsEpsilon(this.fov,e.fov,t,a)&&Math_default.equalsEpsilon(this.aspectRatio,e.aspectRatio,t,a)&&this._offCenterFrustum.equalsEpsilon(e._offCenterFrustum,t,a))};var PerspectiveFrustum_default=PerspectiveFrustum,PERSPECTIVE=0,ORTHOGRAPHIC=1;function FrustumGeometry(e){Check_default.typeOf.object("options",e),Check_default.typeOf.object("options.frustum",e.frustum),Check_default.typeOf.object("options.origin",e.origin),Check_default.typeOf.object("options.orientation",e.orientation);const t=e.frustum,a=e.orientation,r=e.origin,i=defaultValue_default(e.vertexFormat,VertexFormat_default.DEFAULT),n=defaultValue_default(e._drawNearPlane,!0);let u,f;t instanceof PerspectiveFrustum_default?(u=PERSPECTIVE,f=PerspectiveFrustum_default.packedLength):t instanceof OrthographicFrustum_default&&(u=ORTHOGRAPHIC,f=OrthographicFrustum_default.packedLength),this._frustumType=u,this._frustum=t.clone(),this._origin=Cartesian3_default.clone(r),this._orientation=Quaternion_default.clone(a),this._drawNearPlane=n,this._vertexFormat=i,this._workerName="createFrustumGeometry",this.packedLength=2+f+Cartesian3_default.packedLength+Quaternion_default.packedLength+VertexFormat_default.packedLength}FrustumGeometry.pack=function(e,t,a){Check_default.typeOf.object("value",e),Check_default.defined("array",t),a=defaultValue_default(a,0);const r=e._frustumType,i=e._frustum;return t[a++]=r,r===PERSPECTIVE?(PerspectiveFrustum_default.pack(i,t,a),a+=PerspectiveFrustum_default.packedLength):(OrthographicFrustum_default.pack(i,t,a),a+=OrthographicFrustum_default.packedLength),Cartesian3_default.pack(e._origin,t,a),a+=Cartesian3_default.packedLength,Quaternion_default.pack(e._orientation,t,a),a+=Quaternion_default.packedLength,VertexFormat_default.pack(e._vertexFormat,t,a),t[a+=VertexFormat_default.packedLength]=e._drawNearPlane?1:0,t};var scratchPackPerspective=new PerspectiveFrustum_default,scratchPackOrthographic=new OrthographicFrustum_default,scratchPackQuaternion=new Quaternion_default,scratchPackorigin=new Cartesian3_default,scratchVertexFormat=new VertexFormat_default;function getAttributes(e,t,a,r,i,n,u,f){const o=e/3*2;for(let i=0;i<4;++i)defined_default(t)&&(t[e]=n.x,t[e+1]=n.y,t[e+2]=n.z),defined_default(a)&&(a[e]=u.x,a[e+1]=u.y,a[e+2]=u.z),defined_default(r)&&(r[e]=f.x,r[e+1]=f.y,r[e+2]=f.z),e+=3;i[o]=0,i[o+1]=0,i[o+2]=1,i[o+3]=0,i[o+4]=1,i[o+5]=1,i[o+6]=0,i[o+7]=1}FrustumGeometry.unpack=function(e,t,a){Check_default.defined("array",e),t=defaultValue_default(t,0);const r=e[t++];let i;r===PERSPECTIVE?(i=PerspectiveFrustum_default.unpack(e,t,scratchPackPerspective),t+=PerspectiveFrustum_default.packedLength):(i=OrthographicFrustum_default.unpack(e,t,scratchPackOrthographic),t+=OrthographicFrustum_default.packedLength);const n=Cartesian3_default.unpack(e,t,scratchPackorigin);t+=Cartesian3_default.packedLength;const u=Quaternion_default.unpack(e,t,scratchPackQuaternion);t+=Quaternion_default.packedLength;const f=VertexFormat_default.unpack(e,t,scratchVertexFormat),o=1===e[t+=VertexFormat_default.packedLength];if(!defined_default(a))return new FrustumGeometry({frustum:i,origin:n,orientation:u,vertexFormat:f,_drawNearPlane:o});const s=r===a._frustumType?a._frustum:void 0;return a._frustum=i.clone(s),a._frustumType=r,a._origin=Cartesian3_default.clone(n,a._origin),a._orientation=Quaternion_default.clone(u,a._orientation),a._vertexFormat=VertexFormat_default.clone(f,a._vertexFormat),a._drawNearPlane=o,a};var scratchRotationMatrix=new Matrix3_default,scratchViewMatrix=new Matrix4_default,scratchInverseMatrix=new Matrix4_default,scratchXDirection=new Cartesian3_default,scratchYDirection=new Cartesian3_default,scratchZDirection=new Cartesian3_default,scratchNegativeX=new Cartesian3_default,scratchNegativeY=new Cartesian3_default,scratchNegativeZ=new Cartesian3_default,frustumSplits=new Array(3),frustumCornersNDC=new Array(4);frustumCornersNDC[0]=new Cartesian4_default(-1,-1,1,1),frustumCornersNDC[1]=new Cartesian4_default(1,-1,1,1),frustumCornersNDC[2]=new Cartesian4_default(1,1,1,1),frustumCornersNDC[3]=new Cartesian4_default(-1,1,1,1);var scratchFrustumCorners=new Array(4);for(let e=0;e<4;++e)scratchFrustumCorners[e]=new Cartesian4_default;FrustumGeometry._computeNearFarPlanes=function(e,t,a,r,i,n,u,f){const o=Matrix3_default.fromQuaternion(t,scratchRotationMatrix);let s=defaultValue_default(n,scratchXDirection),l=defaultValue_default(u,scratchYDirection),d=defaultValue_default(f,scratchZDirection);s=Matrix3_default.getColumn(o,0,s),l=Matrix3_default.getColumn(o,1,l),d=Matrix3_default.getColumn(o,2,d),Cartesian3_default.normalize(s,s),Cartesian3_default.normalize(l,l),Cartesian3_default.normalize(d,d),Cartesian3_default.negate(s,s);const _=Matrix4_default.computeView(e,d,l,s,scratchViewMatrix);let c,h;const p=r.projectionMatrix;if(a===PERSPECTIVE){const e=Matrix4_default.multiply(p,_,scratchInverseMatrix);h=Matrix4_default.inverse(e,scratchInverseMatrix)}else c=Matrix4_default.inverseTransformation(_,scratchInverseMatrix);defined_default(h)?(frustumSplits[0]=r.near,frustumSplits[1]=r.far):(frustumSplits[0]=0,frustumSplits[1]=r.near,frustumSplits[2]=r.far);for(let t=0;t<2;++t)for(let a=0;a<4;++a){let n=Cartesian4_default.clone(frustumCornersNDC[a],scratchFrustumCorners[a]);if(defined_default(h)){n=Matrix4_default.multiplyByVector(h,n,n);const a=1/n.w;Cartesian3_default.multiplyByScalar(n,a,n),Cartesian3_default.subtract(n,e,n),Cartesian3_default.normalize(n,n);const r=Cartesian3_default.dot(d,n);Cartesian3_default.multiplyByScalar(n,frustumSplits[t]/r,n),Cartesian3_default.add(n,e,n)}else{const e=r.offCenterFrustum;defined_default(e)&&(r=e);const a=frustumSplits[t],i=frustumSplits[t+1];n.x=.5*(n.x*(r.right-r.left)+r.left+r.right),n.y=.5*(n.y*(r.top-r.bottom)+r.bottom+r.top),n.z=.5*(n.z*(a-i)-a-i),n.w=1,Matrix4_default.multiplyByVector(c,n,n)}i[12*t+3*a]=n.x,i[12*t+3*a+1]=n.y,i[12*t+3*a+2]=n.z}},FrustumGeometry.createGeometry=function(e){const t=e._frustumType,a=e._frustum,r=e._origin,i=e._orientation,n=e._drawNearPlane,u=e._vertexFormat,f=n?6:5;let o=new Float64Array(72);FrustumGeometry._computeNearFarPlanes(r,i,t,a,o);let s=24;o[s]=o[12],o[s+1]=o[13],o[s+2]=o[14],o[s+3]=o[0],o[s+4]=o[1],o[s+5]=o[2],o[s+6]=o[9],o[s+7]=o[10],o[s+8]=o[11],o[s+9]=o[21],o[s+10]=o[22],o[s+11]=o[23],s+=12,o[s]=o[15],o[s+1]=o[16],o[s+2]=o[17],o[s+3]=o[3],o[s+4]=o[4],o[s+5]=o[5],o[s+6]=o[0],o[s+7]=o[1],o[s+8]=o[2],o[s+9]=o[12],o[s+10]=o[13],o[s+11]=o[14],s+=12,o[s]=o[3],o[s+1]=o[4],o[s+2]=o[5],o[s+3]=o[15],o[s+4]=o[16],o[s+5]=o[17],o[s+6]=o[18],o[s+7]=o[19],o[s+8]=o[20],o[s+9]=o[6],o[s+10]=o[7],o[s+11]=o[8],s+=12,o[s]=o[6],o[s+1]=o[7],o[s+2]=o[8],o[s+3]=o[18],o[s+4]=o[19],o[s+5]=o[20],o[s+6]=o[21],o[s+7]=o[22],o[s+8]=o[23],o[s+9]=o[9],o[s+10]=o[10],o[s+11]=o[11],n||(o=o.subarray(12));const l=new GeometryAttributes_default({position:new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.DOUBLE,componentsPerAttribute:3,values:o})});if(defined_default(u.normal)||defined_default(u.tangent)||defined_default(u.bitangent)||defined_default(u.st)){const e=defined_default(u.normal)?new Float32Array(12*f):void 0,t=defined_default(u.tangent)?new Float32Array(12*f):void 0,a=defined_default(u.bitangent)?new Float32Array(12*f):void 0,r=defined_default(u.st)?new Float32Array(8*f):void 0,i=scratchXDirection,o=scratchYDirection,d=scratchZDirection,_=Cartesian3_default.negate(i,scratchNegativeX),c=Cartesian3_default.negate(o,scratchNegativeY),h=Cartesian3_default.negate(d,scratchNegativeZ);s=0,n&&(getAttributes(s,e,t,a,r,h,i,o),s+=12),getAttributes(s,e,t,a,r,d,_,o),s+=12,getAttributes(s,e,t,a,r,_,h,o),s+=12,getAttributes(s,e,t,a,r,c,h,_),s+=12,getAttributes(s,e,t,a,r,i,d,o),s+=12,getAttributes(s,e,t,a,r,o,d,_),defined_default(e)&&(l.normal=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.FLOAT,componentsPerAttribute:3,values:e})),defined_default(t)&&(l.tangent=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.FLOAT,componentsPerAttribute:3,values:t})),defined_default(a)&&(l.bitangent=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.FLOAT,componentsPerAttribute:3,values:a})),defined_default(r)&&(l.st=new GeometryAttribute_default({componentDatatype:ComponentDatatype_default.FLOAT,componentsPerAttribute:2,values:r}))}const d=new Uint16Array(6*f);for(let e=0;e<f;++e){const t=6*e,a=4*e;d[t]=a,d[t+1]=a+1,d[t+2]=a+2,d[t+3]=a,d[t+4]=a+2,d[t+5]=a+3}return new Geometry_default({attributes:l,indices:d,primitiveType:PrimitiveType_default.TRIANGLES,boundingSphere:BoundingSphere_default.fromVertices(o)})};var FrustumGeometry_default=FrustumGeometry;export{OrthographicFrustum_default,PerspectiveFrustum_default,FrustumGeometry_default};
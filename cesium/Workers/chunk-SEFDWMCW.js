/*! For license information please see chunk-SEFDWMCW.js.LICENSE.txt */
import{AttributeCompression_default}from"./chunk-I6TVJ6T7.js";import{BoundingSphere_default}from"./chunk-D4YHO4NZ.js";import{Cartesian2_default,Matrix4_default,Rectangle_default}from"./chunk-RSWBNJPT.js";import{ComponentDatatype_default}from"./chunk-Z6LPXA7S.js";import{Cartesian3_default,Ellipsoid_default}from"./chunk-PHQVHDVI.js";import{Math_default}from"./chunk-IZED7ODV.js";import{defaultValue_default}from"./chunk-C53JYYKX.js";import{Check_default}from"./chunk-7FEGZO3D.js";import{defined_default}from"./chunk-YS4KPNLC.js";function EllipsoidalOccluder(t,e){Check_default.typeOf.object("ellipsoid",t),this._ellipsoid=t,this._cameraPosition=new Cartesian3_default,this._cameraPositionInScaledSpace=new Cartesian3_default,this._distanceToLimbInScaledSpaceSquared=0,defined_default(e)&&(this.cameraPosition=e)}Object.defineProperties(EllipsoidalOccluder.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},cameraPosition:{get:function(){return this._cameraPosition},set:function(t){const e=this._ellipsoid.transformPositionToScaledSpace(t,this._cameraPositionInScaledSpace),a=Cartesian3_default.magnitudeSquared(e)-1;Cartesian3_default.clone(t,this._cameraPosition),this._cameraPositionInScaledSpace=e,this._distanceToLimbInScaledSpaceSquared=a}}});var scratchCartesian=new Cartesian3_default;EllipsoidalOccluder.prototype.isPointVisible=function(t){return isScaledSpacePointVisible(this._ellipsoid.transformPositionToScaledSpace(t,scratchCartesian),this._cameraPositionInScaledSpace,this._distanceToLimbInScaledSpaceSquared)},EllipsoidalOccluder.prototype.isScaledSpacePointVisible=function(t){return isScaledSpacePointVisible(t,this._cameraPositionInScaledSpace,this._distanceToLimbInScaledSpaceSquared)};var scratchCameraPositionInScaledSpaceShrunk=new Cartesian3_default;EllipsoidalOccluder.prototype.isScaledSpacePointVisiblePossiblyUnderEllipsoid=function(t,e){const a=this._ellipsoid;let i,r;return defined_default(e)&&e<0&&a.minimumRadius>-e?(r=scratchCameraPositionInScaledSpaceShrunk,r.x=this._cameraPosition.x/(a.radii.x+e),r.y=this._cameraPosition.y/(a.radii.y+e),r.z=this._cameraPosition.z/(a.radii.z+e),i=r.x*r.x+r.y*r.y+r.z*r.z-1):(r=this._cameraPositionInScaledSpace,i=this._distanceToLimbInScaledSpaceSquared),isScaledSpacePointVisible(t,r,i)},EllipsoidalOccluder.prototype.computeHorizonCullingPoint=function(t,e,a){return computeHorizonCullingPointFromPositions(this._ellipsoid,t,e,a)};var scratchEllipsoidShrunk=Ellipsoid_default.clone(Ellipsoid_default.UNIT_SPHERE);EllipsoidalOccluder.prototype.computeHorizonCullingPointPossiblyUnderEllipsoid=function(t,e,a,i){return computeHorizonCullingPointFromPositions(getPossiblyShrunkEllipsoid(this._ellipsoid,a,scratchEllipsoidShrunk),t,e,i)},EllipsoidalOccluder.prototype.computeHorizonCullingPointFromVertices=function(t,e,a,i,r){return computeHorizonCullingPointFromVertices(this._ellipsoid,t,e,a,i,r)},EllipsoidalOccluder.prototype.computeHorizonCullingPointFromVerticesPossiblyUnderEllipsoid=function(t,e,a,i,r,n){return computeHorizonCullingPointFromVertices(getPossiblyShrunkEllipsoid(this._ellipsoid,r,scratchEllipsoidShrunk),t,e,a,i,n)};var subsampleScratch=[];EllipsoidalOccluder.prototype.computeHorizonCullingPointFromRectangle=function(t,e,a){Check_default.typeOf.object("rectangle",t);const i=Rectangle_default.subsample(t,e,0,subsampleScratch),r=BoundingSphere_default.fromPoints(i);if(!(Cartesian3_default.magnitude(r.center)<.1*e.minimumRadius))return this.computeHorizonCullingPoint(r.center,i,a)};var scratchEllipsoidShrunkRadii=new Cartesian3_default;function getPossiblyShrunkEllipsoid(t,e,a){if(defined_default(e)&&e<0&&t.minimumRadius>-e){const i=Cartesian3_default.fromElements(t.radii.x+e,t.radii.y+e,t.radii.z+e,scratchEllipsoidShrunkRadii);t=Ellipsoid_default.fromCartesian3(i,a)}return t}function computeHorizonCullingPointFromPositions(t,e,a,i){Check_default.typeOf.object("directionToPoint",e),Check_default.defined("positions",a),defined_default(i)||(i=new Cartesian3_default);const r=computeScaledSpaceDirectionToPoint(t,e);let n=0;for(let e=0,i=a.length;e<i;++e){const i=computeMagnitude(t,a[e],r);if(i<0)return;n=Math.max(n,i)}return magnitudeToPoint(r,n,i)}var positionScratch=new Cartesian3_default;function computeHorizonCullingPointFromVertices(t,e,a,i,r,n){Check_default.typeOf.object("directionToPoint",e),Check_default.defined("vertices",a),Check_default.typeOf.number("stride",i),defined_default(n)||(n=new Cartesian3_default),i=defaultValue_default(i,3),r=defaultValue_default(r,Cartesian3_default.ZERO);const o=computeScaledSpaceDirectionToPoint(t,e);let s=0;for(let e=0,n=a.length;e<n;e+=i){positionScratch.x=a[e]+r.x,positionScratch.y=a[e+1]+r.y,positionScratch.z=a[e+2]+r.z;const i=computeMagnitude(t,positionScratch,o);if(i<0)return;s=Math.max(s,i)}return magnitudeToPoint(o,s,n)}function isScaledSpacePointVisible(t,e,a){const i=e,r=a,n=Cartesian3_default.subtract(t,i,scratchCartesian),o=-Cartesian3_default.dot(n,i);return!(r<0?o>0:o>r&&o*o/Cartesian3_default.magnitudeSquared(n)>r)}var scaledSpaceScratch=new Cartesian3_default,directionScratch=new Cartesian3_default;function computeMagnitude(t,e,a){const i=t.transformPositionToScaledSpace(e,scaledSpaceScratch);let r=Cartesian3_default.magnitudeSquared(i),n=Math.sqrt(r);const o=Cartesian3_default.divideByScalar(i,n,directionScratch);r=Math.max(1,r),n=Math.max(1,n);const s=1/n;return 1/(Cartesian3_default.dot(o,a)*s-Cartesian3_default.magnitude(Cartesian3_default.cross(o,a,o))*(Math.sqrt(r-1)*s))}function magnitudeToPoint(t,e,a){if(!(e<=0||e===1/0||e!=e))return Cartesian3_default.multiplyByScalar(t,e,a)}var directionToPointScratch=new Cartesian3_default;function computeScaledSpaceDirectionToPoint(t,e){return Cartesian3_default.equals(e,Cartesian3_default.ZERO)?e:(t.transformPositionToScaledSpace(e,directionToPointScratch),Cartesian3_default.normalize(directionToPointScratch,directionToPointScratch))}var EllipsoidalOccluder_default=EllipsoidalOccluder,TerrainExaggeration={getHeight:function(t,e,a){return(t-a)*e+a}},scratchCartographic=new Cartesian3_default;TerrainExaggeration.getPosition=function(t,e,a,i,r){const n=e.cartesianToCartographic(t,scratchCartographic),o=TerrainExaggeration.getHeight(n.height,a,i);return Cartesian3_default.fromRadians(n.longitude,n.latitude,o,e,r)};var TerrainExaggeration_default=TerrainExaggeration,TerrainQuantization={NONE:0,BITS12:1},TerrainQuantization_default=Object.freeze(TerrainQuantization),cartesian3Scratch=new Cartesian3_default,cartesian3DimScratch=new Cartesian3_default,cartesian2Scratch=new Cartesian2_default,matrix4Scratch=new Matrix4_default,matrix4Scratch2=new Matrix4_default,SHIFT_LEFT_12=Math.pow(2,12);function TerrainEncoding(t,e,a,i,r,n,o,s,c,l){let d,u,f=TerrainQuantization_default.NONE;if(defined_default(e)&&defined_default(a)&&defined_default(i)&&defined_default(r)){const t=e.minimum,n=e.maximum,o=Cartesian3_default.subtract(n,t,cartesian3DimScratch),s=i-a;f=Math.max(Cartesian3_default.maximumComponent(o),s)<SHIFT_LEFT_12-1?TerrainQuantization_default.BITS12:TerrainQuantization_default.NONE,d=Matrix4_default.inverseTransformation(r,new Matrix4_default);const c=Cartesian3_default.negate(t,cartesian3Scratch);Matrix4_default.multiply(Matrix4_default.fromTranslation(c,matrix4Scratch),d,d);const l=cartesian3Scratch;l.x=1/o.x,l.y=1/o.y,l.z=1/o.z,Matrix4_default.multiply(Matrix4_default.fromScale(l,matrix4Scratch),d,d),u=Matrix4_default.clone(r),Matrix4_default.setTranslation(u,Cartesian3_default.ZERO,u),r=Matrix4_default.clone(r,new Matrix4_default);const h=Matrix4_default.fromTranslation(t,matrix4Scratch),m=Matrix4_default.fromScale(o,matrix4Scratch2),p=Matrix4_default.multiply(h,m,matrix4Scratch);Matrix4_default.multiply(r,p,r),Matrix4_default.multiply(u,p,u)}this.quantization=f,this.minimumHeight=a,this.maximumHeight=i,this.center=Cartesian3_default.clone(t),this.toScaledENU=d,this.fromScaledENU=r,this.matrix=u,this.hasVertexNormals=n,this.hasWebMercatorT=defaultValue_default(o,!1),this.hasGeodeticSurfaceNormals=defaultValue_default(s,!1),this.exaggeration=defaultValue_default(c,1),this.exaggerationRelativeHeight=defaultValue_default(l,0),this.stride=0,this._offsetGeodeticSurfaceNormal=0,this._offsetVertexNormal=0,this._calculateStrideAndOffsets()}TerrainEncoding.prototype.encode=function(t,e,a,i,r,n,o,s){const c=i.x,l=i.y;if(this.quantization===TerrainQuantization_default.BITS12){(a=Matrix4_default.multiplyByPoint(this.toScaledENU,a,cartesian3Scratch)).x=Math_default.clamp(a.x,0,1),a.y=Math_default.clamp(a.y,0,1),a.z=Math_default.clamp(a.z,0,1);const i=this.maximumHeight-this.minimumHeight,n=Math_default.clamp((r-this.minimumHeight)/i,0,1);Cartesian2_default.fromElements(a.x,a.y,cartesian2Scratch);const s=AttributeCompression_default.compressTextureCoordinates(cartesian2Scratch);Cartesian2_default.fromElements(a.z,n,cartesian2Scratch);const d=AttributeCompression_default.compressTextureCoordinates(cartesian2Scratch);Cartesian2_default.fromElements(c,l,cartesian2Scratch);const u=AttributeCompression_default.compressTextureCoordinates(cartesian2Scratch);if(t[e++]=s,t[e++]=d,t[e++]=u,this.hasWebMercatorT){Cartesian2_default.fromElements(o,0,cartesian2Scratch);const a=AttributeCompression_default.compressTextureCoordinates(cartesian2Scratch);t[e++]=a}}else Cartesian3_default.subtract(a,this.center,cartesian3Scratch),t[e++]=cartesian3Scratch.x,t[e++]=cartesian3Scratch.y,t[e++]=cartesian3Scratch.z,t[e++]=r,t[e++]=c,t[e++]=l,this.hasWebMercatorT&&(t[e++]=o);return this.hasVertexNormals&&(t[e++]=AttributeCompression_default.octPackFloat(n)),this.hasGeodeticSurfaceNormals&&(t[e++]=s.x,t[e++]=s.y,t[e++]=s.z),e};var scratchPosition=new Cartesian3_default,scratchGeodeticSurfaceNormal=new Cartesian3_default;TerrainEncoding.prototype.addGeodeticSurfaceNormals=function(t,e,a){if(this.hasGeodeticSurfaceNormals)return;const i=this.stride,r=t.length/i;this.hasGeodeticSurfaceNormals=!0,this._calculateStrideAndOffsets();const n=this.stride;for(let o=0;o<r;o++){for(let a=0;a<i;a++){const r=o*i+a;e[o*n+a]=t[r]}const r=this.decodePosition(e,o,scratchPosition),s=a.geodeticSurfaceNormal(r,scratchGeodeticSurfaceNormal),c=o*n+this._offsetGeodeticSurfaceNormal;e[c]=s.x,e[c+1]=s.y,e[c+2]=s.z}},TerrainEncoding.prototype.removeGeodeticSurfaceNormals=function(t,e){if(!this.hasGeodeticSurfaceNormals)return;const a=this.stride,i=t.length/a;this.hasGeodeticSurfaceNormals=!1,this._calculateStrideAndOffsets();const r=this.stride;for(let n=0;n<i;n++)for(let i=0;i<r;i++){const o=n*a+i;e[n*r+i]=t[o]}},TerrainEncoding.prototype.decodePosition=function(t,e,a){if(defined_default(a)||(a=new Cartesian3_default),e*=this.stride,this.quantization===TerrainQuantization_default.BITS12){const i=AttributeCompression_default.decompressTextureCoordinates(t[e],cartesian2Scratch);a.x=i.x,a.y=i.y;const r=AttributeCompression_default.decompressTextureCoordinates(t[e+1],cartesian2Scratch);return a.z=r.x,Matrix4_default.multiplyByPoint(this.fromScaledENU,a,a)}return a.x=t[e],a.y=t[e+1],a.z=t[e+2],Cartesian3_default.add(a,this.center,a)},TerrainEncoding.prototype.getExaggeratedPosition=function(t,e,a){a=this.decodePosition(t,e,a);const i=this.exaggeration,r=this.exaggerationRelativeHeight;if(1!==i&&this.hasGeodeticSurfaceNormals){const n=this.decodeGeodeticSurfaceNormal(t,e,scratchGeodeticSurfaceNormal),o=this.decodeHeight(t,e),s=TerrainExaggeration_default.getHeight(o,i,r)-o;a.x+=n.x*s,a.y+=n.y*s,a.z+=n.z*s}return a},TerrainEncoding.prototype.decodeTextureCoordinates=function(t,e,a){return defined_default(a)||(a=new Cartesian2_default),e*=this.stride,this.quantization===TerrainQuantization_default.BITS12?AttributeCompression_default.decompressTextureCoordinates(t[e+2],a):Cartesian2_default.fromElements(t[e+4],t[e+5],a)},TerrainEncoding.prototype.decodeHeight=function(t,e){return e*=this.stride,this.quantization===TerrainQuantization_default.BITS12?AttributeCompression_default.decompressTextureCoordinates(t[e+1],cartesian2Scratch).y*(this.maximumHeight-this.minimumHeight)+this.minimumHeight:t[e+3]},TerrainEncoding.prototype.decodeWebMercatorT=function(t,e){return e*=this.stride,this.quantization===TerrainQuantization_default.BITS12?AttributeCompression_default.decompressTextureCoordinates(t[e+3],cartesian2Scratch).x:t[e+6]},TerrainEncoding.prototype.getOctEncodedNormal=function(t,e,a){const i=t[e=e*this.stride+this._offsetVertexNormal]/256,r=Math.floor(i),n=256*(i-r);return Cartesian2_default.fromElements(r,n,a)},TerrainEncoding.prototype.decodeGeodeticSurfaceNormal=function(t,e,a){return e=e*this.stride+this._offsetGeodeticSurfaceNormal,a.x=t[e],a.y=t[e+1],a.z=t[e+2],a},TerrainEncoding.prototype._calculateStrideAndOffsets=function(){let t=0;this.quantization===TerrainQuantization_default.BITS12?t+=3:t+=6,this.hasWebMercatorT&&(t+=1),this.hasVertexNormals&&(this._offsetVertexNormal=t,t+=1),this.hasGeodeticSurfaceNormals&&(this._offsetGeodeticSurfaceNormal=t,t+=3),this.stride=t};var attributesIndicesNone={position3DAndHeight:0,textureCoordAndEncodedNormals:1,geodeticSurfaceNormal:2},attributesIndicesBits12={compressed0:0,compressed1:1,geodeticSurfaceNormal:2};TerrainEncoding.prototype.getAttributes=function(t){const e=ComponentDatatype_default.FLOAT,a=ComponentDatatype_default.getSizeInBytes(e),i=this.stride*a;let r=0;const n=[];function o(o,s){n.push({index:o,vertexBuffer:t,componentDatatype:e,componentsPerAttribute:s,offsetInBytes:r,strideInBytes:i}),r+=s*a}if(this.quantization===TerrainQuantization_default.NONE){o(attributesIndicesNone.position3DAndHeight,4);let t=2;t+=this.hasWebMercatorT?1:0,t+=this.hasVertexNormals?1:0,o(attributesIndicesNone.textureCoordAndEncodedNormals,t),this.hasGeodeticSurfaceNormals&&o(attributesIndicesNone.geodeticSurfaceNormal,3)}else{const t=this.hasWebMercatorT||this.hasVertexNormals,e=this.hasWebMercatorT&&this.hasVertexNormals;o(attributesIndicesBits12.compressed0,t?4:3),e&&o(attributesIndicesBits12.compressed1,1),this.hasGeodeticSurfaceNormals&&o(attributesIndicesBits12.geodeticSurfaceNormal,3)}return n},TerrainEncoding.prototype.getAttributeLocations=function(){return this.quantization===TerrainQuantization_default.NONE?attributesIndicesNone:attributesIndicesBits12},TerrainEncoding.clone=function(t,e){if(defined_default(t))return defined_default(e)||(e=new TerrainEncoding),e.quantization=t.quantization,e.minimumHeight=t.minimumHeight,e.maximumHeight=t.maximumHeight,e.center=Cartesian3_default.clone(t.center),e.toScaledENU=Matrix4_default.clone(t.toScaledENU),e.fromScaledENU=Matrix4_default.clone(t.fromScaledENU),e.matrix=Matrix4_default.clone(t.matrix),e.hasVertexNormals=t.hasVertexNormals,e.hasWebMercatorT=t.hasWebMercatorT,e.hasGeodeticSurfaceNormals=t.hasGeodeticSurfaceNormals,e.exaggeration=t.exaggeration,e.exaggerationRelativeHeight=t.exaggerationRelativeHeight,e._calculateStrideAndOffsets(),e};var TerrainEncoding_default=TerrainEncoding;export{EllipsoidalOccluder_default,TerrainEncoding_default};
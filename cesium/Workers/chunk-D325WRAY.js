/*! For license information please see chunk-D325WRAY.js.LICENSE.txt */
import{oneTimeWarning_default}from"./chunk-7ONRI7T4.js";import{PolylinePipeline_default}from"./chunk-3FCUUN6M.js";import{EllipsoidTangentPlane_default}from"./chunk-MOLGJDJV.js";import{Quaternion_default,Transforms_default}from"./chunk-D4YHO4NZ.js";import{Cartesian2_default,Cartesian4_default,Matrix4_default}from"./chunk-RSWBNJPT.js";import{Cartesian3_default,Cartographic_default,Matrix3_default}from"./chunk-PHQVHDVI.js";import{Math_default}from"./chunk-IZED7ODV.js";var CornerType={ROUNDED:0,MITERED:1,BEVELED:2},CornerType_default=Object.freeze(CornerType),scratch2Array=[new Cartesian3_default,new Cartesian3_default],scratchCartesian1=new Cartesian3_default,scratchCartesian2=new Cartesian3_default,scratchCartesian3=new Cartesian3_default,scratchCartesian4=new Cartesian3_default,scratchCartesian5=new Cartesian3_default,scratchCartesian6=new Cartesian3_default,scratchCartesian7=new Cartesian3_default,scratchCartesian8=new Cartesian3_default,scratchCartesian9=new Cartesian3_default,scratch1=new Cartesian3_default,scratch2=new Cartesian3_default,PolylineVolumeGeometryLibrary={},cartographic=new Cartographic_default;function scaleToSurface(a,t){const e=new Array(a.length);for(let r=0;r<a.length;r++){const n=a[r];cartographic=t.cartesianToCartographic(n,cartographic),e[r]=cartographic.height,a[r]=t.scaleToGeodeticSurface(n,n)}return e}function subdivideHeights(a,t,e,r){const n=a[0],i=a[1],l=Cartesian3_default.angleBetween(n,i),s=Math.ceil(l/r),o=new Array(s);let c;if(t===e){for(c=0;c<s;c++)o[c]=t;return o.push(e),o}const u=(e-t)/s;for(c=1;c<s;c++){const a=t+c*u;o[c]=a}return o[0]=t,o.push(e),o}var nextScratch=new Cartesian3_default,prevScratch=new Cartesian3_default;function computeRotationAngle(a,t,e,r){const n=new EllipsoidTangentPlane_default(e,r),i=n.projectPointOntoPlane(Cartesian3_default.add(e,a,nextScratch),nextScratch),l=n.projectPointOntoPlane(Cartesian3_default.add(e,t,prevScratch),prevScratch),s=Cartesian2_default.angleBetween(i,l);return l.x*i.y-l.y*i.x>=0?-s:s}var negativeX=new Cartesian3_default(-1,0,0),transform=new Matrix4_default,translation=new Matrix4_default,rotationZ=new Matrix3_default,scaleMatrix=Matrix3_default.IDENTITY.clone(),westScratch=new Cartesian3_default,finalPosScratch=new Cartesian4_default,heightCartesian=new Cartesian3_default;function addPosition(a,t,e,r,n,i,l,s){let o=westScratch,c=finalPosScratch;transform=Transforms_default.eastNorthUpToFixedFrame(a,n,transform),o=Matrix4_default.multiplyByPointAsVector(transform,negativeX,o),o=Cartesian3_default.normalize(o,o);const u=computeRotationAngle(o,t,a,n);rotationZ=Matrix3_default.fromRotationZ(u,rotationZ),heightCartesian.z=i,transform=Matrix4_default.multiplyTransformation(transform,Matrix4_default.fromRotationTranslation(rotationZ,heightCartesian,translation),transform);const d=scaleMatrix;d[0]=l;for(let a=0;a<s;a++)for(let a=0;a<e.length;a+=3)c=Cartesian3_default.fromArray(e,a,c),c=Matrix3_default.multiplyByVector(d,c,c),c=Matrix4_default.multiplyByPoint(transform,c,c),r.push(c.x,c.y,c.z);return r}var centerScratch=new Cartesian3_default;function addPositions(a,t,e,r,n,i,l){for(let s=0;s<a.length;s+=3)r=addPosition(Cartesian3_default.fromArray(a,s,centerScratch),t,e,r,n,i[s/3],l,1);return r}function convertShapeTo3DDuplicate(a,t){const e=a.length,r=new Array(6*e);let n=0;const i=t.x+t.width/2,l=t.y+t.height/2;let s=a[0];r[n++]=s.x-i,r[n++]=0,r[n++]=s.y-l;for(let t=1;t<e;t++){s=a[t];const e=s.x-i,o=s.y-l;r[n++]=e,r[n++]=0,r[n++]=o,r[n++]=e,r[n++]=0,r[n++]=o}return s=a[0],r[n++]=s.x-i,r[n++]=0,r[n++]=s.y-l,r}function convertShapeTo3D(a,t){const e=a.length,r=new Array(3*e);let n=0;const i=t.x+t.width/2,l=t.y+t.height/2;for(let t=0;t<e;t++)r[n++]=a[t].x-i,r[n++]=0,r[n++]=a[t].y-l;return r}var quaterion=new Quaternion_default,startPointScratch=new Cartesian3_default,rotMatrix=new Matrix3_default;function computeRoundCorner(a,t,e,r,n,i,l,s,o,c){const u=Cartesian3_default.angleBetween(Cartesian3_default.subtract(t,a,scratch1),Cartesian3_default.subtract(e,a,scratch2)),d=r===CornerType_default.BEVELED?0:Math.ceil(u/Math_default.toRadians(5));let f,_,h;if(f=n?Matrix3_default.fromQuaternion(Quaternion_default.fromAxisAngle(Cartesian3_default.negate(a,scratch1),u/(d+1),quaterion),rotMatrix):Matrix3_default.fromQuaternion(Quaternion_default.fromAxisAngle(a,u/(d+1),quaterion),rotMatrix),t=Cartesian3_default.clone(t,startPointScratch),d>0){const e=c?2:1;for(let r=0;r<d;r++)t=Matrix3_default.multiplyByVector(f,t,t),_=Cartesian3_default.subtract(t,a,scratch1),_=Cartesian3_default.normalize(_,_),n||(_=Cartesian3_default.negate(_,_)),h=i.scaleToGeodeticSurface(t,scratch2),l=addPosition(h,_,s,l,i,o,1,e)}else _=Cartesian3_default.subtract(t,a,scratch1),_=Cartesian3_default.normalize(_,_),n||(_=Cartesian3_default.negate(_,_)),h=i.scaleToGeodeticSurface(t,scratch2),l=addPosition(h,_,s,l,i,o,1,1),e=Cartesian3_default.clone(e,startPointScratch),_=Cartesian3_default.subtract(e,a,scratch1),_=Cartesian3_default.normalize(_,_),n||(_=Cartesian3_default.negate(_,_)),h=i.scaleToGeodeticSurface(e,scratch2),l=addPosition(h,_,s,l,i,o,1,1);return l}PolylineVolumeGeometryLibrary.removeDuplicatesFromShape=function(a){const t=a.length,e=[];for(let r=t-1,n=0;n<t;r=n++){const t=a[r],i=a[n];Cartesian2_default.equals(t,i)||e.push(i)}return e},PolylineVolumeGeometryLibrary.angleIsGreaterThanPi=function(a,t,e,r){const n=new EllipsoidTangentPlane_default(e,r),i=n.projectPointOntoPlane(Cartesian3_default.add(e,a,nextScratch),nextScratch),l=n.projectPointOntoPlane(Cartesian3_default.add(e,t,prevScratch),prevScratch);return l.x*i.y-l.y*i.x>=0};var scratchForwardProjection=new Cartesian3_default,scratchBackwardProjection=new Cartesian3_default;PolylineVolumeGeometryLibrary.computePositions=function(a,t,e,r,n){const i=r._ellipsoid,l=scaleToSurface(a,i),s=r._granularity,o=r._cornerType,c=n?convertShapeTo3DDuplicate(t,e):convertShapeTo3D(t,e),u=n?convertShapeTo3D(t,e):void 0,d=e.height/2,f=e.width/2;let _=a.length,h=[],C=n?[]:void 0,y=scratchCartesian1,m=scratchCartesian2,p=scratchCartesian3,g=scratchCartesian4,P=scratchCartesian5,w=scratchCartesian6,S=scratchCartesian7,x=scratchCartesian8,T=scratchCartesian9,A=a[0],M=a[1];g=i.geodeticSurfaceNormal(A,g),y=Cartesian3_default.subtract(M,A,y),y=Cartesian3_default.normalize(y,y),x=Cartesian3_default.cross(g,y,x),x=Cartesian3_default.normalize(x,x);let v,D,E=l[0],b=l[1];n&&(C=addPosition(A,x,u,C,i,E+d,1,1)),T=Cartesian3_default.clone(A,T),A=M,m=Cartesian3_default.negate(y,m);for(let t=1;t<_-1;t++){const e=n?2:1;if(M=a[t+1],A.equals(M)){oneTimeWarning_default("Positions are too close and are considered equivalent with rounding error.");continue}y=Cartesian3_default.subtract(M,A,y),y=Cartesian3_default.normalize(y,y),p=Cartesian3_default.add(y,m,p),p=Cartesian3_default.normalize(p,p),g=i.geodeticSurfaceNormal(A,g);const r=Cartesian3_default.multiplyByScalar(g,Cartesian3_default.dot(y,g),scratchForwardProjection);Cartesian3_default.subtract(y,r,r),Cartesian3_default.normalize(r,r);const u=Cartesian3_default.multiplyByScalar(g,Cartesian3_default.dot(m,g),scratchBackwardProjection);if(Cartesian3_default.subtract(m,u,u),Cartesian3_default.normalize(u,u),Math_default.equalsEpsilon(Math.abs(Cartesian3_default.dot(r,u)),1,Math_default.EPSILON7))h=addPosition(T,x,c,h,i,E+d,1,1),T=A;else{p=Cartesian3_default.cross(p,g,p),p=Cartesian3_default.cross(g,p,p),p=Cartesian3_default.normalize(p,p);const a=1/Math.max(.25,Cartesian3_default.magnitude(Cartesian3_default.cross(p,m,scratch1))),t=PolylineVolumeGeometryLibrary.angleIsGreaterThanPi(y,m,A,i);t?(P=Cartesian3_default.add(A,Cartesian3_default.multiplyByScalar(p,a*f,p),P),w=Cartesian3_default.add(P,Cartesian3_default.multiplyByScalar(x,f,w),w),scratch2Array[0]=Cartesian3_default.clone(T,scratch2Array[0]),scratch2Array[1]=Cartesian3_default.clone(w,scratch2Array[1]),v=subdivideHeights(scratch2Array,E+d,b+d,s),D=PolylinePipeline_default.generateArc({positions:scratch2Array,granularity:s,ellipsoid:i}),h=addPositions(D,x,c,h,i,v,1),x=Cartesian3_default.cross(g,y,x),x=Cartesian3_default.normalize(x,x),S=Cartesian3_default.add(P,Cartesian3_default.multiplyByScalar(x,f,S),S),o===CornerType_default.ROUNDED||o===CornerType_default.BEVELED?computeRoundCorner(P,w,S,o,t,i,h,c,b+d,n):(p=Cartesian3_default.negate(p,p),h=addPosition(A,p,c,h,i,b+d,a,e)),T=Cartesian3_default.clone(S,T)):(P=Cartesian3_default.add(A,Cartesian3_default.multiplyByScalar(p,a*f,p),P),w=Cartesian3_default.add(P,Cartesian3_default.multiplyByScalar(x,-f,w),w),scratch2Array[0]=Cartesian3_default.clone(T,scratch2Array[0]),scratch2Array[1]=Cartesian3_default.clone(w,scratch2Array[1]),v=subdivideHeights(scratch2Array,E+d,b+d,s),D=PolylinePipeline_default.generateArc({positions:scratch2Array,granularity:s,ellipsoid:i}),h=addPositions(D,x,c,h,i,v,1),x=Cartesian3_default.cross(g,y,x),x=Cartesian3_default.normalize(x,x),S=Cartesian3_default.add(P,Cartesian3_default.multiplyByScalar(x,-f,S),S),o===CornerType_default.ROUNDED||o===CornerType_default.BEVELED?computeRoundCorner(P,w,S,o,t,i,h,c,b+d,n):h=addPosition(A,p,c,h,i,b+d,a,e),T=Cartesian3_default.clone(S,T)),m=Cartesian3_default.negate(y,m)}E=b,b=l[t+1],A=M}scratch2Array[0]=Cartesian3_default.clone(T,scratch2Array[0]),scratch2Array[1]=Cartesian3_default.clone(A,scratch2Array[1]),v=subdivideHeights(scratch2Array,E+d,b+d,s),D=PolylinePipeline_default.generateArc({positions:scratch2Array,granularity:s,ellipsoid:i}),h=addPositions(D,x,c,h,i,v,1),n&&(C=addPosition(A,x,u,C,i,b+d,1,1)),_=h.length;const B=n?_+C.length:_,V=new Float64Array(B);return V.set(h),n&&V.set(C,_),V};var PolylineVolumeGeometryLibrary_default=PolylineVolumeGeometryLibrary;export{CornerType_default,PolylineVolumeGeometryLibrary_default};
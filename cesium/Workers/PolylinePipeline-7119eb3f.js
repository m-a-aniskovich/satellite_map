define(["exports","./Matrix3-41c58dde","./defaultValue-fe22d8c0","./Check-6ede7e26","./EllipsoidGeodesic-5b3623dc","./EllipsoidRhumbLine-ef872433","./IntersectionTests-85350792","./Math-0a2ac845","./Matrix2-e1298525","./Plane-4c3d403b"],(function(e,t,n,a,i,r,o,s,c,l){"use strict";const u={numberOfPoints:function(e,n,a){const i=t.Cartesian3.distance(e,n);return Math.ceil(i/a)},numberOfPointsRhumbLine:function(e,t,n){const a=Math.pow(e.longitude-t.longitude,2)+Math.pow(e.latitude-t.latitude,2);return Math.max(1,Math.ceil(Math.sqrt(a/(n*n))))}},h=new t.Cartographic;u.extractHeights=function(e,t){const n=e.length,a=new Array(n);for(let i=0;i<n;i++){const n=e[i];a[i]=t.cartesianToCartographic(n,h).height}return a};const f=new c.Matrix4,d=new t.Cartesian3,p=new t.Cartesian3,g=new l.Plane(t.Cartesian3.UNIT_X,0),C=new t.Cartesian3,m=new l.Plane(t.Cartesian3.UNIT_X,0),w=new t.Cartesian3,P=new t.Cartesian3,T=[];function y(e,t,n){const a=T;let i;if(a.length=e,t===n){for(i=0;i<e;i++)a[i]=t;return a}const r=(n-t)/e;for(i=0;i<e;i++){const e=t+i*r;a[i]=e}return a}const A=new t.Cartographic,E=new t.Cartographic,M=new t.Cartesian3,b=new t.Cartesian3,R=new t.Cartesian3,S=new i.EllipsoidGeodesic;let D=new r.EllipsoidRhumbLine;function x(e,n,a,i,r,o,s,c){const l=i.scaleToGeodeticSurface(e,b),h=i.scaleToGeodeticSurface(n,R),f=u.numberOfPoints(e,n,a),d=i.cartesianToCartographic(l,A),p=i.cartesianToCartographic(h,E),g=y(f,r,o);S.setEndPoints(d,p);const C=S.surfaceDistance/f;let m=c;d.height=r;let w=i.cartographicToCartesian(d,M);t.Cartesian3.pack(w,s,m),m+=3;for(let e=1;e<f;e++){const n=S.interpolateUsingSurfaceDistance(e*C,E);n.height=g[e],w=i.cartographicToCartesian(n,M),t.Cartesian3.pack(w,s,m),m+=3}return m}function N(e,n,a,i,o,s,c,l){const h=i.cartesianToCartographic(e,A),f=i.cartesianToCartographic(n,E),d=u.numberOfPointsRhumbLine(h,f,a);h.height=0,f.height=0;const p=y(d,o,s);D.ellipsoid.equals(i)||(D=new r.EllipsoidRhumbLine(void 0,void 0,i)),D.setEndPoints(h,f);const g=D.surfaceDistance/d;let C=l;h.height=o;let m=i.cartographicToCartesian(h,M);t.Cartesian3.pack(m,c,C),C+=3;for(let e=1;e<d;e++){const n=D.interpolateUsingSurfaceDistance(e*g,E);n.height=p[e],m=i.cartographicToCartesian(n,M),t.Cartesian3.pack(m,c,C),C+=3}return C}u.wrapLongitude=function(e,a){const i=[],r=[];if(n.defined(e)&&e.length>0){a=n.defaultValue(a,c.Matrix4.IDENTITY);const s=c.Matrix4.inverseTransformation(a,f),u=c.Matrix4.multiplyByPoint(s,t.Cartesian3.ZERO,d),h=t.Cartesian3.normalize(c.Matrix4.multiplyByPointAsVector(s,t.Cartesian3.UNIT_Y,p),p),T=l.Plane.fromPointNormal(u,h,g),y=t.Cartesian3.normalize(c.Matrix4.multiplyByPointAsVector(s,t.Cartesian3.UNIT_X,C),C),A=l.Plane.fromPointNormal(u,y,m);let E=1;i.push(t.Cartesian3.clone(e[0]));let M=i[0];const b=e.length;for(let a=1;a<b;++a){const s=e[a];if(l.Plane.getPointDistance(A,M)<0||l.Plane.getPointDistance(A,s)<0){const e=o.IntersectionTests.lineSegmentPlane(M,s,T,w);if(n.defined(e)){const n=t.Cartesian3.multiplyByScalar(h,5e-9,P);l.Plane.getPointDistance(T,M)<0&&t.Cartesian3.negate(n,n),i.push(t.Cartesian3.add(e,n,new t.Cartesian3)),r.push(E+1),t.Cartesian3.negate(n,n),i.push(t.Cartesian3.add(e,n,new t.Cartesian3)),E=1}}i.push(t.Cartesian3.clone(e[a])),E++,M=s}r.push(E)}return{positions:i,lengths:r}},u.generateArc=function(e){n.defined(e)||(e={});const i=e.positions;if(!n.defined(i))throw new a.DeveloperError("options.positions is required.");const r=i.length,o=n.defaultValue(e.ellipsoid,t.Ellipsoid.WGS84);let c=n.defaultValue(e.height,0);const l=Array.isArray(c);if(r<1)return[];if(1===r){const e=o.scaleToGeodeticSurface(i[0],b);if(c=l?c[0]:c,0!==c){const n=o.geodeticSurfaceNormal(e,M);t.Cartesian3.multiplyByScalar(n,c,n),t.Cartesian3.add(e,n,e)}return[e.x,e.y,e.z]}let h=e.minDistance;if(!n.defined(h)){const t=n.defaultValue(e.granularity,s.CesiumMath.RADIANS_PER_DEGREE);h=s.CesiumMath.chordLength(t,o.maximumRadius)}let f,d=0;for(f=0;f<r-1;f++)d+=u.numberOfPoints(i[f],i[f+1],h);const p=3*(d+1),g=new Array(p);let C=0;for(f=0;f<r-1;f++)C=x(i[f],i[f+1],h,o,l?c[f]:c,l?c[f+1]:c,g,C);T.length=0;const m=i[r-1],w=o.cartesianToCartographic(m,A);w.height=l?c[r-1]:c;const P=o.cartographicToCartesian(w,M);return t.Cartesian3.pack(P,g,p-3),g};const G=new t.Cartographic,I=new t.Cartographic;u.generateRhumbArc=function(e){n.defined(e)||(e={});const i=e.positions;if(!n.defined(i))throw new a.DeveloperError("options.positions is required.");const r=i.length,o=n.defaultValue(e.ellipsoid,t.Ellipsoid.WGS84);let c=n.defaultValue(e.height,0);const l=Array.isArray(c);if(r<1)return[];if(1===r){const e=o.scaleToGeodeticSurface(i[0],b);if(c=l?c[0]:c,0!==c){const n=o.geodeticSurfaceNormal(e,M);t.Cartesian3.multiplyByScalar(n,c,n),t.Cartesian3.add(e,n,e)}return[e.x,e.y,e.z]}const h=n.defaultValue(e.granularity,s.CesiumMath.RADIANS_PER_DEGREE);let f,d,p=0,g=o.cartesianToCartographic(i[0],G);for(f=0;f<r-1;f++)d=o.cartesianToCartographic(i[f+1],I),p+=u.numberOfPointsRhumbLine(g,d,h),g=t.Cartographic.clone(d,G);const C=3*(p+1),m=new Array(C);let w=0;for(f=0;f<r-1;f++)w=N(i[f],i[f+1],h,o,l?c[f]:c,l?c[f+1]:c,m,w);T.length=0;const P=i[r-1],y=o.cartesianToCartographic(P,A);y.height=l?c[r-1]:c;const E=o.cartographicToCartesian(y,M);return t.Cartesian3.pack(E,m,C-3),m},u.generateCartesianArc=function(e){const n=u.generateArc(e),a=n.length/3,i=new Array(a);for(let e=0;e<a;e++)i[e]=t.Cartesian3.unpack(n,3*e);return i},u.generateCartesianRhumbArc=function(e){const n=u.generateRhumbArc(e),a=n.length/3,i=new Array(a);for(let e=0;e<a;e++)i[e]=t.Cartesian3.unpack(n,3*e);return i};var V=u;e.PolylinePipeline=V}));